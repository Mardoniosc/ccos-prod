{"version":3,"file":"636.cf8d31e847b9d7c1.js","mappings":"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","names":["i0","ClienteListComponent","BaseResourceListComponent","constructor","injector","clienteService","super","this","selectors","ctx","Cliente","BaseResourceModel","id","codigoSupergas","nome","enderecos","cnpj","email","telefone","observacoes","Endereco","logradouro","numero","complemento","bairro","cep","cidade","cidadeId","clienteId","EnderecoService","BaseResourceService","factory","EstadoService","http","getAllEstados","get","env","apiPath","pegarTodasCidadeDoEstado","idEstado","FormEnderecoComponent","BaseResourceFormComponent","matDialogRef","data","enderecoService","estadosService","ngOnInit","endereco","setTimeout","subscribe","estados","estadoSelecionado","resourceForm","value","cidades","fecharJanela","close","salvar","idCliente","find","c","estado","e","adicionar","insert","error","toastr","timeOut","progressBar","closeButton","update","loadResource","patchValue","buildResourceForm","formBuilder","group","Validators","createPageTitle","editionPageTitle","MAT_DIALOG_DATA","ClienteFormComponent","_fuseConfirmationService","_matDialog","currentAction","carregarEnderecos","resource","adicionarEndereco","open","length","afterClosed","result","push","editarEndereco","excluirEndereco","title","message","icon","show","name","color","actions","confirm","label","cancel","dismissible","filter","delete","res","submitForm","map","setValue","routes","path","component","ClienteModule","CommonModule","RouterModule","SharedModule","NgxMaskModule"],"sourceRoot":"webpack:///","sources":["./src/app/modules/ccos/cliente/containers/cliente-list/cliente-list.component.html","./src/app/modules/ccos/cliente/containers/cliente-list/cliente-list.component.ts","./src/app/modules/ccos/cliente/models/cliente.model.ts","./src/app/modules/ccos/cliente/api/endereco.service.ts","./src/app/modules/ccos/cliente/api/estado.service.ts","./src/app/modules/ccos/cliente/components/form-endereco/form-endereco.component.html","./src/app/modules/ccos/cliente/components/form-endereco/form-endereco.component.ts","./src/app/modules/ccos/cliente/containers/cliente-form/cliente-form.component.html","./src/app/modules/ccos/cliente/containers/cliente-form/cliente-form.component.ts","./src/app/modules/ccos/cliente/cliente.module.ts"],"sourcesContent":["<div class=\"absolute inset-0 flex flex-col min-w-0 overflow-hidden bg-card dark:bg-transparent\">\n  <div class=\"flex flex-col flex-auto min-w-0 overflow-y-auto\" cdkScrollable>\n\n    <app-page-header [show-button]=\"true\" page-title=\"Clientes\" placeholder-text=\"Buscar por nome\"\n      (pesquisar)=\"filtrarResource($event)\">\n    </app-page-header>\n\n    <!-- Page body -->\n    <div class=\"flex flex-col flex-auto min-w-0 overflow-y-auto\" cdkScrollable *ngIf=\"length > 0\">\n      <mat-table [dataSource]=\"resources\">\n\n        <ng-container matColumnDef=\"codigoSupergas\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> Cód. Supergas </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            {{ row.codigoSupergas }}\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"nome\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> Nome </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            <span class=\"px-2 truncate ...\">\n              {{ row.nome }}\n            </span>\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"enderecos\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> Endereço </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            {{ row.enderecos }}\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"cnpj\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> CNPJ </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            {{ row.cnpj }}\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"email\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> E-mail </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            {{ row.email }}\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"telefone\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> Telefones </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\" class=\"pl-2\">\n            {{ row.telefone }}\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"observacoes\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> Observação </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            {{ row.observacoes }}\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"acoes\">\n          <mat-header-cell *matHeaderCellDef> Ações </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            <span *ngIf=\"!validaPermissao('MANTER_PERFIL')\">-</span>\n            <span class=\"mr-2 cursor-pointer\" [routerLink]=\"[row.id, 'editar']\"\n              *ngIf=\"validaPermissao('MANTER_PERFIL')\">\n              <mat-icon class=\"text-accent dark:text-accent-300\" svgIcon=\"heroicons_outline:pencil-alt\"></mat-icon>\n            </span>\n            <span (click)=\"excluir(row)\" class=\"cursor-pointer\" *ngIf=\"validaPermissao('MANTER_PERFIL')\">\n              <mat-icon class=\"text-warn-600\" svgIcon=\"heroicons_outline:trash\"></mat-icon>\n            </span>\n          </mat-cell>\n        </ng-container>\n\n        <!-- Header and Row Declarations -->\n        <mat-header-row *matHeaderRowDef=\"['codigoSupergas', 'nome', 'email', 'telefone', 'acoes']\"></mat-header-row>\n        <mat-row *matRowDef=\"let row; columns: ['codigoSupergas', 'nome', 'email', 'telefone', 'acoes']\"></mat-row>\n      </mat-table>\n    </div>\n\n    <!-- NENHUM DADO ENCONTRADO -->\n    <app-not-found-data class=\"h-full\" mensagem=\"Nenhum registro de perfils encontrado!\" *ngIf=\"length <= 0\">\n    </app-not-found-data>\n  </div>\n  <div class=\"flex flex-0 flex-col\" *ngIf=\"length > 0\">\n    <mat-paginator class=\"flex justify-end border-t\" [length]=\"length\" [pageSize]=\"pageSize\"\n      [pageSizeOptions]=\"pageSizeOptions\" (page)=\"paginacao($event)\" aria-label=\"Select page\">\n    </mat-paginator>\n  </div>\n</div>\n","import { Component, Injector, OnInit } from '@angular/core';\nimport { BaseResourceListComponent } from 'app/shared/containers/base-resource-list/base-resource-list.component';\nimport { ClienteService } from '../../api/cliente.service';\nimport { Cliente, ClienteResponse } from '../../models/cliente.model';\n\n@Component({\n  selector: 'app-cliente-list',\n  templateUrl: './cliente-list.component.html',\n  styleUrls: ['./cliente-list.component.scss']\n})\nexport class ClienteListComponent extends BaseResourceListComponent<\nCliente,\nClienteResponse\n> {\nconstructor(\n  protected injector: Injector,\n  protected clienteService: ClienteService\n) {\n  super(injector, clienteService);\n}\n}\n","import { BaseResourceModel } from 'app/shared/models/base-resource.model';\n\nexport class Cliente extends BaseResourceModel {\n  constructor(\n    public id?: number,\n    public codigoSupergas?: string,\n    public nome?: string,\n    public enderecos?: Endereco[],\n    public cnpj?: string,\n    public email?: string,\n    public telefone?: string,\n    public observacoes?: string,\n\n    ) {\n    super();\n  }\n}\n\nexport class ClienteResponse {\n  constructor(\n    public content?: Cliente[],\n    public totalElements?: number,\n    public size?: number,\n    public numberOfElements?: number\n  ) {}\n}\n\nexport class Endereco {\n  constructor(\n    public id?: number,\n    public logradouro?:  string,\n    public numero?: number,\n    public complemento?:  string,\n    public bairro?:  string,\n    public cep?:  string,\n    public cidade?: Cidade,\n    public cidadeId?: number,\n    public clienteId?: number\n  ) {}\n}\n\nexport class EnderecoResponse {\n  constructor(\n    public id?: number,\n  ) {}\n}\n\nexport class Cidade {\n  constructor(\n      public id?: number,\n      public nome?: string,\n      public estado?: Estado,\n  ) {}\n}\n\nexport class Estado {\n  constructor(\n    public id?: number,\n    public nome?: string,\n    public codigoUf?: number,\n    public uf?: string,\n    public regiao?: number,\n  ) {}\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { BaseResourceService } from 'app/shared/services/base-resource.service';\nimport { Endereco, EnderecoResponse } from '../models/cliente.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EnderecoService extends BaseResourceService<\n  Endereco,\n  EnderecoResponse\n> {\n  constructor(protected injector: Injector) {\n    super('/enderecos', injector);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Estado } from '../models/estados.interface';\nimport { environment as env } from 'environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EstadoService {\n  readonly apiPath = '/estados';\n\n  constructor(private http: HttpClient) {}\n\n  getAllEstados(): Observable<Estado[]> {\n    return this.http.get<Estado[]>(`${env.api}${this.apiPath}`);\n  }\n\n  pegarTodasCidadeDoEstado(idEstado: number): Observable<Estado[]> {\n    return this.http.get<Estado[]>(\n      `${env.api}${this.apiPath}/${idEstado}/cidades`\n    );\n  }\n}\n","<div class=\"flex flex-col max-w-240 md:min-w-160 max-h-screen -m-6\">\n  <!-- Header -->\n  <div class=\"flex flex-0 items-center justify-between h-16 pr-3 sm:pr-5 pl-6 sm:pl-8 bg-primary text-on-primary\">\n    <div class=\"text-lg font-medium\">Endereço</div>\n    <button mat-icon-button (click)=\"fecharJanela()\" [tabIndex]=\"-1\">\n      <mat-icon class=\"text-current\" [svgIcon]=\"'heroicons_outline:x'\"></mat-icon>\n    </button>\n  </div>\n\n  <form class=\"flex flex-col flex-auto p-6 sm:p-8 overflow-y-auto\" [formGroup]=\"resourceForm\">\n    <mat-form-field class=\"flex-auto gt-xs:pr-3\">\n      <mat-label>Estado</mat-label>\n      <mat-select formControlName=\"estado\" (selectionChange)=\"estadoSelecionado()\">\n        <mat-option *ngFor=\"let estado of estados\" [value]=\"estado.id\">{{ estado?.nome }}</mat-option>\n      </mat-select>\n      <mat-icon class=\"icon-size-5\" matPrefix [svgIcon]=\"'heroicons_solid:location-marker'\"></mat-icon>\n    </mat-form-field>\n\n    <mat-form-field class=\"flex-auto gt-xs:pr-3\">\n      <mat-label>Cidade</mat-label>\n      <mat-select [formControlName]=\"'cidadeId'\">\n        <mat-option *ngFor=\"let cidade of cidades\" [value]=\"cidade.id\">{{ cidade?.nome }}</mat-option>\n      </mat-select>\n      <mat-icon class=\"icon-size-5\" matPrefix [svgIcon]=\"'heroicons_solid:location-marker'\"></mat-icon>\n    </mat-form-field>\n\n    <div class=\"flex flex-auto flex-wrap\">\n      <div class=\"flex flex-col w-full\">\n        <!-- Logradouro -->\n        <div class=\"flex\">\n          <div class=\"w-3/4 pr-2 flex-col\">\n            <mat-form-field class=\"w-full\">\n              <mat-label>Logradouro</mat-label>\n              <mat-icon class=\"icon-size-5\" [svgIcon]=\"'heroicons_outline:location-marker'\" matPrefix></mat-icon>\n              <input id=\"logradouro\" [formControlName]=\"'logradouro'\" matInput placeholder=\"informa o logradouro\" />\n            </mat-form-field>\n            <app-form-field-error [form-control]=\"resourceForm.get('logradouro')\"></app-form-field-error>\n          </div>\n          <div class=\"w-1/4 pr-2 flex-col\">\n            <mat-form-field class=\"w-full\">\n              <mat-label>Número</mat-label>\n              <mat-icon class=\"icon-size-5\" [svgIcon]=\"'heroicons_outline:location-marker'\" matPrefix></mat-icon>\n              <input type=\"number\" [formControlName]=\"'numero'\" id=\"numero\" matInput placeholder=\"informe o numero\" />\n            </mat-form-field>\n            <app-form-field-error [form-control]=\"resourceForm.get('numero')\"></app-form-field-error>\n          </div>\n        </div>\n        <div class=\"flex\">\n          <div class=\"w-1/2 pr-2 flex-col\">\n            <mat-form-field class=\"w-full\">\n              <mat-label>cep</mat-label>\n              <mat-icon class=\"icon-size-5\" [svgIcon]=\"'heroicons_outline:location-marker'\" matPrefix></mat-icon>\n              <input id=\"cep\" matInput [formControlName]=\"'cep'\" mask=\"00000-000\"\n                placeholder=\"informa o cep do endereço\" />\n            </mat-form-field>\n            <app-form-field-error [form-control]=\"resourceForm.get('cep')\"></app-form-field-error>\n          </div>\n\n          <div class=\"w-1/2 pr-2 flex-col\">\n            <mat-form-field class=\"w-full\">\n              <mat-label>Bairro</mat-label>\n              <mat-icon class=\"icon-size-5\" [svgIcon]=\"'heroicons_outline:location-marker'\" matPrefix></mat-icon>\n              <input id=\"bairro\" [formControlName]=\"'bairro'\" matInput placeholder=\"informa o bairro\" />\n            </mat-form-field>\n            <app-form-field-error [form-control]=\"resourceForm.get('bairro')\"></app-form-field-error>\n          </div>\n        </div>\n        <div class=\"flex\">\n          <mat-form-field class=\"w-full\">\n            <mat-label>Complemento</mat-label>\n            <mat-icon class=\"icon-size-5\" [svgIcon]=\"'heroicons_outline:document-text'\" matPrefix></mat-icon>\n            <input [formControlName]=\"'complemento'\" id=\"complemento\" matInput\n              placeholder=\"informa o complemento da cliente\" />\n          </mat-form-field>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"flex flex-col sm:flex-row sm:items-center justify-between mt-4 sm:mt-6\">\n      <div class=\"flex w-full justify-end mt-4 sm:mt-0\">\n        <button class=\"sm:mx-3\" mat-stroked-button (click)=\"fecharJanela()\">\n          <span>Cancelar</span>\n        </button>\n        <button class=\"order-first sm:order-last\" mat-flat-button [color]=\"'primary'\" (click)=\"salvar()\"\n          [disabled]=\"resourceForm.invalid\">\n          Salvar\n        </button>\n      </div>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit, Inject, Injector } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport {\n  MatDialog,\n  MAT_DIALOG_DATA,\n  MatDialogRef,\n} from '@angular/material/dialog';\nimport { BaseResourceFormComponent } from 'app/shared/containers/base-resource-form';\nimport { EnderecoService } from '../../api/endereco.service';\nimport { EstadoService } from '../../api/estado.service';\nimport { Endereco, EnderecoResponse } from '../../models/cliente.model';\nimport { Cidade, Estado } from '../../models/estados.interface';\nimport toastr from 'toastr';\nimport * as uuid from 'uuid';\n\n@Component({\n  selector: 'app-form-endereco',\n  templateUrl: './form-endereco.component.html',\n  styleUrls: ['./form-endereco.component.scss'],\n})\nexport class FormEnderecoComponent extends BaseResourceFormComponent<\n  Endereco,\n  EnderecoResponse\n> {\n  endereco: Endereco;\n  cidades: Cidade[] = [];\n  estados: Estado[] = [];\n\n  constructor(\n    public matDialogRef: MatDialogRef<FormEnderecoComponent>,\n    @Inject(MAT_DIALOG_DATA)\n    public data: { idCliente: number; endereco: Endereco; adicionar: boolean },\n    protected enderecoService: EnderecoService,\n    protected injector: Injector,\n    protected estadosService: EstadoService\n  ) {\n    super(injector, new Endereco(), enderecoService);\n  }\n\n  ngOnInit(): void {\n    this.endereco = new Endereco();\n    super.ngOnInit();\n    setTimeout(() => {\n      this.estadosService\n        .getAllEstados()\n        .subscribe((estados) => (this.estados = estados));\n    }, 0);\n  }\n\n  estadoSelecionado(): void {\n    const idEstado = this.resourceForm.get('estado').value;\n    this.estadosService\n      .pegarTodasCidadeDoEstado(idEstado)\n      .subscribe((cidades) => (this.cidades = cidades));\n  }\n\n  fecharJanela(): void {\n    this.matDialogRef.close();\n  }\n\n  salvar(): void {\n    this.endereco = this.resourceForm.value;\n    if (!this.data.idCliente) {\n      this.endereco.id = this.data.endereco.id;\n      this.endereco.cidade = this.cidades.find(\n        (c) => c.id === this.endereco.cidadeId\n      );\n      this.endereco.cidade.estado = this.estados.find(\n        (e) => e.id === this.endereco['estado']\n      );\n      this.matDialogRef.close(this.endereco);\n      return;\n    }\n\n    this.endereco.clienteId = this.data.idCliente;\n\n    if (this.data.adicionar) {\n      this.enderecoService.insert(this.endereco).subscribe(\n        () => {\n          this.matDialogRef.close(true);\n        },\n        (error) => {\n          toastr.error(\n            'Não foi possível adicionar o endereço!',\n            error.error.error,\n            {\n              timeOut: 10000,\n              progressBar: true,\n              closeButton: true,\n            }\n          );\n        }\n      );\n    }\n\n    if (!this.data.adicionar) {\n      this.endereco.id = this.data.endereco.id;\n      this.enderecoService.update(this.endereco).subscribe(\n        () => {\n          this.matDialogRef.close(true);\n        },\n        (error) => {\n          toastr.error(\n            'Não foi possível atualizar o endereço!',\n            error.error.error,\n            {\n              timeOut: 10000,\n              progressBar: true,\n              closeButton: true,\n            }\n          );\n        }\n      );\n    }\n  }\n\n  loadResource(): void {\n    if (this.data.endereco.cep) {\n      setTimeout(() => {\n        this.estadosService\n          .pegarTodasCidadeDoEstado(this.data.endereco.cidade.estado.id)\n          .subscribe((cidades) => (this.cidades = cidades));\n        this.resourceForm.patchValue(this.data.endereco);\n        this.resourceForm.patchValue({\n          estado: this.data.endereco.cidade.estado.id,\n          cidadeId: this.data.endereco.cidade.id,\n        });\n      }, 0);\n    }\n  }\n\n  protected buildResourceForm() {\n    this.resourceForm = this.formBuilder.group({\n      estado: [null, [Validators.required]],\n      cidadeId: [null, [Validators.required]],\n      logradouro: [null, [Validators.required]],\n      numero: [null, [Validators.required]],\n      bairro: [null, [Validators.required, Validators.minLength(3)]],\n      cep: [null, [Validators.required, Validators.minLength(8)]],\n      complemento: [null],\n    });\n  }\n\n  protected createPageTitle(): string {\n    return 'Cadastro de Novo Endereco';\n  }\n\n  protected editionPageTitle(): string {\n    return 'Editando endereco';\n  }\n}\n","<div class=\"flex flex-col flex-auto min-w-0\">\n  <div class=\"flex-auto p-6 sm:p-10\">\n    <div class=\"bg-card rounded-2xl shadow overflow-hidden\">\n      <form [formGroup]=\"resourceForm\" class=\"m-4\">\n        <!-- Section -->\n        <div class=\"w-full\">\n          <div class=\"text-xl\">{{ pageTitle }}</div>\n        </div>\n\n        <div class=\"flex flex-auto flex-wrap my-5\">\n          <div class=\"flex flex-col w-full sm:pl-8\">\n            <!-- Destinação -->\n            <div class=\"flex\">\n              <div class=\"w-1/2 pr-2 flex-col\">\n                <mat-form-field class=\"w-full\">\n                  <mat-label>Cod. Supergás</mat-label>\n                  <mat-icon class=\"icon-size-5\" [svgIcon]=\"'heroicons_outline:view-grid'\" matPrefix></mat-icon>\n                  <input id=\"codigoSupergas\" [formControlName]=\"'codigoSupergas'\" matInput\n                    placeholder=\"informa o cod. supergás da cliente\" />\n                </mat-form-field>\n                <app-form-field-error [form-control]=\"resourceForm.get('codigoSupergas')\"></app-form-field-error>\n              </div>\n              <div class=\"w-1/2 pr-2 flex-col\">\n                <mat-form-field class=\"w-full\">\n                  <mat-label>Nome Cliente</mat-label>\n                  <mat-icon class=\"icon-size-5\" [svgIcon]=\"'heroicons_outline:user'\" matPrefix></mat-icon>\n                  <input id=\"nome_id\" [formControlName]=\"'nome'\" matInput placeholder=\"informa o nome da cliente\" />\n                </mat-form-field>\n                <app-form-field-error [form-control]=\"resourceForm.get('nome')\"></app-form-field-error>\n              </div>\n            </div>\n            <div class=\"flex\">\n              <div class=\"w-1/3 pr-2 flex-col\">\n                <mat-form-field class=\"w-full\">\n                  <mat-label>cnpj</mat-label>\n                  <mat-icon class=\"icon-size-5\" [svgIcon]=\"'heroicons_outline:user'\" matPrefix></mat-icon>\n                  <input id=\"cnpj\" [formControlName]=\"'cnpj'\" matInput mask=\"00.000.000/0000-00\"\n                    placeholder=\"informa o cnpj da cliente\" />\n                </mat-form-field>\n                <app-form-field-error [form-control]=\"resourceForm.get('cnpj')\"></app-form-field-error>\n              </div>\n\n              <div class=\"w-1/3 pr-2 flex-col\">\n                <mat-form-field class=\"w-full\">\n                  <mat-label>E-mail</mat-label>\n                  <mat-icon class=\"icon-size-5\" [svgIcon]=\"'heroicons_outline:mail'\" matPrefix></mat-icon>\n                  <input id=\"email\" type=\"email\" [formControlName]=\"'email'\" matInput\n                    placeholder=\"informa o e-mail da cliente\" />\n                </mat-form-field>\n                <app-form-field-error [form-control]=\"resourceForm.get('email')\"></app-form-field-error>\n              </div>\n              <div class=\"w-1/3 pr-2 flex-col\">\n                <mat-form-field class=\"w-full\">\n                  <mat-label>Telefones</mat-label>\n                  <mat-icon class=\"icon-size-5\" [svgIcon]=\"'mat_outline:settings_cell'\" matPrefix></mat-icon>\n                  <input id=\"telefone\" [formControlName]=\"'telefone'\" matInput\n                    placeholder=\"informa o telefone da cliente\" />\n                </mat-form-field>\n                <app-form-field-error [form-control]=\"resourceForm.get('telefone')\"></app-form-field-error>\n              </div>\n            </div>\n            <div class=\"flex\">\n              <mat-form-field class=\"w-full\">\n                <mat-label>Observações</mat-label>\n                <mat-icon class=\"icon-size-5\" [svgIcon]=\"'heroicons_outline:document-text'\" matPrefix></mat-icon>\n                <input id=\"observacoes\" [formControlName]=\"'observacoes'\" matInput\n                  placeholder=\"informa o observacoes da cliente\" />\n              </mat-form-field>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"w-full sm:pl-8\">\n\n          <button (click)=\"adicionarEndereco()\"\n              class=\"flex w-full items-center justify-center border-2 border-gray-300 p-4 border-dashed rounded-lg hover:bg-accent-100 dark:hover:bg-accent-700 hover:shadow-sm\">\n              <mat-icon svgIcon=\"heroicons_outline:plus-sm\"></mat-icon>\n              Adicionar endereço\n            </button>\n\n          <div *ngIf=\"enderecos && enderecos.length > 0\"\n            class=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-2 gap-6 w-full min-w-0 mt-3\">\n            <!-- Endereço -->\n            <div *ngFor=\"let endereco of enderecos; let i = index\"\n              class=\"flex flex-col flex-auto p-6 bg-card shadow rounded-2xl overflow-hidden dark:bg-accent-700 bg-accent-100\">\n              <div class=\"flex items-start justify-between\">\n                <div class=\"text-lg font-medium tracking-tight leading-6 truncate\">\n                  Endereço {{ i + 1 }}\n                </div>\n                <div class=\"ml-2 -mt-2 -mr-3\">\n                  <button mat-icon-button [matMenuTriggerFor]=\"summaryMenu\">\n                    <mat-icon class=\"icon-size-5\" [svgIcon]=\"'heroicons_solid:dots-vertical'\"></mat-icon>\n                  </button>\n                  <mat-menu #summaryMenu=\"matMenu\">\n                    <button mat-menu-item (click)=\"editarEndereco(endereco)\">Editar</button>\n                    <button mat-menu-item (click)=\"excluirEndereco(endereco)\">Excluir</button>\n                  </mat-menu>\n                </div>\n              </div>\n\n              <div class=\"flex flex-col mt-2\">\n                <div class=\"flex item-center\">\n                  <mat-icon class=\"icon-size-5 text-hint mr-1\" [svgIcon]=\"'heroicons_solid:location-marker'\"></mat-icon>\n                  <span>\n                    {{ endereco?.logradouro }} - {{ endereco?.numero }}\n                  </span>\n                </div>\n                <span class=\"ml-6\">\n                  <strong>Bairro: </strong> {{ endereco?.bairro }}\n                </span>\n                <span class=\"ml-6\" *ngIf=\"endereco.complemento\">\n                  <strong>Complemento: </strong> {{ endereco?.complemento }}\n                </span>\n                <span class=\"ml-6\">\n                  {{ endereco?.cidade?.nome }} /\n                  {{ endereco?.cidade?.estado?.uf }}\n                </span>\n                <span class=\"ml-6\">\n                  <strong>CEP: </strong>{{ endereco?.cep }}\n                </span>\n              </div>\n            </div>\n          </div>\n\n          <fuse-alert class=\"mt-2\" [type]=\"'warning'\" [appearance]=\"'outline'\"\n            *ngIf=\"!enderecos || enderecos.length <= 0\">\n            Nenhum <strong>endereço</strong> cadastrado ainda!\n          </fuse-alert>\n        </div>\n\n        <!-- Divider -->\n        <div class=\"mt-11 mb-10 border-t\"></div>\n\n        <!-- Actions -->\n        <div class=\"flex items-center justify-end\">\n          <a routerLink=\"/cliente\" routerLinkActive=\"router-link-active\">\n            <button class=\"fuse-mat-button-rounded mat-flat-button mat-button-base\" mat-stroked-button type=\"button\">\n              Cancelar\n            </button>\n          </a>\n          <button class=\"ml-4 fuse-mat-button-rounded mat-flat-button mat-button-base mat-primary\" mat-flat-button\n            type=\"button\" [disabled]=\"(resourceForm.invalid || enderecos.length <= 0)\" (click)=\"submitForm()\">\n            Salvar\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, Injector, OnInit } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BaseResourceFormComponent } from 'app/shared/containers/base-resource-form';\nimport { ClienteService } from '../../api/cliente.service';\nimport { FormEnderecoComponent } from '../../components/form-endereco/form-endereco.component';\nimport { Cliente, ClienteResponse, Endereco } from '../../models/cliente.model';\nimport toastr from 'toastr';\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\nimport { EnderecoService } from '../../api/endereco.service';\n\n@Component({\n  selector: 'app-cliente-form',\n  templateUrl: './cliente-form.component.html',\n  styleUrls: ['./cliente-form.component.scss'],\n})\nexport class ClienteFormComponent extends BaseResourceFormComponent<\n  Cliente,\n  ClienteResponse\n> {\n  enderecos: Endereco[] = [];\n\n  constructor(\n    protected clienteService: ClienteService,\n    protected injector: Injector,\n    protected _fuseConfirmationService: FuseConfirmationService,\n    protected enderecoService: EnderecoService,\n    private _matDialog: MatDialog\n  ) {\n    super(injector, new Cliente(), clienteService);\n  }\n\n  ngOnInit(): void {\n    this.enderecos = [];\n    super.ngOnInit();\n    if (this.currentAction === 'editar') {\n      setTimeout(() => {\n        this.carregarEnderecos();\n      }, 500);\n    }\n  }\n\n  protected buildResourceForm() {\n    this.resourceForm = this.formBuilder.group({\n      codigoSupergas: [null, [Validators.required, Validators.minLength(2)]],\n      nome: [null, [Validators.required, Validators.minLength(2)]],\n      cnpj: [null, [Validators.required, Validators.minLength(12)]],\n      email: [null, [Validators.required, Validators.email]],\n      telefone: [null, [Validators.required]],\n      observacoes: [null],\n      enderecos: [this.enderecos],\n    });\n  }\n\n  protected carregarEnderecos(): void {\n    this.enderecos = this.resource.enderecos;\n  }\n\n  adicionarEndereco(): void {\n    const enderecoNovo: Endereco = {\n      id: this.enderecos.length + 1,\n    };\n\n    const dialogRef = this._matDialog.open(FormEnderecoComponent, {\n      data: {\n        idCliente: this.resource.id,\n        endereco: enderecoNovo,\n        adicionar: true,\n      },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (!this.resource.id && result) {\n        if (!this.enderecos) this.enderecos = [];\n        this.enderecos.push(result);\n        return;\n      }\n\n      if (result) {\n        toastr.success('Endereço cadastrado com sucesso!', '', {\n          timeOut: 10000,\n          progressBar: true,\n          closeButton: true,\n        });\n\n        this.ngOnInit();\n      }\n    });\n  }\n\n  editarEndereco(endereco: Endereco): void {\n    const dialogRef = this._matDialog.open(FormEnderecoComponent, {\n      data: {\n        idCliente: this.resource.id,\n        endereco: endereco,\n        adicionar: false,\n      },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) {\n        toastr.success('Endereço atualizado com sucesso!', '', {\n          timeOut: 10000,\n          progressBar: true,\n          closeButton: true,\n        });\n\n        this.ngOnInit();\n      }\n    });\n  }\n\n  excluirEndereco(endereco: Endereco): void {\n    const dialogRef = this._fuseConfirmationService.open({\n      title: `Deseja realmente excluir o endereco selecionado?`,\n      message: '',\n      icon: {\n        show: true,\n        name: 'heroicons_outline:exclamation',\n        color: 'warn',\n      },\n      actions: {\n        confirm: {\n          show: true,\n          label: 'Confirmar',\n          color: 'warn',\n        },\n        cancel: {\n          show: true,\n          label: 'Cancelar',\n        },\n      },\n      dismissible: false,\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result === 'confirmed') {\n        if (!this.resource.id) {\n          this.enderecos = this.enderecos.filter((e) => e.id !== endereco.id);\n          return;\n        }\n        this.enderecoService.delete(endereco.id).subscribe(\n          (res) => {\n            toastr.success(`Endereço excluído com sucesso!`, '', {\n              timeOut: 10000,\n              progressBar: true,\n              closeButton: true,\n            });\n            this.enderecos = this.enderecos.filter((e) => e.id !== endereco.id);\n          },\n          (error) => {\n            toastr.error(\n              'Não foi possível excluir o endereço selecionado',\n              error.error.error,\n              {\n                timeOut: 10000,\n                progressBar: true,\n                closeButton: true,\n              }\n            );\n          }\n        );\n      }\n    });\n  }\n\n  submitForm() {\n    if (this.currentAction === 'novo') {\n      this.enderecos = this.enderecos.map((e) => {\n        e.id = null\n        return e;\n      });\n      this.resourceForm.get('enderecos').setValue(this.enderecos);\n    }\n\n    super.submitForm();\n  }\n\n  protected createPageTitle(): string {\n    return 'Cadastro de Novo Cliente';\n  }\n\n  protected editionPageTitle(): string {\n    const clienteNome = this.resource.nome || '';\n    return 'Editando Cliente: ' + clienteNome;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Route, RouterModule } from '@angular/router';\nimport { ClienteListComponent } from './containers/cliente-list/cliente-list.component';\nimport { ClienteFormComponent } from './containers/cliente-form/cliente-form.component';\nimport { SharedModule } from 'app/shared/shared.module';\nimport { FormEnderecoComponent } from './components/form-endereco/form-endereco.component';\nimport { DetalhesClienteComponent } from './components/detalhes-cliente/detalhes-cliente.component';\nimport { NgxMaskModule } from 'ngx-mask';\n\nconst routes: Route[] = [\n  { path: '', component: ClienteListComponent },\n  { path: 'novo', component: ClienteFormComponent },\n  { path: ':id/editar', component: ClienteFormComponent },\n];\n\n@NgModule({\n  declarations: [ClienteListComponent, ClienteFormComponent, FormEnderecoComponent, DetalhesClienteComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    SharedModule,\n    NgxMaskModule.forRoot(),\n  ],\n})\nexport class ClienteModule {}\n"],"x_google_ignoreList":[]}