{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/modules/autentication/index.ts","webpack:///src/app/modules/autentication/login/components/autenticacao.component.ts","webpack:///src/app/modules/autentication/login/components/forgot/forgot.component.ts","webpack:///src/app/modules/autentication/login/components/forgot/forgot.component.html","webpack:///src/app/modules/autentication/login/components/forgot/index.ts","webpack:///src/app/modules/autentication/login/components/index.ts","webpack:///src/app/modules/autentication/login/components/login/index.ts","webpack:///src/app/modules/autentication/login/components/login/login.component.ts","webpack:///src/app/modules/autentication/login/components/login/login.component.html","webpack:///src/app/modules/autentication/login/index.ts","webpack:///src/app/modules/autentication/login/login-routing.module.ts","webpack:///src/app/modules/autentication/login/login.module.ts","webpack:///src/app/modules/ccos/client/cliente.module.ts","webpack:///src/app/modules/ccos/client/components/atualizar/atualizar.component.ts","webpack:///src/app/modules/ccos/client/components/atualizar/atualizar.component.html","webpack:///src/app/modules/ccos/client/components/atualizar/index.ts","webpack:///src/app/modules/ccos/client/components/cadastrar/cadastrar.component.ts","webpack:///src/app/modules/ccos/client/components/cadastrar/cadastrar.component.html","webpack:///src/app/modules/ccos/client/components/cadastrar/index.ts","webpack:///src/app/modules/ccos/client/components/clinet.component.ts","webpack:///src/app/modules/ccos/client/components/index.ts","webpack:///src/app/modules/ccos/client/components/listar/index.ts","webpack:///src/app/modules/ccos/client/components/listar/listar.component.ts","webpack:///src/app/modules/ccos/client/components/listar/listar.component.html","webpack:///src/app/modules/ccos/client/index.ts","webpack:///src/app/modules/ccos/client/router-client.module.ts","webpack:///src/app/modules/ccos/group-service/components/atualizar/atualizar.component.ts","webpack:///src/app/modules/ccos/group-service/components/atualizar/atualizar.component.html","webpack:///src/app/modules/ccos/group-service/components/atualizar/index.ts","webpack:///src/app/modules/ccos/group-service/components/cadastrar/cadastrar.component.ts","webpack:///src/app/modules/ccos/group-service/components/cadastrar/cadastrar.component.html","webpack:///src/app/modules/ccos/group-service/components/cadastrar/index.ts","webpack:///src/app/modules/ccos/group-service/components/group-service.component.ts","webpack:///src/app/modules/ccos/group-service/components/index.ts","webpack:///src/app/modules/ccos/group-service/components/listar-tipo-grupo/index.ts","webpack:///src/app/modules/ccos/group-service/components/listar-tipo-grupo/listar-tipo-grupo.component.ts","webpack:///src/app/modules/ccos/group-service/components/listar-tipo-grupo/listar-tipo-grupo.component.html","webpack:///src/app/modules/ccos/group-service/components/listar-unidade/index.ts","webpack:///src/app/modules/ccos/group-service/components/listar-unidade/listar-unidade.component.ts","webpack:///src/app/modules/ccos/group-service/components/listar-unidade/listar-unidade.component.html","webpack:///src/app/modules/ccos/group-service/components/listar/index.ts","webpack:///src/app/modules/ccos/group-service/components/listar/listar.component.ts","webpack:///src/app/modules/ccos/group-service/components/listar/listar.component.html","webpack:///src/app/modules/ccos/group-service/group-service.module.ts","webpack:///src/app/modules/ccos/group-service/index.ts","webpack:///src/app/modules/ccos/group-service/router-group-service.module.ts","webpack:///src/app/modules/ccos/index.ts","webpack:///src/app/modules/ccos/order-service/components/atualizar/atualizar.component.ts","webpack:///src/app/modules/ccos/order-service/components/atualizar/atualizar.component.html","webpack:///src/app/modules/ccos/order-service/components/atualizar/index.ts","webpack:///src/app/modules/ccos/order-service/components/cadastrar/cadastrar.component.ts","webpack:///src/app/modules/ccos/order-service/components/cadastrar/cadastrar.component.html","webpack:///src/app/modules/ccos/order-service/components/cadastrar/index.ts","webpack:///src/app/modules/ccos/order-service/components/index.ts","webpack:///src/app/modules/ccos/order-service/components/listar/index.ts","webpack:///src/app/modules/ccos/order-service/components/listar/listar.component.ts","webpack:///src/app/modules/ccos/order-service/components/listar/listar.component.html","webpack:///src/app/modules/ccos/order-service/components/order-service.component.ts","webpack:///src/app/modules/ccos/order-service/components/visualizar/index.ts","webpack:///src/app/modules/ccos/order-service/components/visualizar/visualizar.component.ts","webpack:///src/app/modules/ccos/order-service/components/visualizar/visualizar.component.html","webpack:///src/app/modules/ccos/order-service/index.ts","webpack:///src/app/modules/ccos/order-service/order-service.module.ts","webpack:///src/app/modules/ccos/order-service/router-order-service.module.ts","webpack:///src/app/modules/index.ts","webpack:///src/app/modules/shared/components/barra-de-menu/barra-de-menu.component.ts","webpack:///src/app/modules/shared/components/barra-de-menu/barra-de-menu.component.html","webpack:///src/app/modules/shared/components/barra-de-menu/index.ts","webpack:///src/app/modules/shared/components/index.ts","webpack:///src/app/modules/shared/components/menu/index.ts","webpack:///src/app/modules/shared/components/menu/menu.component.ts","webpack:///src/app/modules/shared/components/menu/menu.component.html","webpack:///src/app/modules/shared/components/menu/menu.module.ts","webpack:///src/app/modules/shared/components/not-found/index.ts","webpack:///src/app/modules/shared/components/not-found/not-found.component.ts","webpack:///src/app/modules/shared/components/not-found/not-found.component.html","webpack:///src/app/modules/shared/config/api.config.ts","webpack:///src/app/modules/shared/config/index.ts","webpack:///src/app/modules/shared/config/storangeKeys.config.ts","webpack:///src/app/modules/shared/directives/index.ts","webpack:///src/app/modules/shared/directives/mascara.directive.ts","webpack:///src/app/modules/shared/index.ts","webpack:///src/app/modules/shared/interceptors/auth.interceptor.ts","webpack:///src/app/modules/shared/interceptors/index.ts","webpack:///src/app/modules/shared/pipe/cpf.pipe.ts","webpack:///src/app/modules/shared/pipe/index.ts","webpack:///src/app/modules/shared/services/autenticacao/index.ts","webpack:///src/app/modules/shared/services/autenticacao/login.service.ts","webpack:///src/app/modules/shared/services/autenticacao/user-logged.service.ts","webpack:///src/app/modules/shared/services/ccos/cliente.service.ts","webpack:///src/app/modules/shared/services/ccos/consultacep.service.ts","webpack:///src/app/modules/shared/services/ccos/endereco.service.ts","webpack:///src/app/modules/shared/services/ccos/grupo-servico.service.ts","webpack:///src/app/modules/shared/services/ccos/index.ts","webpack:///src/app/modules/shared/services/ccos/ordem-servico-grupo-servico.service.ts","webpack:///src/app/modules/shared/services/ccos/ordem-servico.service.ts","webpack:///src/app/modules/shared/services/ccos/tipo-grupo-servico.service.ts","webpack:///src/app/modules/shared/services/ccos/unidade-grupo-servico.service.ts","webpack:///src/app/modules/shared/services/guard/autentica-rota-user.service.ts","webpack:///src/app/modules/shared/services/guard/index.ts","webpack:///src/app/modules/shared/services/guard/logged-guard.service.ts","webpack:///src/app/modules/shared/services/guard/user-guard.service.ts","webpack:///src/app/modules/shared/services/index.ts","webpack:///src/app/modules/shared/services/storange.service.ts","webpack:///src/app/modules/shared/services/system/historicoAcesso.service.ts","webpack:///src/app/modules/shared/services/system/index.ts","webpack:///src/app/modules/shared/services/system/perfil-permissao.service.ts","webpack:///src/app/modules/shared/services/system/perfil.service.ts","webpack:///src/app/modules/shared/services/system/permissao.service.ts","webpack:///src/app/modules/shared/services/system/usuario.service.ts","webpack:///src/app/modules/shared/shared.module.ts","webpack:///src/app/modules/shared/util/format-datepicker.ts","webpack:///src/app/modules/shared/util/index.ts","webpack:///src/app/modules/shared/validators/cpf.validator.ts","webpack:///src/app/modules/shared/validators/index.ts","webpack:///src/app/modules/system/dashboard/components/dashboard.component.ts","webpack:///src/app/modules/system/dashboard/components/graficos/bar-chart/bar-chart.component.ts","webpack:///src/app/modules/system/dashboard/components/graficos/bar-chart/bar-chart.component.html","webpack:///src/app/modules/system/dashboard/components/graficos/bar-chart/index.ts","webpack:///src/app/modules/system/dashboard/components/graficos/bubble-chart/bubble-chart.component.ts","webpack:///src/app/modules/system/dashboard/components/graficos/bubble-chart/bubble-chart.component.html","webpack:///src/app/modules/system/dashboard/components/graficos/bubble-chart/index.ts","webpack:///src/app/modules/system/dashboard/components/graficos/doughnut-chart/doughnut-chart.component.ts","webpack:///src/app/modules/system/dashboard/components/graficos/doughnut-chart/doughnut-chart.component.html","webpack:///src/app/modules/system/dashboard/components/graficos/doughnut-chart/index.ts","webpack:///src/app/modules/system/dashboard/components/graficos/index.ts","webpack:///src/app/modules/system/dashboard/components/graficos/line-chart/index.ts","webpack:///src/app/modules/system/dashboard/components/graficos/line-chart/line-chart.component.ts","webpack:///src/app/modules/system/dashboard/components/graficos/line-chart/line-chart.component.html","webpack:///src/app/modules/system/dashboard/components/graficos/pie-chart/index.ts","webpack:///src/app/modules/system/dashboard/components/graficos/pie-chart/pie-chart.component.ts","webpack:///src/app/modules/system/dashboard/components/graficos/pie-chart/pie-chart.component.html","webpack:///src/app/modules/system/dashboard/components/graficos/radar-chart/index.ts","webpack:///src/app/modules/system/dashboard/components/graficos/radar-chart/radar-chart.component.ts","webpack:///src/app/modules/system/dashboard/components/graficos/radar-chart/radar-chart.component.html","webpack:///src/app/modules/system/dashboard/components/home/home.component.ts","webpack:///src/app/modules/system/dashboard/components/home/home.component.html","webpack:///src/app/modules/system/dashboard/components/home/index.ts","webpack:///src/app/modules/system/dashboard/components/index.ts","webpack:///src/app/modules/system/dashboard/dashboard-routing.module.ts","webpack:///src/app/modules/system/dashboard/dashboard.module.ts","webpack:///src/app/modules/system/dashboard/index.ts","webpack:///src/app/modules/system/index.ts","webpack:///src/app/modules/system/log/components/index.ts","webpack:///src/app/modules/system/log/components/lista-logs/index.ts","webpack:///src/app/modules/system/log/components/lista-logs/lista-logs.component.ts","webpack:///src/app/modules/system/log/components/lista-logs/lista-logs.component.html","webpack:///src/app/modules/system/log/components/log-acesso/index.ts","webpack:///src/app/modules/system/log/components/log-acesso/log-acesso.component.ts","webpack:///src/app/modules/system/log/components/log-acesso/log-acesso.component.html","webpack:///src/app/modules/system/log/components/log.component.ts","webpack:///src/app/modules/system/log/index.ts","webpack:///src/app/modules/system/log/log.module.ts","webpack:///src/app/modules/system/log/router-log.module.ts","webpack:///src/app/modules/system/permition/components/cadastrar/cadastrar.component.ts","webpack:///src/app/modules/system/permition/components/cadastrar/cadastrar.component.html","webpack:///src/app/modules/system/permition/components/cadastrar/index.ts","webpack:///src/app/modules/system/permition/components/create-new/create-new.component.ts","webpack:///src/app/modules/system/permition/components/create-new/create-new.component.html","webpack:///src/app/modules/system/permition/components/create-new/index.ts","webpack:///src/app/modules/system/permition/components/index.ts","webpack:///src/app/modules/system/permition/components/listar/index.ts","webpack:///src/app/modules/system/permition/components/listar/listar.component.ts","webpack:///src/app/modules/system/permition/components/listar/listar.component.html","webpack:///src/app/modules/system/permition/components/permissao.component.ts","webpack:///src/app/modules/system/permition/index.ts","webpack:///src/app/modules/system/permition/permition.module.ts","webpack:///src/app/modules/system/permition/router-permition.module.ts","webpack:///src/app/modules/system/profile/components/atualizar/atualizar.component.ts","webpack:///src/app/modules/system/profile/components/atualizar/atualizar.component.html","webpack:///src/app/modules/system/profile/components/atualizar/index.ts","webpack:///src/app/modules/system/profile/components/cadastrar/cadastrar.component.ts","webpack:///src/app/modules/system/profile/components/cadastrar/cadastrar.component.html","webpack:///src/app/modules/system/profile/components/cadastrar/index.ts","webpack:///src/app/modules/system/profile/components/index.ts","webpack:///src/app/modules/system/profile/components/listar/index.ts","webpack:///src/app/modules/system/profile/components/listar/listar.component.ts","webpack:///src/app/modules/system/profile/components/listar/listar.component.html","webpack:///src/app/modules/system/profile/components/perfil.component.ts","webpack:///src/app/modules/system/profile/index.ts","webpack:///src/app/modules/system/profile/profile.module.ts","webpack:///src/app/modules/system/profile/router-profile.module.ts","webpack:///src/app/modules/system/user/components/atualizar/atualizar.component.ts","webpack:///src/app/modules/system/user/components/atualizar/atualizar.component.html","webpack:///src/app/modules/system/user/components/atualizar/index.ts","webpack:///src/app/modules/system/user/components/cadastrar/cadastrar.component.ts","webpack:///src/app/modules/system/user/components/cadastrar/cadastrar.component.html","webpack:///src/app/modules/system/user/components/cadastrar/index.ts","webpack:///src/app/modules/system/user/components/index.ts","webpack:///src/app/modules/system/user/components/listar/index.ts","webpack:///src/app/modules/system/user/components/listar/listar.component.ts","webpack:///src/app/modules/system/user/components/listar/listar.component.html","webpack:///src/app/modules/system/user/components/perfil-user/index.ts","webpack:///src/app/modules/system/user/components/perfil-user/perfil-user.component.ts","webpack:///src/app/modules/system/user/components/perfil-user/perfil-user.component.html","webpack:///src/app/modules/system/user/components/usuario.component.ts","webpack:///src/app/modules/system/user/index.ts","webpack:///src/app/modules/system/user/router-user.module.ts","webpack:///src/app/modules/system/user/user.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","Object","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AutenticacaoComponent","template","ForgotComponent","fb","router","toast","loginService","userService","spinner","subscriptions","usuario","forgot","erroGeral","carregando","ativado1","ativado2","ativado3","ativado4","cpfArray","anoNascimentoArray","cpf5","anoNascimento","CpfCorreto","anoNascimentoCorreto","criarForm","forEach","subscription","unsubscribe","form","group","email","show","invalid","hide","error","timeOut","value","push","getUserByEmail","subscribe","data","getRandomArbitrary","ativarDesativaraba","pegando5digitosCPF","getAnoNascimento","err","cpfcinco","cpf","substr","indice","Math","floor","random","cpfTemp","codigo","Number","dataNascimento","toString","anoTemp","i","randomCpfFake","dataNasicimentoTemp","numeroAba","document","getElementById","click","info","setTimeout","refresh","fire","navigate","errors","erroDTO","status","message","fieldName","tipo","window","location","reload","buscarDadosUser","LoginComponent","usuarioService","storangeService","ppService","userLoggedService","login","localTokenUser","verificaUserLogged","logado","userLogged","required","senha","minLength","logar","token","headers","get","successLogin","getLocalTokenUser","carregarDadosUserLoggado","setLocalUser","carregaPerfilPermissoesLocalStorange","console","log","getAll","setLocalPP","LoginRoutes","children","LoginRoutingModule","forChild","LoginModule","schemas","ClienteModule","AtualizarComponent","route","clienteService","cliente","clienteNovo","clienteId","snapshot","paramMap","carregaDadosCliente","findById","populandoFomulario","codigoSupergas","nome","cnpj","telefone","observacoes","toucheCamposFormulario","update","msg","icon","showConfirmButton","timer","markAsTouched","patchValue","atualizarrCliente","CadastrarComponent","enderecoService","newClienteDTO","mostrarCidade","mostrarEndereco","idCidade","carregaEstados","estado","cidade","cep","logradouro","numero","bairro","complemento","getAllEstados","estados","carregaCidades","getAllEstadoCidades","cidades","cidadeId","insert","estadoSelecionado","cadastrarCliente","ClientComponent","ListarComponent","clientes","clientesFiltrados","carregaDadosclientes","filter","x","trim","toLowerCase","includes","filtraClientePeloNome","ClientRoutes","canActivate","ClientRoutingModule","uGSService","grupoServicoService","unidadeGrupoServicos","unidadeGrupoServico","grupoServicoId","carregaDadosUGS","carregaDadosGrupoServico","codigoSapItem","descSapItem","valorUnitario","descServico","grupoServico","unidadeGrupoServicoId","find","descSapitem","atualizarGrupoServico","tGSService","tipoGrupoServicos","tipoGrupoServico","carregaDadosTGS","tipoGrupoServicoId","cadastrarGrupoServico","GroupServiceComponent","ListarTipoGrupoComponent","tipoGrupoServicoService","carregaDadosTipoGrupoServicos","ListarUnidadeComponent","url","body","script","createElement","innerHTML","src","async","defer","appendChild","grupoServicos","carregaDadosGrupoServicos","GroupServiceModule","useValue","GroupServiceRoutes","GroupServiceRoutingModule","ordemServicoService","ordemServicoGrupoServicoService","startDate","Date","ordemServico","ordemServicoCadastrada","ordemServicoGrupoServico","clienteSelecionado","dadosCliente","clienteFiltrados","grupoServicoSelecionado","dadosGrupoServico","grupoServicosFiltrados","totalServicos","ordemServicoId","carregarClientes","carregarGrupoServico","criarFormGrupoServico","formGrupoServico","adicionarGrupoDeServioOSAtual","populandoFomularioCliente","carregarDadosOsAtual","quantidade","codSap","populandoCodGrupoServico","populandoFormularioGrupoServico","valor","quandoServicoGrupoServico","dadosClienteSelecionado","limparCodSupergas","idOS","idGS","filtraUsuarioPeloNome","filtraGrupoServicoCodSupergas","cadastrarOrdemServico","subTotal","ordemServicos","ordemServicosRelatorio","ordemServicosGrupoServico","oSGS","mostrarRelatorioImpressao","relatorioFormulario","valorTotal","dadosRelatorio","carregaDadosOrdemServicos","carregaDadosOSGS","nomerelatorio","datainicio","datafim","nomeRelatorio","valorTotalOS","gs","osgs","content","options","margin","filename","image","type","html2canvas","scale","jsPDF","orientation","set","from","save","habilitarDesabilitarFormRelatorio","OrderServiceComponent","VisualizarComponent","relatorio","carregaDadosOS","gerarPDF","OrderServiceModule","OrderServiceRoutes","OrderServiceRoutingModule","BarraDeMenuComponent","localStorage","clear","logoff","MenuComponent","storange","perfilPermissaoService","baseUrlServidor","baseUrl","perfilPermissaoDTO","getLocalUser","permissoes","perfil","permissoesFiltradas","filtrarPermissoesStatus","getId","p","descricao","MenuModule","NotFoundComponent","API_CONFIG","STORAGE_KEYS","tokenUser","localUser","localAllUsers","localProfiles","localPermitions","localpefpems","localinfoUser","MascaraDirective","el","nativeElement","aplicarMascara","fn","onChange","onTouched","$event","target","replace","keyCode","pad","mascara","length","valorMask","substring","valorMaskPos","isNaN","parseInt","charAt","indexOf","useExisting","Authinterceptor","storage","next","N","requestToAPI","authReq","clone","handle","CpfPipe","cpfValor","cpfLista","match","name","LoginService","http","localStorangeService","PATH","helper","post","observe","responseType","authorizationValue","tok","decodeToken","sub","setLocalTokenUser","UserLoggedService","providedIn","ClienteService","clienteDTO","put","ConsultaCEPService","EnderecoService","PATHUF","idEstado","GrupoServicoService","OrdemServicoGrupoServicoService","ordemServicoHasGrupoServico","OrdemServicoService","TipoGrupoServicoService","UnidadeGrupoServicoService","AutenticaRotaSerivce","storageService","state","pp","getLocalPP","urlValida","u","statusURLPerfil","perfilId","permissaoId","AuthGuardService","UserGuardService","StorangeService","usr","getItem","JSON","parse","obj","removeItem","setItem","stringify","pfs","pms","pps","HistoricoAcessoService","direction","linesPerPage","orderBy","page","PerfilPermissaoService","perfilID","perfilPermissao","PerfilService","PermissaoService","permissao","UsuarioService","file","patch","SharedModule","AppDateAdapter","date","displayFormat","day","getDate","month","getMonth","year","getFullYear","toDateString","APP_DATE_FORMATS","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","CpfValidator","control","cpfValido","cpfsInvsRegex","test","digitosTemp","h","digitos","cpfSemDigVer","j","digVerificador","DashboardComponent","BarChartComponent","barChartOptions","responsive","barChartLabels","barChartType","barChartLegend","barChartPlugins","barChartData","label","BubbleChartComponent","bubbleChartOptions","scales","xAxes","ticks","min","max","yAxes","bubbleChartType","bubbleChartLegend","bubbleChartData","y","r","DoughnutChartComponent","doughnutChartLabels","doughnutChartData","doughnutChartType","LineChartComponent","lineChartPlugins","carregaDadosGrafico","lineChartData","lineChartLabels","lineChartOptions","lineChartColors","borderColor","backgroundColor","lineChartLegend","lineChartType","PieChartComponent","pieChartOptions","pieChartLabels","pieChartData","pieChartType","pieChartLegend","pieChartPlugins","RadarChartComponent","radarChartOptions","radarChartLabels","radarChartData","radarChartType","HomeComponent","Dashboardoutes","DashboardRoutingModule","DashboardModule","ListaLogsComponent","LogAcessoComponent","historicoAcessoService","perfilService","paginacao","numerosDePaginas","carregaHistoricoUsuario","carregaPerfils","carregaUsers","getAllHistoryAccessPagination","historicoAcessoDTO","carregaPaginas","Array","totalPages","fill","usuarios","setLocalPerfils","infoDesejada","usuariosFiltrados","user","imagem","LogComponent","LogModule","LogRoutes","LogRoutingModule","snackBar","permissaoService","perfilHasPermissao","idPerfilSelecionado","perfilSelecionadoTrue","checkBoxSelecionadosArray","reloadPermissoesPerfil","getLocalPermition","listarTodosPerfils","listarTodasPermissoes","listarTodasPerfilHasPermissao","setLocalPermition","splice","perfils","perfilPermissoes","getLocalPerfils","verificaPermissaoDisponivelParaOPerfil","resultado","idPerfil","idPermissao","result","open","duration","pegarPerfil","pergarPermissao","cadastrarPerfilHasPermissao","cadastrar","CreateNewComponent","permissoesSerivce","permissaoDTO","carregaPermissoes","permissaopai","permissaoPai","success","cadastrarNovaPermissao","carregaPerfilHasPermition","perfilPermi","showCancelButton","cancelButtonText","confirmButtonText","PermissaoComponent","PermitionModule","PermitionRoutes","PermitionRoutingModule","carregaPerfilNome","populandoForm","atualizarPerfil","cadastrarPerfil","response","PerfilComponent","ProfileModule","ProfileRoutes","ProfileRoutingModule","usuarioNew","userId","buscarUserId","datanascimento","getUserById","atualizarUsuario","criado","cadastrarUsuario","userDetalhes","carregarUsuarios","updateStatus","text","PerfilUserComponent","FormData","carregaDadosUsuario","event","files","setValue","append","updateImage","atualizaDadosUser","onFileSelect","atualizarImagePerfil","UsuarioComponent","UserRoutes","UserRoutingModule","UserModule","environment","production","baseURL","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NotFoundComponent } from './modules';\n\nexport const routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: '**', component: NotFoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'corebasef';\n}\n","<router-outlet></router-outlet>\n<div class=\"footer\">\n  <div class=\"pull-right\">\n      Beta versão 1.0.0\n  </div>\n  <div>\n      <strong>Sistema CCOS</strong> Serviços DF &copy; 2020\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\n\nimport {\n  LoginModule,\n  LoginRoutingModule,\n  DashboardModule,\n  DashboardRoutingModule,\n  MenuModule,\n  SharedModule,\n  UserModule,\n  UserRoutingModule,\n  ProfileModule,\n  ProfileRoutingModule,\n  PermitionModule,\n  PermitionRoutingModule,\n  LogModule,\n  LogRoutingModule,\n  ClienteModule,\n  ClientRoutingModule,\n  GroupServiceModule,\n  GroupServiceRoutingModule,\n  OrderServiceModule,\n  OrderServiceRoutingModule,\n  Authinterceptor,\n} from './modules';\n\nimport { AppRoutingModule } from './app-routing.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    LoginModule,\n    LoginRoutingModule,\n    RouterModule,\n    DashboardModule,\n    DashboardRoutingModule,\n    MenuModule,\n    SharedModule,\n    HttpClientModule,\n    UserModule,\n    UserRoutingModule,\n    BrowserAnimationsModule,\n    ProfileModule,\n    ProfileRoutingModule,\n    PermitionModule,\n    PermitionRoutingModule,\n    LogModule,\n    LogRoutingModule,\n    ClienteModule,\n    ClientRoutingModule,\n    GroupServiceModule,\n    GroupServiceRoutingModule,\n    OrderServiceModule,\n    OrderServiceRoutingModule,\n    HttpClientModule,\n\n    ToastrModule.forRoot(),\n    AppRoutingModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: Authinterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","export * from './login';\n","import { Component } from '@angular/core';\n\n@Component({ template: `<router-outlet></router-outlet>` })\nexport class AutenticacaoComponent {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport {\n  Forgot,\n  ErroDTO,\n  ErroGeral,\n  LoginService,\n  Usuario,\n  UsuarioService,\n} from 'src/app/modules/shared';\n\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\n\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\n\nimport Swal from 'sweetalert2';\n\ninterface RadioButtonInterface {\n  codigo: number;\n  value: number;\n}\n\n@Component({\n  selector: 'app-forgot',\n  templateUrl: './forgot.component.html',\n  styleUrls: ['./forgot.component.css'],\n})\nexport class ForgotComponent implements OnInit {\n  form: FormGroup;\n\n  private subscriptions: Subscription[] = [];\n\n  usuario = {} as Usuario;\n\n  forgot = {} as Forgot;\n\n  erroGeral = {} as ErroGeral;\n\n  erroDTO: ErroDTO;\n\n  carregando = false;\n\n  ativado1 = true;\n\n  ativado2 = false;\n\n  ativado3 = false;\n\n  ativado4 = false;\n\n  cpfArray: RadioButtonInterface[] = [];\n\n  anoNascimentoArray: RadioButtonInterface[] = [];\n\n  cpf5 = {} as RadioButtonInterface;\n\n  anoNascimento = {} as RadioButtonInterface;\n\n  CpfCorreto = false;\n\n  anoNascimentoCorreto = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private toast: ToastrService,\n    private loginService: LoginService,\n    private userService: UsuarioService,\n    private spinner: NgxSpinnerService,\n  ) {}\n\n  ngOnInit(): void {\n    this.criarForm();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  criarForm(): void {\n    this.form = this.fb.group({\n      email: ['', [Validators.email]],\n    });\n  }\n\n  buscarDadosUser(): void {\n    this.spinner.show();\n    if (this.form.invalid) {\n      this.spinner.hide();\n      this.toast.error('E-mail inválido', 'Erro no preenchimento', {\n        timeOut: 3000,\n      });\n      this.carregando = false;\n      return;\n    }\n\n    this.forgot = this.form.value;\n\n    this.subscriptions.push(\n      this.userService.getUserByEmail(this.forgot.email).subscribe(\n        (data) => {\n          this.getRandomArbitrary();\n          this.spinner.hide();\n          this.usuario = data;\n          this.ativarDesativaraba(2);\n          this.pegando5digitosCPF();\n          this.getAnoNascimento();\n        },\n        (err) => {\n          const title = `Erro 404`;\n          this.spinner.hide();\n          this.toast.error('Usuário não encontrado na base de dados', title, {\n            timeOut: 3000,\n          });\n        },\n      ),\n    );\n  }\n\n  pegando5digitosCPF(): void {\n    const cpfcinco = this.usuario.cpf.substr(0, 5);\n    const indice = Math.floor(Math.random() * 4);\n    const cpfTemp = {} as RadioButtonInterface;\n    cpfTemp.codigo = Number(cpfcinco);\n    cpfTemp.value = indice;\n    this.cpf5 = cpfTemp;\n    this.cpfArray[indice] = cpfTemp;\n  }\n\n  getAnoNascimento(): void {\n    let anoNascimento = this.usuario.dataNascimento.toString();\n    anoNascimento = anoNascimento.substr(0, 4);\n    const indice = Math.floor(Math.random() * 4);\n    const anoTemp = {} as RadioButtonInterface;\n    anoTemp.codigo = Number(anoNascimento);\n    anoTemp.value = indice;\n    this.anoNascimento = anoTemp;\n    this.anoNascimentoArray[indice] = anoTemp;\n  }\n\n  getRandomArbitrary(): void {\n    this.cpfArray = [];\n    this.anoNascimentoArray = [];\n    for (let i = 0; i < 4; i += 1) {\n      const randomCpfFake = Math.floor(Math.random() * (99889 - 10000) + 10000);\n      const cpfTemp = {} as RadioButtonInterface;\n      cpfTemp.codigo = randomCpfFake;\n      cpfTemp.value = i;\n      this.cpfArray.push(cpfTemp);\n    }\n\n    for (let i = 0; i < 4; i += 1) {\n      const randomCpfFake = Math.floor(Math.random() * (2020 - 1920) + 1920);\n      const dataNasicimentoTemp = {} as RadioButtonInterface;\n      dataNasicimentoTemp.codigo = randomCpfFake;\n      dataNasicimentoTemp.value = i;\n      this.anoNascimentoArray.push(dataNasicimentoTemp);\n    }\n  }\n\n  ativarDesativaraba(numeroAba: number): void {\n    switch (numeroAba) {\n      case 1:\n        this.ativado1 = true;\n        document.getElementById('aba1').click();\n        break;\n      case 2:\n        this.ativado2 = true;\n        document.getElementById('aba2').click();\n        break;\n      case 3:\n        this.ativado3 = true;\n        document.getElementById('aba3').click();\n        break;\n      case 4:\n        this.ativado4 = true;\n        document.getElementById('aba4').click();\n        break;\n      default:\n        this.ativado1 = true;\n        document.getElementById('aba1').click();\n    }\n  }\n\n  enviarEmail() {\n    if (!(this.CpfCorreto && this.anoNascimentoCorreto)) {\n      this.toast.info(\n        'Ano de nascimento/CPF não confere',\n        'Erro de validação',\n        {\n          timeOut: 4000,\n        },\n      );\n\n      setTimeout(() => {\n        this.refresh();\n      }, 3000);\n      return;\n    }\n\n    this.spinner.show();\n    this.subscriptions.push(\n      this.loginService.forgot(this.forgot).subscribe(\n        (data) => {\n          this.spinner.hide();\n          Swal.fire(\n            'Gerado nova senha com sucesso!',\n            'Favor verificar seu e-mail',\n            'success',\n          );\n          this.router.navigate(['/login']);\n        },\n        (err) => {\n          this.erroGeral = err.error;\n          this.spinner.hide();\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                {\n                  timeOut: 4000,\n                },\n              );\n            });\n            setTimeout(() => {\n              this.refresh();\n            }, 3000);\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 4000,\n            });\n            setTimeout(() => {\n              this.refresh();\n            }, 3000);\n          }\n        },\n      ),\n    );\n  }\n\n  validaCpfOuAnoNascimento(indice: number, tipo: number): void {\n    if (tipo === 1) {\n      if (this.cpf5.value === indice) {\n        this.CpfCorreto = true;\n      } else {\n        this.CpfCorreto = false;\n      }\n    }\n\n    if (tipo === 2) {\n      if (this.anoNascimento.value === indice) {\n        this.anoNascimentoCorreto = true;\n      } else {\n        this.anoNascimentoCorreto = false;\n      }\n    }\n  }\n\n  refresh(): void {\n    window.location.reload();\n  }\n}\n","<ngx-spinner [fullScreen]=\"false\" type=\"ball-clip-rotate-multiple\" size=\"medium\">\n  <h2 style=\"color: white;\">Carregando...</h2>\n</ngx-spinner>\n<div class=\"body\">\n  <div class=\"container\">\n\n    <div>\n      <h1 class=\"logo-name\">MSC+</h1>\n    </div>\n    <h3>Dados para reset de senha</h3>\n\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n        <div class=\"tabs-container\">\n            <ul class=\"nav nav-tabs\">\n                <li class=\"active\"><a id=\"aba1\" data-toggle=\"tab\" href=\"#tab-1\"> 1° - E-mail</a></li>\n                <li class=\"\"><a id=\"aba2\" data-toggle=\"tab\" href=\"#tab-2\">2° - CPF</a></li>\n                <li class=\"\"><a id=\"aba3\" data-toggle=\"tab\" href=\"#tab-3\">3° - Data de Nascimento</a></li>\n                <li class=\"\"><a id=\"aba4\" data-toggle=\"tab\" href=\"#tab-4\">4° - Reset de Senha</a></li>\n            </ul>\n            <div class=\"tab-content\">\n                <div id=\"tab-1\" class=\"tab-pane active\">\n                  <form [formGroup]=\"form\" novalidate>\n                    <div class=\"form-group\">\n                        <input\n                          style=\"margin-top: 20px;\"\n                          type=\"email\"\n                          formControlName=\"email\"\n                          class=\"form-control input-underline input-lg\"\n                          id=\"email\"\n                          placeholder=\"Seu e-mail de cadastro\">\n                      </div>\n                    <button type=\"button\" (click)=\"buscarDadosUser()\" class=\"btn btn-primary block\">Buscar Cadastro Usuário</button>\n                </form>\n                </div>\n                <div id=\"tab-2\" class=\"tab-pane\">\n                  <div *ngIf=\"ativado2\">\n                    <h3>Selecione o item que seja igual aos 5 primeiros digitos do seu CPF</h3>\n                    <mat-radio-group style=\"margin-top: 20px; margin-left: 30px;\" aria-label=\"Select an option\">\n                      <mat-radio-button\n                        *ngFor=\"let cpf of cpfArray\"\n                        #cpf5User\n                        (click)=\"validaCpfOuAnoNascimento(cpf5User.value, 1)\"\n                        [value]=\"cpf.value\"\n                      >\n                        {{ cpf.codigo }}\n\n                      </mat-radio-button>\n                    </mat-radio-group>\n                    <br>\n                    <button style=\"margin-top: 20px;\" (click)=\"ativarDesativaraba(3)\" class=\"btn btn-primary\">Próximo</button>\n                  </div>\n                  <h1 *ngIf=\"!ativado2\">Necessário preenchimento do e-mail</h1>\n                </div>\n                <div id=\"tab-3\" class=\"tab-pane\">\n                  <div *ngIf=\"ativado3\">\n                    <h3>Selecione o ano de nascimento</h3>\n\n                    <mat-radio-group style=\"margin-top: 30px;\" aria-label=\"Select an option\">\n                      <mat-radio-button\n                        *ngFor=\"let ano of anoNascimentoArray\"\n                        #anoNascimentoUser\n                        (click)=\"validaCpfOuAnoNascimento(anoNascimentoUser.value, 2)\"\n                        [value]=\"ano.value\"\n                      >\n                        {{ ano.codigo }}\n                      </mat-radio-button>\n                    </mat-radio-group>\n                    <br>\n                    <button style=\"margin-top: 20px;\" (click)=\"ativarDesativaraba(4)\" class=\"btn btn-primary\">Próximo</button>\n                  </div>\n                  <h1 *ngIf=\"!ativado3\">Necessário preenchimento do e-mail e CPF</h1>\n\n                </div>\n                <div id=\"tab-4\" class=\"tab-pane\">\n                  <button *ngIf=\"ativado4\" style=\"margin-top: 20px;\" class=\"btn btn-primary block full-width m-b\" (click)=\"enviarEmail()\">Resetar Senha</button>\n                  <h1 *ngIf=\"!ativado4\">Necessário preenchimento do e-mail, CPF e Data de Nascimento</h1>\n                </div>\n            </div>\n        </div>\n        <br>\n        <a href=\"/login\"><small>Voltar para tela de login</small></a>\n      </div>\n    </div>\n  </div>\n</div>\n","export * from './forgot.component';\n","export * from './login';\nexport * from './forgot';\nexport * from './autenticacao.component';\n","export * from './login.component';\n","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\n\nimport { NgxSpinnerService } from 'ngx-spinner';\n\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  Login,\n  LoginService,\n  ErroGeral,\n  ErroDTO,\n  UserLoggedService,\n  StorangeService,\n  TokenUser,\n  PerfilPermissaoService,\n  UsuarioService,\n} from 'src/app/modules/shared';\n\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  login = {} as Login;\n\n  erroGeral = {} as ErroGeral;\n\n  erroDTO: ErroDTO;\n\n  form: FormGroup;\n\n  localTokenUser = {} as TokenUser;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private loginService: LoginService,\n    private usuarioService: UsuarioService,\n    private storangeService: StorangeService,\n    private ppService: PerfilPermissaoService,\n    private userLoggedService: UserLoggedService,\n    private toast: ToastrService,\n    private spinner: NgxSpinnerService,\n  ) {}\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  ngOnInit(): void {\n    this.criarForm();\n    this.verificaUserLogged();\n  }\n\n  verificaUserLogged(): void {\n    const logado = this.userLoggedService.userLogged();\n\n    if (logado) {\n      this.router.navigate(['/dashboard']);\n    }\n  }\n\n  criarForm(): void {\n    this.form = this.fb.group({\n      login: ['', [Validators.required, Validators.email]],\n      senha: ['', [Validators.required, Validators.minLength(6)]],\n    });\n  }\n\n  logar(): void {\n    this.spinner.show();\n    if (this.form.invalid) {\n      this.toast.error(\n        'Preechimento inválido do formularios de login',\n        'Erro ao ler dados',\n        { timeOut: 3000 },\n      );\n      this.spinner.hide();\n      return;\n    }\n\n    this.login = this.form.value;\n    this.subscriptions.push(\n      this.loginService.logar(this.login).subscribe(\n        (data) => {\n          const token = data.headers.get('Authorization');\n          this.loginService.successLogin(token);\n          this.localTokenUser = this.storangeService.getLocalTokenUser();\n          this.carregarDadosUserLoggado();\n        },\n        (err) => {\n          this.erroGeral = err.error;\n          this.spinner.hide();\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { timeOut: 4000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  carregarDadosUserLoggado(): void {\n    this.usuarioService.getUserByEmail(this.localTokenUser.email).subscribe(\n      (data) => {\n        if (data.status === 1) {\n          this.storangeService.setLocalUser(data);\n          this.carregaPerfilPermissoesLocalStorange();\n        } else {\n          this.spinner.hide();\n          this.toast.error('Usuario Desativado', 'Erro', {\n            timeOut: 4000,\n          });\n        }\n      },\n\n      (err) => console.log(err),\n    );\n  }\n\n  refresh(): void {\n    window.location.reload();\n  }\n\n  carregaPerfilPermissoesLocalStorange(): void {\n    this.ppService.getAll().subscribe((data) => {\n      this.storangeService.setLocalPP(data);\n      this.spinner.hide();\n      this.refresh();\n    });\n  }\n}\n","<ngx-spinner color = \"#fff\" [fullScreen] = \"true\" type=\"ball-clip-rotate-multiple\" >\n  <h1 style=\"color: aliceblue;\">\n    Logando...\n  </h1>\n</ngx-spinner>\n<div class=\"body\">\n  <div class=\"middle-box text-center loginscreen animated fadeInDown\">\n    <div>\n        <div>\n            <h1 class=\"logo-name\">CCOS</h1>\n        </div>\n        <h3>Bem-Vindo ao CCOS</h3>\n\n        <p>Informe seu e-mail e senha para acesso!</p>\n        <form [formGroup]=\"form\" novalidate>\n            <div class=\"form-group\">\n                <input\n                  type=\"email\"\n                  formControlName=\"login\"\n                  class=\"form-control input-underline input-lg\"\n                  id=\"email\"\n                  placeholder=\"Nome de usuário\">\n              </div>\n            <div class=\"form-group\">\n              <input type=\"password\" formControlName=\"senha\" class=\"form-control input-underline input-lg\" id=\"senha\" placeholder=\"Senha\">\n            </div>\n            <button type=\"button\" (click)=\"logar()\" class=\"btn btn-primary block full-width m-b\">Logar</button>\n\n            <a href=\"/login/forgot\"><small>Esqueci minha senha?</small></a>\n        </form>\n\n  <script src=\"../../../../../../assets/js/jquery-3.1.1.min.js\"></script>\n  <script src=\"../../../../../../assets/js/bootstrap.min.js\"></script>\n</div>\n","export * from './login-routing.module';\nexport * from './login.module';\n","import { NgModule } from '@angular/core';\n\nimport { RouterModule, Routes } from '@angular/router';\n\nimport {\n  LoginComponent,\n  ForgotComponent,\n  AutenticacaoComponent,\n} from './components';\n\nexport const LoginRoutes: Routes = [\n  {\n    path: 'login',\n    component: AutenticacaoComponent,\n    children: [\n      { path: '', component: LoginComponent },\n      { path: 'forgot', component: ForgotComponent },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(LoginRoutes)],\n\n  exports: [RouterModule],\n})\nexport class LoginRoutingModule {}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport {\n  LoginComponent,\n  ForgotComponent,\n  AutenticacaoComponent,\n} from './components';\n\nimport { SharedModule } from '../../shared';\n\n@NgModule({\n  declarations: [LoginComponent, ForgotComponent, AutenticacaoComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    SharedModule,\n    NgxSpinnerModule,\n    MatSnackBarModule,\n    MatRadioModule,\n    MatProgressSpinnerModule,\n    RouterModule,\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class LoginModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\nimport {\n  AtualizarComponent,\n  CadastrarComponent,\n  ListarComponent,\n  ClientComponent,\n} from './components';\nimport { MenuModule, SharedModule } from '../../shared';\n\n@NgModule({\n  declarations: [\n    AtualizarComponent,\n    CadastrarComponent,\n    ListarComponent,\n    ClientComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule,\n    NgxSpinnerModule,\n    SharedModule,\n    MenuModule,\n  ],\n})\nexport class ClienteModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport {\n  ClienteService,\n  Cliente,\n  ErroDTO,\n  ErroGeral,\n} from 'src/app/modules/shared';\nimport { Subscription } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-atualizar',\n  templateUrl: './atualizar.component.html',\n  styleUrls: ['./atualizar.component.css'],\n})\nexport class AtualizarComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  erroGeral = {} as ErroGeral;\n\n  erroDTO = {} as ErroDTO;\n\n  cliente = {} as Cliente;\n\n  clienteNovo = {} as Cliente;\n\n  form: FormGroup;\n\n  clienteId: string;\n\n  constructor(\n    private fb: FormBuilder,\n    private spinner: NgxSpinnerService,\n    private route: ActivatedRoute,\n    private clienteService: ClienteService,\n    private toast: ToastrService,\n  ) {}\n\n  ngOnInit(): void {\n    this.criarForm();\n    this.clienteId = this.route.snapshot.paramMap.get('clienteid');\n    this.carregaDadosCliente();\n  }\n\n  carregaDadosCliente(): void {\n    this.subscriptions.push(\n      this.clienteService.findById(Number(this.clienteId)).subscribe(\n        (data) => {\n          this.cliente = data;\n          this.populandoFomulario();\n        },\n        (err) => console.log(err),\n      ),\n    );\n  }\n\n  criarForm(): void {\n    this.form = this.fb.group({\n      codigoSupergas: ['', Validators.required],\n      nome: ['', Validators.required],\n      cnpj: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      telefone: ['', Validators.required],\n      observacoes: ['', Validators.required],\n    });\n  }\n\n  atualizarrCliente(): void {\n    this.spinner.show();\n\n    if (this.form.invalid) {\n      this.spinner.hide();\n      this.toast.error('Formulário com campos invalidos', 'Erro!', {\n        timeOut: 4000,\n      });\n      this.toucheCamposFormulario();\n      return;\n    }\n\n    this.clienteNovo = this.form.value;\n    this.clienteNovo.id = Number(this.clienteId);\n\n    this.subscriptions.push(\n      this.clienteService.update(this.clienteNovo).subscribe(\n        (data) => {\n          const msg = 'Cliente atualizado com sucesso!';\n          this.spinner.hide();\n\n          Swal.fire({\n            title: msg,\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 3000,\n          });\n          setTimeout(() => {\n            this.refresh();\n          }, 2900);\n        },\n        (err) => console.log(err),\n      ),\n    );\n    this.spinner.hide();\n  }\n\n  toucheCamposFormulario(): void {\n    this.form.get('codigoSupergas').markAsTouched();\n    this.form.get('nome').markAsTouched();\n    this.form.get('cnpj').markAsTouched();\n    this.form.get('email').markAsTouched();\n    this.form.get('telefone').markAsTouched();\n    this.form.get('observacoes').markAsTouched();\n  }\n\n  populandoFomulario(): void {\n    this.form.patchValue({\n      codigoSupergas: this.cliente.codigoSupergas,\n      nome: this.cliente.nome,\n      cnpj: this.cliente.cnpj,\n      telefone: this.cliente.telefone,\n      observacoes: this.cliente.observacoes,\n      email: this.cliente.email,\n    });\n  }\n\n  refresh(): void {\n    window.location.reload();\n  }\n}\n","<ngx-spinner color = \"#fff\" [fullScreen] = \"true\" type=\"ball-clip-rotate-multiple\" >\n  <h1 style=\"color: aliceblue;\">\n    Cadastrando...\n  </h1>\n</ngx-spinner>\n<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n\n      <div class=\"wrapper wrapper-content animated fadeInRight\">\n          <div class=\"row\">\n              <div class=\"col-lg-12\">\n                  <div class=\"ibox float-e-margins\">\n                      <div class=\"ibox-title\">\n                          <h5>Formulário para preenchimento &nbsp;&nbsp;<b class=\"text-danger\"><i class='fa fa-exclamation'></i> Campos obrigatórios</b></h5>\n                          <div class=\"ibox-tools\">\n                              <a class=\"collapse-link\">\n                                  <i class=\"fa fa-chevron-up\"></i>\n                              </a>\n                          </div>\n                      </div>\n                      <div class=\"ibox-content\">\n\n\n                        <form class=\"form-horizontal\" [formGroup]=\"form\" novalidate>\n                          <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Cod. Supergas <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\">\n                                  <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-vcard'></i></span>\n                                      <input type=\"text\" class=\"form-control\" formControlName=\"codigoSupergas\" name=\"codigoSupergas\" required></div>\n                                      <small *ngIf=\"form.get('codigoSupergas').valid && form.get('codigoSupergas').touched\" class=\"form-text text-success\" >ok</small>\n                                      <small *ngIf=\"!form.get('codigoSupergas').valid && form.get('codigoSupergas').touched\"class=\"form-text text-danger\" >Campo Cod. Supergas requerido</small>\n                              </div>\n                          </div>\n\n                          <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Nome <i class='fa fa-exclamation text-danger'></i></label>\n                            <div class=\"col-sm-10\">\n                                <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-vcard'></i></span>\n                                    <input type=\"text\" class=\"form-control\" formControlName=\"nome\" name=\"nome\" required></div>\n                                    <small *ngIf=\"form.get('nome').valid && form.get('nome').touched\" class=\"form-text text-success\" >ok</small>\n                                    <small *ngIf=\"!form.get('nome').valid && form.get('nome').touched\"class=\"form-text text-danger\" >Campo nome requerido</small>\n                            </div>\n                          </div>\n\n                          <div class=\"form-group\"><label class=\"col-sm-2 control-label\">CPNJ <i class='fa fa-exclamation text-danger'></i></label>\n                            <div class=\"col-sm-10\">\n                                <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-vcard'></i></span>\n                                    <input type=\"text\" formControlName=\"cnpj\" class=\"form-control\" name=\"cnpj\" mascara=\"99.999.999/9999-99\" required></div>\n                                    <small *ngIf=\"form.get('cnpj').valid && form.get('cnpj').touched\" class=\"form-text text-success\" >ok</small>\n                                    <small *ngIf=\"!form.get('cnpj').valid && form.get('cnpj').touched\"class=\"form-text text-danger\" >Campo CPNJ requerido</small>\n                            </div>\n                          </div>\n\n                          <div class=\"form-group\"><label class=\"col-sm-2 control-label\">E-mail <i class='fa fa-exclamation text-danger'></i></label>\n                            <div class=\"col-sm-10\">\n                                <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-at'></i></span>\n                                    <input type=\"email\" class=\"form-control\" formControlName=\"email\" name=\"email\" required></div>\n                                    <small *ngIf=\"form.get('email').valid && form.get('email').touched\" class=\"form-text text-success\" >ok</small>\n                                    <small *ngIf=\"!form.get('email').valid && form.get('email').touched\"class=\"form-text text-danger\" >Campo e-mail requerido</small>\n                            </div>\n                          </div>\n\n                          <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Telefone </label>\n                            <div class=\"col-sm-10\">\n                                <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-tty'></i></span>\n                                    <input type=\"text\" formControlName=\"telefone\" class=\"form-control\" name=\"telefone\" mascara=\"(99) 99999-9999\" required></div>\n                                    <small *ngIf=\"form.get('telefone').valid && form.get('telefone').touched\" class=\"form-text text-success\" >ok</small>\n                                    <small *ngIf=\"!form.get('telefone').valid && form.get('telefone').touched\"class=\"form-text text-danger\" >Campo Telefone requerido</small>\n                            </div>\n                          </div>\n\n                          <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Observações <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\">\n                                  <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-id-card'></i></span>\n                                      <textarea class=\"form-control\" rows=\"5\" cols=\"1\" formControlName=\"observacoes\" name=\"observacoes\" required></textarea>\n                                      <small *ngIf=\"form.get('observacoes').valid && form.get('observacoes').touched\" class=\"form-text text-success\" >ok</small>\n                                      <small *ngIf=\"!form.get('observacoes').valid && form.get('observacoes').touched\"class=\"form-text text-danger\" >Campo observações requerido</small>\n                                  </div>\n                              </div>\n                          </div>\n\n                              <div class=\"hr-line-dashed\"></div>\n                              <div class=\"form-group\">\n                                  <div class=\"col-sm-4 col-sm-offset-2\">\n                                      <button class=\"btn btn-w-m btn-warning\" style=\"margin-right: 20px;\" type=\"reset\"><i class=\"fa fa-close\"></i> Limpar</button>\n                                      <button class=\"btn btn-w-m btn-primary\" type=\"button\" (click)=\"atualizarrCliente()\"><i class=\"fa fa-check\"></i> Atualizar</button>\n                                  </div>\n                              </div>\n                          </form>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n    </div>\n</div>\n","export * from './atualizar.component';\n","import { Component, OnInit } from '@angular/core';\nimport {\n  Cliente,\n  ClienteService,\n  ErroGeral,\n  ErroDTO,\n  Estado,\n  Cidade,\n  EnderecoService,\n  NewClienteDTO,\n} from 'src/app/modules/shared';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { ToastrService } from 'ngx-toastr';\nimport { Subscription } from 'rxjs';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-cadastrar',\n  templateUrl: './cadastrar.component.html',\n  styleUrls: ['./cadastrar.component.css'],\n})\nexport class CadastrarComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  erroGeral = {} as ErroGeral;\n\n  erroDTO = {} as ErroDTO;\n\n  newClienteDTO = {} as NewClienteDTO;\n\n  estados: Estado[];\n\n  cidades: Cidade[];\n\n  form: FormGroup;\n\n  mostrarCidade = false;\n\n  mostrarEndereco = false;\n\n  idCidade = null;\n\n  constructor(\n    private fb: FormBuilder,\n    private spinner: NgxSpinnerService,\n    private clienteService: ClienteService,\n    private enderecoService: EnderecoService,\n    private toast: ToastrService,\n  ) {}\n\n  ngOnInit(): void {\n    this.criarForm();\n    this.carregaEstados();\n  }\n\n  criarForm(): void {\n    this.form = this.fb.group({\n      codigoSupergas: ['', Validators.required],\n      nome: ['', Validators.required],\n      cnpj: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      telefone: ['', Validators.required],\n      observacoes: ['', Validators.required],\n      estado: ['', Validators.required],\n      cidade: ['', Validators.required],\n      cep: ['', Validators.required],\n      logradouro: ['', Validators.required],\n      numero: ['', Validators.required],\n      bairro: [''],\n      complemento: [''],\n    });\n\n    this.form.patchValue({ observacoes: 'Sem Observações' });\n  }\n\n  carregaEstados(): void {\n    this.subscriptions.push(\n      this.enderecoService.getAllEstados().subscribe(\n        (data) => {\n          this.estados = data;\n        },\n        (err) => console.log(err),\n      ),\n    );\n  }\n\n  estadoSelecionado(id: number): void {\n    if (Number(id) === 100) {\n      this.mostrarCidade = false;\n      this.mostrarEndereco = false;\n      return;\n    }\n    this.carregaCidades(id);\n    this.mostrarCidade = true;\n    console.log(id);\n  }\n\n  cidadeSelecionada(id: number): void {\n    if (Number(id) === 100) {\n      this.mostrarEndereco = false;\n      return;\n    }\n    this.idCidade = id;\n    this.mostrarEndereco = true;\n  }\n\n  carregaCidades(id: number): void {\n    this.subscriptions.push(\n      this.enderecoService.getAllEstadoCidades(id).subscribe(\n        (data) => {\n          this.cidades = data;\n        },\n        (err) => console.log(err),\n      ),\n    );\n  }\n\n  cadastrarCliente(): void {\n    this.spinner.show();\n\n    if (this.form.invalid) {\n      this.spinner.hide();\n      this.toast.error('Formulário com campos invalidos', 'Erro!', {\n        timeOut: 4000,\n      });\n      return;\n    }\n\n    this.newClienteDTO = this.form.value;\n    this.newClienteDTO.cidadeId = Number(this.form.get('cidade').value);\n\n    this.subscriptions.push(\n      this.clienteService.insert(this.newClienteDTO).subscribe(\n        (data) => {\n          const msg = 'Cliente cadastrado com sucesso!';\n          this.spinner.hide();\n          Swal.fire({\n            title: msg,\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n          setTimeout(() => {\n            this.refresh();\n          }, 1900);\n        },\n        (err) => console.log(err),\n      ),\n    );\n    this.spinner.hide();\n  }\n\n  refresh(): void {\n    window.location.reload();\n  }\n}\n","<ngx-spinner color = \"#fff\" [fullScreen] = \"true\" type=\"ball-clip-rotate-multiple\" >\n  <h1 style=\"color: aliceblue;\">\n    Cadastrando...\n  </h1>\n</ngx-spinner>\n<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n\n      <div class=\"wrapper wrapper-content animated fadeInRight\">\n          <div class=\"row\">\n              <div class=\"col-lg-12\">\n                  <div class=\"ibox float-e-margins\">\n                      <div class=\"ibox-title\">\n                          <h5>Formulário para preenchimento &nbsp;&nbsp;<b class=\"text-danger\"><i class='fa fa-exclamation'></i> Campos obrigatórios</b></h5>\n                          <div class=\"ibox-tools\">\n                              <a class=\"collapse-link\">\n                                  <i class=\"fa fa-chevron-up\"></i>\n                              </a>\n                          </div>\n                      </div>\n                      <div class=\"ibox-content\">\n\n                          <form class=\"form-horizontal\" [formGroup]=\"form\" novalidate>\n                              <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Cod. Supergas <i class='fa fa-exclamation text-danger'></i></label>\n                                  <div class=\"col-sm-10\">\n                                      <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-vcard'></i></span>\n                                          <input type=\"text\" class=\"form-control\" formControlName=\"codigoSupergas\" name=\"codigoSupergas\" required></div>\n                                          <small *ngIf=\"form.get('codigoSupergas').valid && form.get('codigoSupergas').touched\" class=\"form-text text-success\" >ok</small>\n                                          <small *ngIf=\"!form.get('codigoSupergas').valid && form.get('codigoSupergas').touched\"class=\"form-text text-danger\" >Campo Cod. Supergas requerido</small>\n                                  </div>\n                              </div>\n\n                              <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Nome <i class='fa fa-exclamation text-danger'></i></label>\n                                <div class=\"col-sm-10\">\n                                    <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-vcard'></i></span>\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"nome\" name=\"nome\" required></div>\n                                        <small *ngIf=\"form.get('nome').valid && form.get('nome').touched\" class=\"form-text text-success\" >ok</small>\n                                        <small *ngIf=\"!form.get('nome').valid && form.get('nome').touched\"class=\"form-text text-danger\" >Campo nome requerido</small>\n                                </div>\n                              </div>\n\n                              <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Endereço <i class='fa fa-exclamation text-danger'></i></label>\n\n                                <div class=\"col-sm-10\">\n                                  <div class=\"col-sm-12 b-r\">\n                                      <div>\n                                        <div class=\"col-sm-6\">\n                                          <select class=\"form-control m-b\" value=\"100\" formControlName=\"estado\" name=\"estado\" required (change)=\"estadoSelecionado($event.target.value)\">\n                                              <option value=\"100\">Selecione o Estado</option>\n                                              <option *ngFor=\"let estado of estados\" value={{estado.id}}> {{ estado.nome }} </option>\n                                          </select>\n                                            <small *ngIf=\"!form.get('estado').valid && form.get('estado').touched\"class=\"form-text text-danger\" >Campo estado requerido</small>\n                                        </div>\n                                        <div class=\"col-sm-6\" *ngIf=\"mostrarCidade\">\n                                          <select class=\"form-control m-b\" formControlName=\"cidade\" name=\"cidade\" required (change)=\"cidadeSelecionada($event.target.value)\">\n                                              <option value=100>Selecione a Cidade</option>\n                                              <option *ngFor=\"let cidade of cidades\" value={{cidade.id}}>{{ cidade.nome }}</option>\n                                          </select>\n                                          <small *ngIf=\"!form.get('cidade').valid && form.get('cidade').touched\"class=\"form-text text-danger\" >Campo cidade requerido</small>\n\n                                        </div>\n                                        <div class=\"col-sm-6\" *ngIf=\"mostrarEndereco\">\n                                          <input type=\"text\" style=\"margin-bottom: 20px;\" formControlName=\"cep\" required class=\"form-control\" name=\"cep\" id=\"cep\" placeholder=\"cep\">\n                                          <small *ngIf=\"!form.get('cep').valid && form.get('cep').touched\" class=\"form-text text-danger\" >Campo cep requerido</small>\n                                        </div>\n                                        <div class=\"col-sm-6\" *ngIf=\"mostrarEndereco\">\n                                          <input type=\"text\" style=\"margin-bottom: 20px;\" formControlName=\"logradouro\" required class=\"form-control\" name=\"logradouro\" id=\"logradouro\" placeholder=\"logradouro\">\n                                          <small *ngIf=\"!form.get('logradouro').valid && form.get('logradouro').touched\"class=\"form-text text-danger\" >Campo logradouro requerido</small>\n                                        </div>\n                                        <div class=\"col-sm-6\" *ngIf=\"mostrarEndereco\">\n                                          <input type=\"text\" style=\"margin-bottom: 20px;\" formControlName=\"numero\" required class=\"form-control\" name=\"numero\" id=\"numero\" placeholder=\"numero\">\n                                          <small *ngIf=\"!form.get('numero').valid && form.get('numero').touched\"class=\"form-text text-danger\" >Campo numero requerido</small>\n                                        </div>\n                                        <div class=\"col-sm-6\" *ngIf=\"mostrarEndereco\">\n                                          <input type=\"text\" style=\"margin-bottom: 20px;\" formControlName=\"complemento\" class=\"form-control\" name=\"complemento\" id=\"complemento\" placeholder=\"complemento\">\n                                        </div>\n                                        <div class=\"col-sm-6\" *ngIf=\"mostrarEndereco\">\n                                          <input type=\"text\" style=\"margin-bottom: 20px;\" formControlName=\"bairro\" class=\"form-control\" name=\"bairro\" id=\"bairro\" placeholder=\"bairro\">\n                                        </div>\n                                    </div>\n                                  </div>\n\n                                </div>\n                              </div>\n\n                              <div class=\"form-group\"><label class=\"col-sm-2 control-label\">CPNJ <i class='fa fa-exclamation text-danger'></i></label>\n                                <div class=\"col-sm-10\">\n                                    <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-vcard'></i></span>\n                                        <input type=\"text\" formControlName=\"cnpj\" class=\"form-control\" name=\"cnpj\" mascara=\"99.999.999/9999-99\" required></div>\n                                        <small *ngIf=\"form.get('cnpj').valid && form.get('cnpj').touched\" class=\"form-text text-success\" >ok</small>\n                                        <small *ngIf=\"!form.get('cnpj').valid && form.get('cnpj').touched\"class=\"form-text text-danger\" >Campo CPNJ requerido</small>\n                                </div>\n                              </div>\n\n                              <div class=\"form-group\"><label class=\"col-sm-2 control-label\">E-mail <i class='fa fa-exclamation text-danger'></i></label>\n                                <div class=\"col-sm-10\">\n                                    <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-at'></i></span>\n                                        <input type=\"email\" class=\"form-control\" formControlName=\"email\" name=\"email\" required></div>\n                                        <small *ngIf=\"form.get('email').valid && form.get('email').touched\" class=\"form-text text-success\" >ok</small>\n                                        <small *ngIf=\"!form.get('email').valid && form.get('email').touched\"class=\"form-text text-danger\" >Campo e-mail requerido</small>\n                                </div>\n                              </div>\n\n                              <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Telefone </label>\n                                <div class=\"col-sm-10\">\n                                    <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-tty'></i></span>\n                                        <input type=\"text\" formControlName=\"telefone\" class=\"form-control\" name=\"telefone\" required></div>\n                                        <small *ngIf=\"form.get('telefone').valid && form.get('telefone').touched\" class=\"form-text text-success\" >ok</small>\n                                        <small *ngIf=\"!form.get('telefone').valid && form.get('telefone').touched\"class=\"form-text text-danger\" >Campo Telefone requerido</small>\n                                </div>\n                              </div>\n\n                              <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Observações <i class='fa fa-exclamation text-danger'></i></label>\n                                  <div class=\"col-sm-10\">\n                                      <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-id-card'></i></span>\n                                          <textarea class=\"form-control\" rows=\"5\" cols=\"1\" formControlName=\"observacoes\" name=\"observacoes\" required></textarea>\n                                          <small *ngIf=\"form.get('observacoes').valid && form.get('observacoes').touched\" class=\"form-text text-success\" >ok</small>\n                                          <small *ngIf=\"!form.get('observacoes').valid && form.get('observacoes').touched\"class=\"form-text text-danger\" >Campo observações requerido</small>\n                                      </div>\n                                  </div>\n                              </div>\n\n                              <div class=\"hr-line-dashed\"></div>\n                              <div class=\"form-group\">\n                                  <div class=\"col-sm-4 col-sm-offset-2\">\n                                      <button class=\"btn btn-w-m btn-warning\" style=\"margin-right: 20px;\" type=\"reset\"><i class=\"fa fa-close\"></i> Limpar</button>\n                                      <button class=\"btn btn-w-m btn-primary\" type=\"button\" (click)=\"cadastrarCliente()\"><i class=\"fa fa-check\"></i> Cadastrar</button>\n                                  </div>\n                              </div>\n                          </form>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n    </div>\n</div>\n","export * from './cadastrar.component';\n","import { Component } from '@angular/core';\n\n@Component({ template: `<router-outlet></router-outlet>` })\nexport class ClientComponent {}\n","export * from './atualizar';\nexport * from './cadastrar';\nexport * from './listar';\nexport * from './clinet.component';\n","export * from './listar.component';\n","import { Component, OnInit } from '@angular/core';\nimport { Cliente, ClienteService } from 'src/app/modules/shared';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-listar',\n  templateUrl: './listar.component.html',\n  styleUrls: ['./listar.component.css'],\n})\nexport class ListarComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  clientes: Cliente[] = [];\n\n  clientesFiltrados: Cliente[] = [];\n\n  constructor(private clienteService: ClienteService) {}\n\n  ngOnInit(): void {\n    this.carregaDadosclientes();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  carregaDadosclientes(): void {\n    this.subscriptions.push(\n      this.clienteService.getAll().subscribe(\n        (data) => {\n          this.clientes = data;\n          this.clientesFiltrados = this.clientes;\n        },\n        (err) => console.log(err),\n      ),\n    );\n  }\n\n  filtraClientePeloNome(nome: string): void {\n    if (!nome) {\n      this.clientesFiltrados = this.clientes;\n    } else {\n      this.clientesFiltrados = this.clientes.filter((x) =>\n        x.nome.trim().toLowerCase().includes(nome.trim().toLowerCase()),\n      );\n    }\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n\n      <div class=\"wrapper wrapper-content animated fadeInRight\">\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <div class=\"ibox float-e-margins\">\n                    <div class=\"ibox-title\">\n                        <h5>Tabela de registros retornados da base de dados</h5>\n                        <div class=\"ibox-tools\">\n                            <a class=\"collapse-link\">\n                                <i class=\"fa fa-chevron-up\"></i>\n                            </a>\n                        </div>\n\n                    </div>\n                    <div class=\"ibox-content\">\n                      <input\n                          class=\"form-control mr-sm-2\"\n                          type=\"search\"\n                          placeholder=\"Busca cliente por nome\"\n                          aria-label=\"Search\"\n                          #termoPesquisa\n                          (keyup)=\"filtraClientePeloNome(termoPesquisa.value)\"\n                      >\n                    </div>\n                    <div class=\"ibox-content\">\n\n                        <div class=\"table-responsive\" *ngIf=\"this.clientes.length > 0\">\n                            <table class='table table-striped table-bordered table-hover dataTables-example'>\n                              <thead>\n                                <tr>\n                                <th>Código Supergas</th>\n                                <th>Nome</th>\n                                <th>Endereço</th>\n                                <th>CNPJ</th>\n                                <th>E-mail</th>\n                                <th>Telefone</th>\n                                <th>Observações</th>\n                                <th>Ação</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr class='gradeX' *ngFor=\"let item of clientesFiltrados\">\n                                  <td> {{ item.codigoSupergas }} </td>\n                                  <td> {{ item.nome }} </td>\n                                  <td *ngIf=\"(item.enderecos | json) != ({} | json)\"><p *ngFor=\"let end of item.enderecos\">{{ end.bairro }} {{ end.logradouro }} {{end.numero}} {{ end.cidade.nome }}-{{end.cidade.estado.uf}}</p></td>\n                                  <td> {{ item.cnpj }} </td>\n                                  <td> {{ item.email }} </td>\n                                  <td> {{ item.telefone }} </td>\n                                  <td> {{ item.observacoes }} </td>\n                                  <td>\n                                    <a href=\"/cliente/atualizar/{{item.id}}\">\n                                      <Button class=\"btn btn-outline btn-primary\" style=\"margin-right: 5px;\">Editar</Button>\n                                    </a>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                        </div>\n                        <h2 *ngIf=\"this.clientes.length <= 0\">\n                          Nenhum cliente cadastrado <br>\n                          <a href=\"/cliente/cadastrar\">\n                            <Button class=\"btn btn-outline btn-primary\" style=\"margin-top: 25px;\">Cadastrar Novo Cliente</Button>\n                          </a>\n                        </h2>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    </div>\n</div>\n","export * from './cliente.module';\nexport * from './router-client.module';\n","import { NgModule } from '@angular/core';\n\nimport { RouterModule, Routes } from '@angular/router';\nimport {\n  AtualizarComponent,\n  CadastrarComponent,\n  ListarComponent,\n  ClientComponent,\n} from './components';\nimport { AuthGuardService, AutenticaRotaSerivce } from '../../shared';\n\nexport const ClientRoutes: Routes = [\n  {\n    path: 'cliente',\n    component: ClientComponent,\n    canActivate: [AuthGuardService],\n\n    children: [\n      {\n        path: 'pesquisar',\n        component: ListarComponent,\n        canActivate: [AutenticaRotaSerivce],\n      },\n      {\n        path: 'cadastrar',\n        component: CadastrarComponent,\n        canActivate: [AutenticaRotaSerivce],\n      },\n      {\n        path: 'atualizar/:clienteid',\n        component: AtualizarComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(ClientRoutes)],\n\n  exports: [RouterModule],\n})\nexport class ClientRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport {\n  UnidadeGrupoServico,\n  ErroGeral,\n  ErroDTO,\n  GrupoServico,\n  UnidadeGrupoServicoService,\n  GrupoServicoService,\n} from 'src/app/modules/shared';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport Swal from 'sweetalert2';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-atualizar',\n  templateUrl: './atualizar.component.html',\n  styleUrls: ['./atualizar.component.css'],\n})\nexport class AtualizarComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  unidadeGrupoServicos: UnidadeGrupoServico[] = [];\n\n  unidadeGrupoServico = {} as UnidadeGrupoServico;\n\n  erroGeral = {} as ErroGeral;\n\n  erroDTO = {} as ErroDTO;\n\n  form: FormGroup;\n\n  grupoServico: GrupoServico;\n\n  grupoServicoId: string;\n\n  constructor(\n    private uGSService: UnidadeGrupoServicoService,\n    private toast: ToastrService,\n    private route: ActivatedRoute,\n    private fb: FormBuilder,\n    private grupoServicoService: GrupoServicoService,\n  ) {}\n\n  ngOnInit(): void {\n    this.grupoServicoId = this.route.snapshot.paramMap.get('gsid');\n    this.criarForm();\n    this.carregaDadosUGS();\n    this.carregaDadosGrupoServico();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  criarForm(): void {\n    this.form = this.fb.group({\n      codigoSapItem: ['', Validators.required],\n      descSapItem: ['', Validators.required],\n      valorUnitario: ['', Validators.required],\n      unidadeGrupoServico: ['', Validators.required],\n      descServico: ['', Validators.required],\n    });\n  }\n\n  carregaDadosGrupoServico(): void {\n    this.subscriptions.push(\n      this.grupoServicoService.findById(Number(this.grupoServicoId)).subscribe(\n        (data) => {\n          this.grupoServico = data;\n          this.populandoFomulario();\n        },\n        (err) => console.log(err),\n      ),\n    );\n  }\n\n  carregaDadosUGS(): void {\n    this.subscriptions.push(\n      this.uGSService.getAll().subscribe(\n        (data) => {\n          this.unidadeGrupoServicos = data;\n        },\n        (err) => console.log(err),\n      ),\n    );\n  }\n\n  atualizarGrupoServico(): void {\n    if (this.form.invalid) {\n      this.toast.error('Formulário com campos invalidos', 'Erro!', {\n        timeOut: 4000,\n      });\n      this.toucheCamposFormulario();\n      return;\n    }\n\n    this.grupoServico = this.form.value;\n    const unidadeGrupoServicoId = Number(\n      this.form.get('unidadeGrupoServico').value,\n    );\n\n    this.grupoServico.unidadeGrupoServico = this.unidadeGrupoServicos.find(\n      (x) => x.id === unidadeGrupoServicoId,\n    );\n    this.grupoServico.id = Number(this.grupoServicoId);\n    this.subscriptions.push(\n      this.grupoServicoService.update(this.grupoServico).subscribe(\n        (data) => {\n          const msg = 'Grupo de serviço atualizado com sucesso!';\n\n          Swal.fire({\n            title: msg,\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n          setTimeout(() => {\n            this.refresh();\n          }, 1900);\n        },\n        (err) => console.log(err),\n      ),\n    );\n  }\n\n  toucheCamposFormulario(): void {\n    this.form.get('codigoSapItem').markAsTouched();\n    this.form.get('descSapitem').markAsTouched();\n    this.form.get('valorUnitario').markAsTouched();\n    this.form.get('unidadeGrupoServico').markAsTouched();\n    this.form.get('servico').markAsTouched();\n  }\n\n  populandoFomulario(): void {\n    this.form.patchValue({\n      codigoSapItem: this.grupoServico.codigoSapItem,\n      descSapitem: this.grupoServico.descSapItem,\n      valorUnitario: this.grupoServico.valorUnitario,\n      unidadeGrupoServico: this.grupoServico.unidadeGrupoServico.id,\n    });\n  }\n\n  refresh(): void {\n    window.location.reload();\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n        <div class=\"wrapper wrapper-content animated fadeInRight\">\n          <div class=\"row\">\n              <div class=\"col-lg-12\">\n                  <div class=\"ibox float-e-margins\">\n                      <div class=\"ibox-title\">\n                          <h5>Formulário para preenchimento &nbsp;&nbsp;<b class=\"text-danger\"><i class='fa fa-exclamation'></i> Campos obrigatórios</b></h5>\n                          <div class=\"ibox-tools\">\n                              <a class=\"collapse-link\">\n                                  <i class=\"fa fa-chevron-up\"></i>\n                              </a>\n                          </div>\n                      </div>\n                      <div class=\"ibox-content\">\n\n                        <form class=\"form-horizontal\" [formGroup]=\"form\" novalidate>\n                          <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Código Sap <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\">\n                                  <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-vcard'></i></span>\n                                      <input type=\"text\" class=\"form-control\" formControlName=\"codigoSapItem\" name=\"codigoSapItem\" required></div>\n                                      <small *ngIf=\"form.get('codigoSapItem').valid && form.get('codigoSapItem').touched\" class=\"form-text text-success\" >ok</small>\n                                      <small *ngIf=\"!form.get('codigoSapItem').valid && form.get('codigoSapItem').touched\"class=\"form-text text-danger\" >Campo código sap requerido</small>\n                              </div>\n                          </div>\n                          <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Descrição Sap <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\">\n                                  <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-id-card'></i></span>\n                                      <input type=\"text\" formControlName=\"descSapItem\" class=\"form-control\" name=\"descSapItem\" required></div>\n                                      <small *ngIf=\"form.get('descSapItem').valid && form.get('descSapItem').touched\" class=\"form-text text-success\" >ok</small>\n                                      <small *ngIf=\"!form.get('descSapItem').valid && form.get('descSapItem').touched\"class=\"form-text text-danger\" >Campo descrição sap requerido</small>\n                              </div>\n                          </div>\n\n                          <div class=\"form-group\" id=\"data_1\"><label class=\"col-sm-2 control-label\">Valor Unitário <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\">\n                                  <div class=\"input-group date m-b\">\n                                      <span class=\"input-group-addon\"><i class=\"fa fa-dollar\"></i></span>\n                                      <input type=\"text\" formControlName=\"valorUnitario\" class=\"form-control\" name=\"valorUnitario\" required>\n                                  </div>\n                                    <small *ngIf=\"form.get('valorUnitario').valid && form.get('valorUnitario').touched\" class=\"form-text text-success\" >ok</small>\n                                    <small *ngIf=\"!form.get('valorUnitario').valid && form.get('valorUnitario').touched\"class=\"form-text text-danger\" >Campo valor unitário requerido</small>\n\n                              </div>\n                          </div>\n\n                          <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Unidade G. Servico <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\">\n                                  <div class=\"col-lg-6 m-l-n\">\n                                      <select class='form-control' formControlName=\"unidadeGrupoServico\" name='unidadeGrupoServico' required>\n                                        <option *ngFor=\"let item of unidadeGrupoServicos\" value='{{ item.id }}'>{{ item.nome }}</option>\n                                      </select>\n                                      <small *ngIf=\"form.get('unidadeGrupoServico').valid && form.get('unidadeGrupoServico').touched\" class=\"form-text text-success\" >ok</small>\n                                      <small *ngIf=\"!form.get('unidadeGrupoServico').valid && form.get('unidadeGrupoServico').touched\"class=\"form-text text-danger\" >Campo unidade grupo servico requerido</small>\n                                  </div>\n                              </div>\n                          </div>\n                          <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Serviço desc.<i class='fa fa-exclamation text-danger'></i></label>\n                            <div class=\"col-sm-10\">\n                              <div class=\"input-group date m-b\">\n                                  <span class=\"input-group-addon\"><i class=\"fa fa-vcard\"></i></span>\n                                  <input type=\"text\" formControlName=\"descServico\" class=\"form-control\" name=\"descServico\" required>\n                              </div>\n                                <small *ngIf=\"form.get('descServico').valid && form.get('descServico').touched\" class=\"form-text text-success\" >ok</small>\n                                <small *ngIf=\"!form.get('descServico').valid && form.get('descServico').touched\"class=\"form-text text-danger\" >Campo descrição servico obrigatório</small>\n                            </div>\n                          </div>\n                          <div class=\"hr-line-dashed\"></div>\n                              <div class=\"form-group\">\n                                  <div class=\"col-sm-6 col-sm-offset-2\">\n                                      <button class=\"btn btn-w-m btn-warning\" type=\"reset\"><i class=\"fa fa-close\"></i> Limpar</button>\n                                      <button class=\"btn btn-w-m btn-primary\" type=\"button\" (click)=\"atualizarGrupoServico()\" style=\"margin-left: 20px;\"><i class=\"fa fa-check\"></i> Atualizar</button>\n                                  </div>\n                              </div>\n                          </form>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n    </div>\n</div>\n","export * from './atualizar.component';\n","import { Component, OnInit } from '@angular/core';\nimport {\n  UnidadeGrupoServicoService,\n  UnidadeGrupoServico,\n  GrupoServico,\n  ErroDTO,\n  ErroGeral,\n  GrupoServicoService,\n  TipoGrupoServicoService,\n  TipoGrupoServico,\n} from 'src/app/modules/shared';\nimport Swal from 'sweetalert2';\nimport { Subscription } from 'rxjs';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-cadastrar',\n  templateUrl: './cadastrar.component.html',\n  styleUrls: ['./cadastrar.component.css'],\n})\nexport class CadastrarComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  unidadeGrupoServicos: UnidadeGrupoServico[] = [];\n\n  unidadeGrupoServico = {} as UnidadeGrupoServico;\n\n  tipoGrupoServicos: TipoGrupoServico[] = [];\n\n  tipoGrupoServico = {} as TipoGrupoServico;\n\n  erroGeral = {} as ErroGeral;\n\n  erroDTO = {} as ErroDTO;\n\n  form: FormGroup;\n\n  grupoServico: GrupoServico;\n\n  constructor(\n    private uGSService: UnidadeGrupoServicoService,\n    private tGSService: TipoGrupoServicoService,\n    private toast: ToastrService,\n    private fb: FormBuilder,\n    private grupoServicoService: GrupoServicoService,\n  ) {}\n\n  ngOnInit(): void {\n    this.criarForm();\n    this.carregaDadosUGS();\n    this.carregaDadosTGS();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  criarForm(): void {\n    this.form = this.fb.group({\n      codigoSapItem: ['', Validators.required],\n      descSapItem: ['', Validators.required],\n      valorUnitario: ['', Validators.required],\n      unidadeGrupoServico: ['', Validators.required],\n      descServico: ['', Validators.required],\n      tipoGrupoServico: ['', Validators.required],\n    });\n  }\n\n  carregaDadosUGS(): void {\n    this.subscriptions.push(\n      this.uGSService.getAll().subscribe(\n        (data) => {\n          this.unidadeGrupoServicos = data;\n        },\n        (err) => console.log(err),\n      ),\n    );\n  }\n\n  carregaDadosTGS(): void {\n    this.subscriptions.push(\n      this.tGSService.getAll().subscribe(\n        (data) => {\n          this.tipoGrupoServicos = data;\n        },\n        (err) => console.log(err),\n      ),\n    );\n  }\n\n  cadastrarGrupoServico(): void {\n    if (this.form.invalid) {\n      this.toast.error('Formulário com campos invalidos', 'Erro!', {\n        timeOut: 4000,\n      });\n      this.toucheCamposFormulario();\n      return;\n    }\n\n    this.grupoServico = this.form.value;\n    const unidadeGrupoServicoId = Number(\n      this.form.get('unidadeGrupoServico').value,\n    );\n    const tipoGrupoServicoId = Number(this.form.get('tipoGrupoServico').value);\n\n    this.grupoServico.unidadeGrupoServico = this.unidadeGrupoServicos.find(\n      (x) => x.id === unidadeGrupoServicoId,\n    );\n\n    this.grupoServico.tipoGrupoServico = this.tipoGrupoServicos.find(\n      (x) => x.id === tipoGrupoServicoId,\n    );\n\n    this.subscriptions.push(\n      this.grupoServicoService.insert(this.grupoServico).subscribe(\n        (data) => {\n          const msg = 'Grupo de serviço cadastrado com sucesso!';\n\n          Swal.fire({\n            title: msg,\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n          setTimeout(() => {\n            this.refresh();\n          }, 1900);\n        },\n        (err) => console.log(err),\n      ),\n    );\n  }\n\n  toucheCamposFormulario(): void {\n    this.form.get('codigoSapItem').markAsTouched();\n    this.form.get('descSapItem').markAsTouched();\n    this.form.get('valorUnitario').markAsTouched();\n    this.form.get('unidadeGrupoServico').markAsTouched();\n    this.form.get('tipoGrupoServico').markAsTouched();\n    this.form.get('descServico').markAsTouched();\n  }\n\n  refresh(): void {\n    window.location.reload();\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n        <div class=\"wrapper wrapper-content animated fadeInRight\">\n          <div class=\"row\">\n              <div class=\"col-lg-12\">\n                  <div class=\"ibox float-e-margins\">\n                      <div class=\"ibox-title\">\n                          <h5>Formulário para preenchimento &nbsp;&nbsp;<b class=\"text-danger\"><i class='fa fa-exclamation'></i> Campos obrigatórios</b></h5>\n                          <div class=\"ibox-tools\">\n                              <a class=\"collapse-link\">\n                                  <i class=\"fa fa-chevron-up\"></i>\n                              </a>\n                          </div>\n                      </div>\n                      <div class=\"ibox-content\">\n\n                          <form class=\"form-horizontal\" [formGroup]=\"form\" novalidate>\n                              <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Código Sap <i class='fa fa-exclamation text-danger'></i></label>\n                                  <div class=\"col-sm-10\">\n                                      <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-vcard'></i></span>\n                                          <input type=\"text\" class=\"form-control\" formControlName=\"codigoSapItem\" name=\"codigoSapItem\" required></div>\n                                          <small *ngIf=\"form.get('codigoSapItem').valid && form.get('codigoSapItem').touched\" class=\"form-text text-success\" >ok</small>\n                                          <small *ngIf=\"!form.get('codigoSapItem').valid && form.get('codigoSapItem').touched\"class=\"form-text text-danger\" >Campo código sap requerido</small>\n                                  </div>\n                              </div>\n                              <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Descrição Sap <i class='fa fa-exclamation text-danger'></i></label>\n                                  <div class=\"col-sm-10\">\n                                      <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-id-card'></i></span>\n                                          <input type=\"text\" formControlName=\"descSapItem\" class=\"form-control\" name=\"descSapItem\" required></div>\n                                          <small *ngIf=\"form.get('descSapItem').valid && form.get('descSapItem').touched\" class=\"form-text text-success\" >ok</small>\n                                          <small *ngIf=\"!form.get('descSapItem').valid && form.get('descSapItem').touched\"class=\"form-text text-danger\" >Campo descrição sap requerido</small>\n                                  </div>\n                              </div>\n\n                              <div class=\"form-group\" id=\"data_1\"><label class=\"col-sm-2 control-label\">Valor Unitário <i class='fa fa-exclamation text-danger'></i></label>\n                                  <div class=\"col-sm-10\">\n                                      <div class=\"input-group date m-b\">\n                                          <span class=\"input-group-addon\"><i class=\"fa fa-dollar\"></i></span>\n                                          <input type=\"text\" formControlName=\"valorUnitario\" class=\"form-control\" name=\"valorUnitario\" required>\n                                      </div>\n                                        <small *ngIf=\"form.get('valorUnitario').valid && form.get('valorUnitario').touched\" class=\"form-text text-success\" >ok</small>\n                                        <small *ngIf=\"!form.get('valorUnitario').valid && form.get('valorUnitario').touched\"class=\"form-text text-danger\" >Campo valor unitário requerido</small>\n\n                                  </div>\n                              </div>\n                              <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Serviço desc.<i class='fa fa-exclamation text-danger'></i></label>\n                                <div class=\"col-sm-10\">\n                                  <div class=\"input-group date m-b\">\n                                      <span class=\"input-group-addon\"><i class=\"fa fa-vcard\"></i></span>\n                                      <input type=\"text\" formControlName=\"descServico\" class=\"form-control\" name=\"descServico\" required>\n                                  </div>\n                                    <small *ngIf=\"form.get('descServico').valid && form.get('descServico').touched\" class=\"form-text text-success\" >ok</small>\n                                    <small *ngIf=\"!form.get('descServico').valid && form.get('descServico').touched\"class=\"form-text text-danger\" >Campo descrição servico obrigatório</small>\n                                </div>\n                              </div>\n                              <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Unidade G. Servico <i class='fa fa-exclamation text-danger'></i></label>\n                                  <div class=\"col-sm-10\">\n                                      <div class=\"col-lg-6 m-l-n\">\n                                          <select class='form-control' formControlName=\"unidadeGrupoServico\" name='unidadeGrupoServico' required>\n                                            <option *ngFor=\"let item of unidadeGrupoServicos\" value='{{ item.id }}'>{{ item.nome }}</option>\n                                          </select>\n                                          <small *ngIf=\"form.get('unidadeGrupoServico').valid && form.get('unidadeGrupoServico').touched\" class=\"form-text text-success\" >ok</small>\n                                          <small *ngIf=\"!form.get('unidadeGrupoServico').valid && form.get('unidadeGrupoServico').touched\"class=\"form-text text-danger\" >Campo unidade grupo servico requerido</small>\n                                      </div>\n                                  </div>\n                              </div>\n\n                              <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Tipo G. Servico <i class='fa fa-exclamation text-danger'></i></label>\n                                <div class=\"col-sm-10\">\n                                    <div class=\"col-lg-6 m-l-n\">\n                                        <select class='form-control' formControlName=\"tipoGrupoServico\" name='tipoGrupoServico' required>\n                                          <option *ngFor=\"let item of tipoGrupoServicos\" value='{{ item.id }}'>{{ item.descricao }}</option>\n                                        </select>\n                                        <small *ngIf=\"form.get('tipoGrupoServico').valid && form.get('tipoGrupoServico').touched\" class=\"form-text text-success\" >ok</small>\n                                        <small *ngIf=\"!form.get('tipoGrupoServico').valid && form.get('tipoGrupoServico').touched\"class=\"form-text text-danger\" >Campo tipo grupo servico requerido</small>\n                                    </div>\n                                </div>\n                            </div>\n                              <div class=\"hr-line-dashed\"></div>\n                              <div class=\"form-group\">\n                                  <div class=\"col-sm-6 col-sm-offset-2\">\n                                      <button class=\"btn btn-w-m btn-warning\" type=\"reset\"><i class=\"fa fa-close\"></i> Limpar</button>\n                                      <button class=\"btn btn-w-m btn-primary\" type=\"button\" (click)=\"cadastrarGrupoServico()\" style=\"margin-left: 20px;\"><i class=\"fa fa-check\"></i> Cadastrar</button>\n                                  </div>\n                              </div>\n                          </form>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n    </div>\n</div>\n","export * from './cadastrar.component';\n","import { Component } from '@angular/core';\n\n@Component({ template: `<router-outlet></router-outlet>` })\nexport class GroupServiceComponent {}\n","export * from './atualizar';\nexport * from './cadastrar';\nexport * from './listar';\nexport * from './listar-tipo-grupo';\nexport * from './listar-unidade';\nexport * from './group-service.component';\n","export * from './listar-tipo-grupo.component';\n","import { Component, OnInit } from '@angular/core';\nimport {\n  TipoGrupoServico,\n  TipoGrupoServicoService,\n} from 'src/app/modules/shared';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-listar-tipo-grupo',\n  templateUrl: './listar-tipo-grupo.component.html',\n  styleUrls: ['./listar-tipo-grupo.component.css'],\n})\nexport class ListarTipoGrupoComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  tipoGrupoServicos: TipoGrupoServico[] = [];\n\n  constructor(private tipoGrupoServicoService: TipoGrupoServicoService) {}\n\n  ngOnInit(): void {\n    this.carregaDadosTipoGrupoServicos();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  carregaDadosTipoGrupoServicos(): void {\n    this.subscriptions.push(\n      this.tipoGrupoServicoService.getAll().subscribe(\n        (data) => {\n          this.tipoGrupoServicos = data;\n        },\n        (err) => console.log(err),\n      ),\n    );\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n\n      <div class=\"wrapper wrapper-content animated fadeInRight\">\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <div class=\"ibox float-e-margins\">\n                    <div class=\"ibox-title\">\n                        <h5>Tabela de registros retornados da base de dados</h5>\n                        <div class=\"ibox-tools\">\n                            <a class=\"collapse-link\">\n                                <i class=\"fa fa-chevron-up\"></i>\n                            </a>\n                        </div>\n\n                    </div>\n                    <!-- <div class=\"ibox-content\">\n                      <input\n                          class=\"form-control mr-sm-2\"\n                          type=\"search\"\n                          placeholder=\"Busca usuário por nome\"\n                          aria-label=\"Search\"\n                      >\n                    </div> -->\n                    <div class=\"ibox-content\">\n\n                        <div class=\"table-responsive\">\n                            <table class='table table-striped table-bordered table-hover dataTables-example'>\n                              <thead>\n                                <tr>\n                                  <th>Código</th>\n                                  <th>Descrição</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr class='gradeX' *ngFor=\"let item of tipoGrupoServicos\">\n                                  <td> {{ item.id }} </td>\n                                  <td> {{ item.descricao }} </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    </div>\n</div>\n","export * from './listar-unidade.component';\n","import { Component, OnInit } from '@angular/core';\nimport {\n  UnidadeGrupoServico,\n  UnidadeGrupoServicoService,\n} from 'src/app/modules/shared';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-listar-unidade',\n  templateUrl: './listar-unidade.component.html',\n  styleUrls: ['./listar-unidade.component.css'],\n})\nexport class ListarUnidadeComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  unidadeGrupoServico: UnidadeGrupoServico[] = [];\n\n  constructor(private uGSService: UnidadeGrupoServicoService) {}\n\n  ngOnInit(): void {\n    this.carregaDadosUGS();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  public loadScript(url: string): void {\n    const body = <HTMLDivElement>document.body;\n    const script = document.createElement('script');\n    script.innerHTML = '';\n    script.src = url;\n    script.async = false;\n    script.defer = true;\n    body.appendChild(script);\n  }\n\n  carregaDadosUGS(): void {\n    this.subscriptions.push(\n      this.uGSService.getAll().subscribe(\n        (data) => {\n          this.unidadeGrupoServico = data;\n        },\n        (err) => console.log(err),\n      ),\n    );\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n\n      <div class=\"wrapper wrapper-content animated fadeInRight\">\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <div class=\"ibox float-e-margins\">\n                    <div class=\"ibox-title\">\n                        <h5>Tabela de registros Unidade Grupo de Serviço</h5>\n                        <div class=\"ibox-tools\">\n                            <a class=\"collapse-link\">\n                                <i class=\"fa fa-chevron-up\"></i>\n                            </a>\n                        </div>\n\n                    </div>\n                    <!-- <div class=\"ibox-content\">\n                      <input\n                          class=\"form-control mr-sm-2\"\n                          type=\"search\"\n                          placeholder=\"Busca unidade por nome\"\n                          aria-label=\"Search\"\n                      >\n                    </div> -->\n                    <div class=\"ibox-content\">\n\n                        <div class=\"table-responsive\">\n                            <table class='table table-striped table-bordered table-hover dataTables-example'>\n                              <thead>\n                                <tr>\n                                  <th>Código</th>\n                                  <th>Nome</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr *ngFor=\"let item of unidadeGrupoServico\">\n                                  <th>{{ item.id }}</th>\n                                  <th>{{ item.nome }}</th>\n                                </tr>\n                              </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    </div>\n</div>\n\n","export * from './listar.component';\n","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { GrupoServico, GrupoServicoService } from 'src/app/modules/shared';\n\n@Component({\n  selector: 'app-listar',\n  templateUrl: './listar.component.html',\n  styleUrls: ['./listar.component.css'],\n})\nexport class ListarComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  grupoServicos: GrupoServico[] = [];\n\n  constructor(private grupoServicoService: GrupoServicoService) {}\n\n  ngOnInit(): void {\n    this.carregaDadosGrupoServicos();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  carregaDadosGrupoServicos(): void {\n    this.subscriptions.push(\n      this.grupoServicoService.getAll().subscribe(\n        (data) => {\n          this.grupoServicos = data;\n          console.log(this.grupoServicos);\n        },\n        (err) => console.log(err),\n      ),\n    );\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n\n      <div class=\"wrapper wrapper-content animated fadeInRight\">\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <div class=\"ibox float-e-margins\">\n                    <div class=\"ibox-title\">\n                        <h5>Tabela de registros retornados da base de dados</h5>\n                        <div class=\"ibox-tools\">\n                            <a class=\"collapse-link\">\n                                <i class=\"fa fa-chevron-up\"></i>\n                            </a>\n                        </div>\n\n                    </div>\n                    <!-- <div class=\"ibox-content\">\n                      <input\n                          class=\"form-control mr-sm-2\"\n                          type=\"search\"\n                          placeholder=\"Busca usuário por nome\"\n                          aria-label=\"Search\"\n                      >\n                    </div> -->\n                    <div class=\"ibox-content\">\n\n                        <div class=\"table-responsive\">\n                            <table class='table table-striped table-bordered table-hover dataTables-example'>\n                              <thead>\n                                <tr>\n                                  <th>Código Sap</th>\n                                  <th>Descrição Sap</th>\n                                  <th>Valor Unitário</th>\n                                  <th>Unidade Grupo Serviço</th>\n                                  <th>Tipo Grupo Servico</th>\n                                  <th>Ação</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr class='gradeX' *ngFor=\"let item of grupoServicos\">\n                                  <td> {{ item.codigoSapItem }} </td>\n                                  <td> {{ item.descSapItem }} </td>\n                                  <td> {{ item.valorUnitario }} </td>\n                                  <td> {{ item.unidadeGrupoServico?.nome }} </td>\n                                  <td> {{ item.tipoGrupoServico.descricao }} </td>\n\n                                  <td>\n                                    <a href=\"/group-service/atualizar/{{item.id}}\">\n                                      <Button class=\"btn btn-outline btn-primary\" style=\"margin-right: 5px;\">Editar</Button>\n                                    </a>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';\nimport {\n  AtualizarComponent,\n  CadastrarComponent,\n  ListarComponent,\n  ListarTipoGrupoComponent,\n  ListarUnidadeComponent,\n  GroupServiceComponent,\n} from './components';\nimport {\n  MenuModule,\n  SharedModule,\n  APP_DATE_FORMATS,\n  AppDateAdapter,\n} from '../../shared';\n\n@NgModule({\n  declarations: [\n    GroupServiceComponent,\n    AtualizarComponent,\n    CadastrarComponent,\n    ListarComponent,\n    ListarTipoGrupoComponent,\n    ListarUnidadeComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    SharedModule,\n    MenuModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    { provide: DateAdapter, useClass: AppDateAdapter },\n    { provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS },\n  ],\n})\nexport class GroupServiceModule {}\n","export * from './group-service.module';\nexport * from './router-group-service.module';\n","import { NgModule } from '@angular/core';\n\nimport { RouterModule, Routes } from '@angular/router';\n\nimport {\n  AtualizarComponent,\n  CadastrarComponent,\n  ListarComponent,\n  ListarTipoGrupoComponent,\n  ListarUnidadeComponent,\n  GroupServiceComponent,\n} from './components';\nimport { AutenticaRotaSerivce, AuthGuardService } from '../../shared';\n\nexport const GroupServiceRoutes: Routes = [\n  {\n    path: 'group-service',\n    component: GroupServiceComponent,\n    canActivate: [AuthGuardService],\n\n    children: [\n      {\n        path: 'pesquisar',\n        component: ListarComponent,\n        canActivate: [AutenticaRotaSerivce],\n      },\n      {\n        path: 'pesquisar-unidade',\n        component: ListarUnidadeComponent,\n        canActivate: [AutenticaRotaSerivce],\n      },\n      {\n        path: 'pesquisar-tipo-grupo',\n        component: ListarTipoGrupoComponent,\n        canActivate: [AutenticaRotaSerivce],\n      },\n      {\n        path: 'cadastrar',\n        component: CadastrarComponent,\n        canActivate: [AutenticaRotaSerivce],\n      },\n      { path: 'atualizar/:gsid', component: AtualizarComponent },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(GroupServiceRoutes)],\n\n  exports: [RouterModule],\n})\nexport class GroupServiceRoutingModule {}\n","export * from './client';\nexport * from './group-service';\nexport * from './order-service';\n","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {\n  OrdemServicoService,\n  ClienteService,\n  OrdemServico,\n  Cliente,\n  ErroGeral,\n  ErroDTO,\n  OrdemServiceGrupoServiceDTO,\n  GrupoServico,\n  UnidadeGrupoServico,\n  TipoGrupoServico,\n  GrupoServicoService,\n  UnidadeGrupoServicoService,\n  TipoGrupoServicoService,\n  OrdemServicoGrupoServicoService,\n} from 'src/app/modules/shared';\nimport Swal from 'sweetalert2';\n\nimport { ToastrService } from 'ngx-toastr';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-atualizar',\n  templateUrl: './atualizar.component.html',\n  styleUrls: ['./atualizar.component.css'],\n})\nexport class AtualizarComponent implements OnInit {\n  // VARIAVEIS CLASSE PRINCIPAL\n\n  erroGeral = {} as ErroGeral;\n\n  erroDTO = {} as ErroDTO;\n\n  startDate = new Date();\n\n  private subscriptions: Subscription[] = [];\n\n  ordemServico = {} as OrdemServico;\n\n  ordemServicoCadastrada = {} as OrdemServico;\n\n  ordemServicoGrupoServico = {} as OrdemServiceGrupoServiceDTO;\n\n  form: FormGroup;\n\n  // VARIAVEIS CLIENTE\n\n  clienteSelecionado = false;\n\n  dadosCliente = false;\n\n  clientes: Cliente[] = [];\n\n  cliente = {} as Cliente;\n\n  clienteFiltrados: Cliente[] = [];\n\n  // VARIAVEIS GRUPO DE SERVIÇO\n\n  grupoServicoSelecionado = false;\n\n  dadosGrupoServico = false;\n\n  grupoServicos: GrupoServico[] = [];\n\n  grupoServicosFiltrados: GrupoServico[] = [];\n\n  grupoServico = {} as GrupoServico;\n\n  formGrupoServico: FormGroup;\n\n  unidadeGrupoServicos: UnidadeGrupoServico[] = [];\n\n  unidadeGrupoServico = {} as UnidadeGrupoServico;\n\n  tipoGrupoServicos: TipoGrupoServico[] = [];\n\n  tipoGrupoServico = {} as TipoGrupoServico;\n\n  totalServicos = 0;\n\n  ordemServicoId: number;\n\n  constructor(\n    private route: ActivatedRoute,\n    private clienteService: ClienteService,\n    private grupoServicoService: GrupoServicoService,\n    private uGSService: UnidadeGrupoServicoService,\n    private tGSService: TipoGrupoServicoService,\n    private toast: ToastrService,\n    private router: Router,\n    private fb: FormBuilder,\n    private ordemServicoService: OrdemServicoService,\n    private ordemServicoGrupoServicoService: OrdemServicoGrupoServicoService,\n  ) {}\n\n  ngOnInit(): void {\n    this.ordemServicoId = Number(this.route.snapshot.paramMap.get('osid'));\n    this.criarForm();\n    this.carregarClientes();\n    this.carregarGrupoServico();\n    this.criarFormGrupoServico();\n    this.carregaDadosUGS();\n    this.carregaDadosTGS();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  criarForm(): void {\n    this.form = this.fb.group({\n      codigoSupergas: ['', Validators.required],\n      data: ['', Validators.required],\n      cliente: ['', Validators.required],\n    });\n  }\n\n  cadastrarOrdemServico(): void {\n    if (this.form.invalid || this.formGrupoServico.invalid) {\n      this.toast.error('Formulário com campos invalidos', 'Erro!', {\n        timeOut: 4000,\n      });\n      this.toucheCamposFormulario();\n      return;\n    }\n\n    this.ordemServico.codigoSupergas = Number(\n      this.form.get('codigoSupergas').value,\n    );\n    this.ordemServico.data = this.form.get('data').value;\n    this.ordemServico.cliente = this.cliente;\n    this.ordemServico.status = 1;\n\n    if (this.ordemServicoCadastrada.id) {\n      this.adicionarGrupoDeServioOSAtual();\n    } else {\n      this.subscriptions.push(\n        this.ordemServicoService.insert(this.ordemServico).subscribe(\n          (data) => {\n            const msg = 'Ordem de serviço cadastrado com sucesso!';\n            this.ordemServicoCadastrada = data;\n            Swal.fire({\n              title: msg,\n              icon: 'success',\n              showConfirmButton: false,\n              timer: 2000,\n            });\n            this.adicionarGrupoDeServioOSAtual();\n          },\n          (err) => {\n            const msg = err.error;\n            Swal.fire({\n              title: msg,\n              icon: 'error',\n              showConfirmButton: false,\n              timer: 2000,\n            });\n          },\n        ),\n      );\n    }\n  }\n\n  toucheCamposFormulario(): void {\n    this.form.get('codigoSupergas').markAsTouched();\n    this.form.get('data').markAsTouched();\n    this.form.get('cliente').markAsTouched();\n  }\n\n  refresh(): void {\n    window.location.reload();\n  }\n\n  // ///// FUÇÕES DE CLIENTE  \\\\\\\\\\\\\\\\\\\n\n  filtraUsuarioPeloNome(nome: string): void {\n    this.clienteSelecionado = true;\n    this.dadosCliente = false;\n    if (!nome) {\n      this.clienteFiltrados = this.clientes;\n    } else {\n      this.clienteFiltrados = this.clientes.filter((x) =>\n        x.nome.trim().toLowerCase().includes(nome.trim().toLowerCase()),\n      );\n    }\n  }\n\n  dadosClienteSelecionado(id: number): void {\n    this.cliente = this.clientes.find((x) => x.id === id);\n\n    if (!this.cliente) {\n      const msg = 'Erro ao carregar cliente';\n      Swal.fire({\n        title: msg,\n        icon: 'error',\n        showConfirmButton: false,\n        timer: 2000,\n      });\n    }\n\n    this.populandoFomularioCliente();\n    this.clienteSelecionado = false;\n  }\n\n  populandoFomularioCliente(): void {\n    this.dadosCliente = true;\n    this.form.patchValue({\n      cliente: this.cliente.nome,\n      data: this.ordemServicoCadastrada.data,\n    });\n  }\n\n  carregarClientes(): void {\n    this.subscriptions.push(\n      this.clienteService.getAll().subscribe(\n        (data) => {\n          this.clientes = data;\n          this.carregarDadosOsAtual();\n        },\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n      ),\n    );\n  }\n\n  // ///// FUÇÕES DE GRUPO DE SERVIÇO  \\\\\\\\\\\\\\\\\\\n\n  criarFormGrupoServico(): void {\n    this.formGrupoServico = this.fb.group({\n      codigoSapItem: ['', Validators.required],\n      descSapItem: ['', Validators.required],\n      valorUnitario: ['', Validators.required],\n      quantidade: ['', Validators.required],\n      unidadeGrupoServico: ['', Validators.required],\n      descServico: ['', Validators.required],\n      tipoGrupoServico: ['', Validators.required],\n    });\n  }\n\n  limparCodSupergas(): void {\n    this.form.patchValue({\n      codigoSupergas: null,\n    });\n  }\n\n  filtraGrupoServicoCodSupergas(codSap: string): void {\n    this.grupoServicoSelecionado = true;\n    this.dadosGrupoServico = false;\n    if (!codSap) {\n      this.grupoServicosFiltrados = this.grupoServicos;\n    } else {\n      this.grupoServicosFiltrados = this.grupoServicos.filter((x) =>\n        x.codigoSapItem\n          .toString()\n          .trim()\n          .toLowerCase()\n          .includes(codSap.toLowerCase().trim()),\n      );\n    }\n  }\n\n  carregarGrupoServico(): void {\n    this.subscriptions.push(\n      this.grupoServicoService.getAll().subscribe(\n        (data) => {\n          this.grupoServicos = data;\n        },\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n      ),\n    );\n  }\n\n  dadosGrupoServicoSelecionado(id: number): void {\n    this.grupoServico = this.grupoServicos.find((x) => x.id === id);\n    if (!this.grupoServico) {\n      const msg = 'Erro ao carregar cliente';\n      Swal.fire({\n        title: msg,\n        icon: 'error',\n        showConfirmButton: false,\n        timer: 2000,\n      });\n    }\n    this.populandoCodGrupoServico();\n    this.grupoServicoSelecionado = false;\n  }\n\n  populandoCodGrupoServico(): void {\n    this.dadosGrupoServico = true;\n    this.form.patchValue({\n      codigoSupergas: this.grupoServico.codigoSapItem,\n    });\n\n    this.populandoFormularioGrupoServico();\n  }\n\n  populandoFormularioGrupoServico(): void {\n    this.formGrupoServico.patchValue({\n      codigoSapItem: this.grupoServico.codigoSapItem,\n      descSapItem: this.grupoServico.descSapItem,\n      valorUnitario: this.grupoServico.valorUnitario,\n      quantidade: 1,\n      unidadeGrupoServico: this.grupoServico.unidadeGrupoServico.id,\n      descServico: this.grupoServico.descServico,\n      tipoGrupoServico: this.grupoServico.tipoGrupoServico.id,\n    });\n  }\n\n  carregaDadosUGS(): void {\n    this.subscriptions.push(\n      this.uGSService.getAll().subscribe(\n        (data) => {\n          this.unidadeGrupoServicos = data;\n        },\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n      ),\n    );\n  }\n\n  carregaDadosTGS(): void {\n    this.subscriptions.push(\n      this.tGSService.getAll().subscribe(\n        (data) => {\n          this.tipoGrupoServicos = data;\n        },\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n      ),\n    );\n  }\n\n  adicionarGrupoDeServioOSAtual(): void {\n    this.ordemServicoGrupoServico.grupoServicoId = this.grupoServico.id;\n    this.ordemServicoGrupoServico.ordemServicoId = this.ordemServicoCadastrada.id;\n    this.ordemServicoGrupoServico.quantidade = this.formGrupoServico.get(\n      'quantidade',\n    ).value;\n    this.ordemServicoGrupoServico.valor = this.grupoServico.valorUnitario;\n\n    this.subscriptions.push(\n      this.ordemServicoGrupoServicoService\n        .insert(this.ordemServicoGrupoServico)\n        .subscribe(\n          (data) => this.carregarDadosOsAtual(),\n          (err) => {\n            const msg = err.error;\n            Swal.fire({\n              title: msg,\n              icon: 'error',\n              showConfirmButton: false,\n              timer: 2000,\n            });\n          },\n        ),\n    );\n  }\n\n  carregarDadosOsAtual(): void {\n    this.subscriptions.push(\n      this.ordemServicoService.findById(this.ordemServicoId).subscribe(\n        (data) => {\n          this.ordemServicoCadastrada = data;\n          if (this.ordemServicoCadastrada.status === 0) {\n            this.router.navigate([\n              `/order-service/visualizar/${this.ordemServicoCadastrada.id}`,\n            ]);\n          }\n          this.quandoServicoGrupoServico();\n          this.dadosClienteSelecionado(this.ordemServicoCadastrada.cliente.id);\n        },\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n      ),\n    );\n    this.limparCodSupergas();\n  }\n\n  quandoServicoGrupoServico(): void {\n    const idOS = this.ordemServicoCadastrada.id;\n    this.totalServicos = 0;\n\n    this.ordemServicoCadastrada.grupoServico.forEach((x) => {\n      this.ordemServicoGrupoServicoService.findById(idOS, x.id).subscribe(\n        (data) => {\n          x.quantidade = data.quantidade;\n          x.valorUnitario = data.valor;\n          this.totalServicos += data.quantidade * data.valor;\n          return x;\n        },\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n      );\n    });\n  }\n\n  finalizarOrdemDeServico(): void {\n    this.ordemServicoCadastrada.status = 0;\n    this.subscriptions.push(\n      this.ordemServicoService.update(this.ordemServicoCadastrada).subscribe(\n        (data) => {\n          const msg = 'Ordem de serviço fechada com sucesso';\n          Swal.fire({\n            title: msg,\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n\n          setTimeout(() => {\n            this.refresh();\n          }, 1900);\n        },\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n      ),\n    );\n  }\n\n  removerItemServicoAtual(idOS: number, idGS: number): void {\n    this.subscriptions.push(\n      this.ordemServicoGrupoServicoService.delete(idOS, idGS).subscribe(\n        (data) => this.carregarDadosOsAtual(),\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n      ),\n    );\n  }\n\n  cadastrarGrupoServico(): void {\n    if (this.form.invalid) {\n      this.toast.error('Formulário com campos invalidos', 'Erro!', {\n        timeOut: 4000,\n      });\n      this.toucheCamposFormulario();\n      return;\n    }\n\n    this.grupoServico = this.form.value;\n    const unidadeGrupoServicoId = Number(\n      this.form.get('unidadeGrupoServico').value,\n    );\n    const tipoGrupoServicoId = Number(this.form.get('tipoGrupoServico').value);\n\n    this.grupoServico.unidadeGrupoServico = this.unidadeGrupoServicos.find(\n      (x) => x.id === unidadeGrupoServicoId,\n    );\n\n    this.grupoServico.tipoGrupoServico = this.tipoGrupoServicos.find(\n      (x) => x.id === tipoGrupoServicoId,\n    );\n\n    this.subscriptions.push(\n      this.grupoServicoService.insert(this.grupoServico).subscribe(\n        (data) => {\n          const msg = 'Grupo de serviço cadastrado com sucesso!';\n\n          Swal.fire({\n            title: msg,\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n      ),\n    );\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n        <div class=\"wrapper wrapper-content animated fadeInRight\">\n          <div class=\"row\">\n              <div class=\"col-lg-12\">\n                  <div class=\"ibox float-e-margins\">\n                      <div class=\"ibox-title\">\n                          <h5>Formulário Para Cadastrar Ordem de Serviço &nbsp;&nbsp;<b class=\"text-danger\"><i class='fa fa-exclamation'></i> Campos obrigatórios</b></h5>\n                          <div class=\"ibox-tools\">\n                              <a class=\"collapse-link\">\n                                  <i class=\"fa fa-chevron-up\"></i>\n                              </a>\n                          </div>\n                      </div>\n                      <div class=\"ibox-content\">\n                          <form class=\"form-horizontal\" [formGroup]=\"form\" novalidate>\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Cliente <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\">\n                                <div class=\"col-md-8\">\n                                  <input type=\"text\"\n                                    formControlName=\"cliente\"\n                                    name=\"cliente\"\n                                    id=\"cliente\"\n                                    class=\"form-control\"\n                                    placeholder=\"digite o nome do cliente\"\n                                    aria-label=\"Search\"\n                                    autocomplete=\"off\"\n                                    #termoPesquisa\n                                    (keyup)=\"filtraUsuarioPeloNome(termoPesquisa.value)\"\n                                  >\n                                  <ul class=\"list-group\" style=\"position: absolute; z-index: 999; background-color: #fff;\" *ngIf=\"clienteSelecionado\">\n                                    <li class=\"list-group-item\" *ngFor=\"let item of clienteFiltrados\">\n                                      <a (click)=\"dadosClienteSelecionado(item.id)\">\n                                          {{ item.nome }}\n                                      </a>\n                                    </li>\n                                  </ul>\n                                </div>\n                                <br>\n                                <div class=\"col-sm-12\" *ngIf=\"dadosCliente\">\n\n                                  <div class=\"col-sm-8\">\n                                      <h3><strong>{{ cliente.nome }}</strong></h3>\n                                      <!-- <p><i class=\"fa fa-map-marker\"></i> {{ cliente.enderecos }} </p> -->\n                                      <address>\n                                          <strong>Cod. SuperGas {{ cliente.codigoSupergas }}</strong>\n                                          <p *ngFor=\"let endereco of cliente.enderecos\">\n                                            {{ endereco.logradouro }}, {{ endereco.numero }}\n                                            <br>\n                                            {{ endereco.bairro }},\n                                            <br>\n                                            {{ endereco.cidade.nome }}, {{ endereco.cidade.estado.uf }}\n                                            <br> cep: {{endereco.cep}}\n                                          </p>\n                                          <label title=\"Phone\">Fone:</label> {{ cliente.telefone }}\n                                      </address>\n                                  </div>\n                                </div>\n\n                                <small *ngIf=\"form.get('cliente').valid && form.get('cliente').touched\" class=\"form-text text-success\" >ok</small>\n                                <small *ngIf=\"!form.get('cliente').valid && form.get('cliente').touched\"class=\"form-text text-danger\" >Campo cliente requerido</small>\n                              </div>\n                            </div>\n\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Cod. Supergas <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\">\n                                <div class=\"col-md-8\">\n                                  <input type=\"text\"\n                                    formControlName=\"codigoSupergas\"\n                                    name=\"codigoSupergas\"\n                                    id=\"codigoSupergas\"\n                                    class=\"form-control\"\n                                    placeholder=\"digite o cod. supergas\"\n                                    aria-label=\"Search\"\n                                    required\n                                    autocomplete=\"off\"\n                                    #grupoServicoPesquisa\n                                    (keyup)=\"filtraGrupoServicoCodSupergas(grupoServicoPesquisa.value)\"\n                                  >\n                                  <ul class=\"list-group\" style=\"position: absolute; z-index: 999; background-color: #fff;\" *ngIf=\"grupoServicoSelecionado\">\n                                    <li class=\"list-group-item\" *ngFor=\"let item of grupoServicosFiltrados\">\n                                      <a (click)=\"dadosGrupoServicoSelecionado(item.id)\">\n                                          {{ item.codigoSapItem }}\n                                      </a>\n                                    </li>\n                                  </ul>\n                                  <small *ngIf=\"form.get('codigoSupergas').valid && form.get('codigoSupergas').touched\" class=\"form-text text-success\" >ok</small>\n                                  <small *ngIf=\"!form.get('codigoSupergas').valid && form.get('codigoSupergas').touched\"class=\"form-text text-danger\" >Campo Cod. Supergas requerido</small>\n                                </div>\n                                <br>\n                                <div class=\"col-sm-12\" *ngIf=\"form.get('codigoSupergas').valid\">\n                                  <form class=\"form-horizontal\" style=\"margin-top: 20px;\" [formGroup]=\"formGrupoServico\" novalidate>\n                                      <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Código Sap <i class='fa fa-exclamation text-danger'></i></label>\n                                          <div class=\"col-sm-6\">\n                                              <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-vcard'></i></span>\n                                                  <input type=\"text\" class=\"form-control\" formControlName=\"codigoSapItem\" name=\"codigoSapItem\" required></div>\n                                                  <small *ngIf=\"formGrupoServico.get('codigoSapItem').valid && formGrupoServico.get('codigoSapItem').touched\" class=\"form-text text-success\" >ok</small>\n                                                  <small *ngIf=\"!formGrupoServico.get('codigoSapItem').valid && formGrupoServico.get('codigoSapItem').touched\"class=\"form-text text-danger\" >Campo código sap requerido</small>\n                                          </div>\n                                      </div>\n                                      <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Descrição Sap <i class='fa fa-exclamation text-danger'></i></label>\n                                          <div class=\"col-sm-6\">\n                                              <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-id-card'></i></span>\n                                                  <input type=\"text\" formControlName=\"descSapItem\" class=\"form-control\" name=\"descSapItem\" required></div>\n                                                  <small *ngIf=\"formGrupoServico.get('descSapItem').valid && formGrupoServico.get('descSapItem').touched\" class=\"form-text text-success\" >ok</small>\n                                                  <small *ngIf=\"!formGrupoServico.get('descSapItem').valid && formGrupoServico.get('descSapItem').touched\"class=\"form-text text-danger\" >Campo descrição sap requerido</small>\n                                          </div>\n                                      </div>\n\n                                      <div class=\"form-group\" id=\"data_1\"><label class=\"col-sm-2 control-label\">Valor Unitário <i class='fa fa-exclamation text-danger'></i></label>\n                                          <div class=\"col-sm-6\">\n                                              <div class=\"input-group date m-b\">\n                                                  <span class=\"input-group-addon\"><i class=\"fa fa-dollar\"></i></span>\n                                                  <input type=\"text\" formControlName=\"valorUnitario\" class=\"form-control\" name=\"valorUnitario\" required>\n                                              </div>\n                                                <small *ngIf=\"formGrupoServico.get('valorUnitario').valid && formGrupoServico.get('valorUnitario').touched\" class=\"form-text text-success\" >ok</small>\n                                                <small *ngIf=\"!formGrupoServico.get('valorUnitario').valid && formGrupoServico.get('valorUnitario').touched\"class=\"form-text text-danger\" >Campo valor unitário requerido</small>\n\n                                          </div>\n                                      </div>\n                                      <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Quantidade <i class='fa fa-exclamation text-danger'></i></label>\n                                        <div class=\"col-sm-6\">\n                                            <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-vcard'></i></span>\n                                                <input type=\"text\" class=\"form-control\" formControlName=\"quantidade\" name=\"quantidade\" required></div>\n                                                <small *ngIf=\"formGrupoServico.get('quantidade').valid && formGrupoServico.get('quantidade').touched\" class=\"form-text text-success\" >ok</small>\n                                                <small *ngIf=\"!formGrupoServico.get('quantidade').valid && formGrupoServico.get('quantidade').touched\"class=\"form-text text-danger\" >Quantidade requerido</small>\n                                        </div>\n                                      </div>\n                                      <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Serviço desc.<i class='fa fa-exclamation text-danger'></i></label>\n                                        <div class=\"col-sm-6\">\n                                          <div class=\"input-group date m-b\">\n                                              <span class=\"input-group-addon\"><i class=\"fa fa-vcard\"></i></span>\n                                              <input type=\"text\" formControlName=\"descServico\" class=\"form-control\" name=\"descServico\" required>\n                                          </div>\n                                            <small *ngIf=\"formGrupoServico.get('descServico').valid && formGrupoServico.get('descServico').touched\" class=\"form-text text-success\" >ok</small>\n                                            <small *ngIf=\"!formGrupoServico.get('descServico').valid && formGrupoServico.get('descServico').touched\"class=\"form-text text-danger\" >Campo descrição servico obrigatório</small>\n                                        </div>\n                                      </div>\n                                      <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Unidade G. Servico <i class='fa fa-exclamation text-danger'></i></label>\n                                          <div class=\"col-sm-10\">\n                                              <div class=\"col-lg-6 m-l-n\">\n                                                  <select class='form-control' formControlName=\"unidadeGrupoServico\" name='unidadeGrupoServico' required>\n                                                    <option *ngFor=\"let item of unidadeGrupoServicos\" value='{{ item.id }}'>{{ item.nome }}</option>\n                                                  </select>\n                                                  <small *ngIf=\"formGrupoServico.get('unidadeGrupoServico').valid && formGrupoServico.get('unidadeGrupoServico').touched\" class=\"form-text text-success\" >ok</small>\n                                                  <small *ngIf=\"!formGrupoServico.get('unidadeGrupoServico').valid && formGrupoServico.get('unidadeGrupoServico').touched\"class=\"form-text text-danger\" >Campo unidade grupo servico requerido</small>\n                                              </div>\n                                          </div>\n                                      </div>\n\n                                      <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Tipo G. Servico <i class='fa fa-exclamation text-danger'></i></label>\n                                        <div class=\"col-sm-10\">\n                                            <div class=\"col-lg-6 m-l-n\">\n                                                <select class='form-control' formControlName=\"tipoGrupoServico\" name='tipoGrupoServico' required>\n                                                  <option *ngFor=\"let item of tipoGrupoServicos\" value='{{ item.id }}'>{{ item.descricao }}</option>\n                                                </select>\n                                                <small *ngIf=\"formGrupoServico.get('tipoGrupoServico').valid && formGrupoServico.get('tipoGrupoServico').touched\" class=\"form-text text-success\" >ok</small>\n                                                <small *ngIf=\"!formGrupoServico.get('tipoGrupoServico').valid && formGrupoServico.get('tipoGrupoServico').touched\"class=\"form-text text-danger\" >Campo tipo grupo servico requerido</small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"hr-line-dashed\"></div>\n                                  </form>\n                                </div>\n                              </div>\n                            </div>\n\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Data <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\" >\n                                  <div class=\"input-group date m-b\">\n                                      <span class=\"input-group-addon\">\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                      </span>\n                                      <input matInput [matDatepicker]=\"picker\" disabled formControlName=\"data\" class=\"form-control\">\n                                      <mat-datepicker #picker disabled=\"false\" [startAt]=\"startDate\"></mat-datepicker>\n                                      <small *ngIf=\"form.get('data').valid && form.get('data').touched\" class=\"form-text text-success\" >ok</small>\n                                      <small *ngIf=\"!form.get('data').valid && form.get('data').touched\"class=\"form-text text-danger\" >Campo data requerido</small>\n                                  </div>\n                              </div>\n                            </div>\n\n\n                            <div class=\"hr-line-dashed\"></div>\n                            <div class=\"form-group\">\n                                <div class=\"col-sm-4 col-sm-offset-2\">\n                                    <button class=\"btn btn-w-m btn-warning\" type=\"reset\"><i class=\"fa fa-close\"></i> Limpar</button>\n                                    <button class=\"btn btn-w-m btn-primary\" type=\"button\" (click)=\"cadastrarOrdemServico()\" style=\"margin-left: 20px;\"><i class=\"fa fa-check\"></i> Adicionar Serviço</button>\n                                </div>\n                            </div>\n                          </form>\n                      </div>\n                  </div>\n              </div>\n          </div>\n\n          <div class=\"ibox-content\" *ngIf=\"ordemServicoCadastrada.id\">\n            <h3>Serviços da OS atual</h3>\n            <div class=\"table-responsive\">\n                <table class='table table-striped table-bordered table-hover dataTables-example'>\n                  <thead>\n                    <tr>\n                      <th>Código Sap</th>\n                      <th>Descrição Sap</th>\n                      <th>Valor Unitário</th>\n                      <th>Quantidade</th>\n                      <th>Unidade Grupo Serviço</th>\n                      <th>Tipo Grupo Servico</th>\n                      <th>Ação</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr class='gradeX' *ngFor=\"let item of ordemServicoCadastrada.grupoServico\">\n                      <td> {{ item.codigoSapItem }} </td>\n                      <td> {{ item.descSapItem }} </td>\n                      <td> {{ item.valorUnitario | currency:'BRL':true }} </td>\n                      <td> {{ item.quantidade }} </td>\n                      <td> {{ item.unidadeGrupoServico?.nome }} </td>\n                      <td> {{ item.tipoGrupoServico.descricao }} </td>\n\n                      <td>\n                          <Button class=\"btn btn-outline btn-danger\" (click)=\"removerItemServicoAtual(ordemServicoCadastrada.id, item.id)\"  style=\"margin-right: 5px;\">Remover</Button>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th></th>\n                      <th></th>\n                      <th></th>\n                      <th></th>\n                      <th></th>\n                      <th>Total</th>\n                      <th>{{ totalServicos | currency:'BRL':true }}</th>\n\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n              <div class=\"hr-line-dashed\"></div>\n              <button class=\"btn btn-w-m btn-danger pull-right m-t-n-xs\" type=\"button\" (click)=\"finalizarOrdemDeServico()\" style=\"margin-left: 20px; margin-bottom: 25px;\"><i class=\"fa fa-check\"></i> Finalizar Ordem de Serviço</button>\n              <br><br>\n          </div>\n      </div>\n    </div>\n</div>\n","export * from './atualizar.component';\n","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport {\n  Cliente,\n  ClienteService,\n  OrdemServicoService,\n  OrdemServico,\n  GrupoServico,\n  GrupoServicoService,\n  UnidadeGrupoServico,\n  TipoGrupoServico,\n  ErroGeral,\n  ErroDTO,\n  TipoGrupoServicoService,\n  UnidadeGrupoServicoService,\n  OrdemServicoGrupoServicoService,\n  OrdemServiceGrupoServiceDTO,\n} from 'src/app/modules/shared';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\n\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-cadastrar',\n  templateUrl: './cadastrar.component.html',\n  styleUrls: ['./cadastrar.component.css'],\n})\nexport class CadastrarComponent implements OnInit {\n  // VARIAVEIS CLASSE PRINCIPAL\n\n  erroGeral = {} as ErroGeral;\n\n  erroDTO = {} as ErroDTO;\n\n  startDate = new Date();\n\n  private subscriptions: Subscription[] = [];\n\n  ordemServico = {} as OrdemServico;\n\n  ordemServicoCadastrada = {} as OrdemServico;\n\n  ordemServicoGrupoServico = {} as OrdemServiceGrupoServiceDTO;\n\n  form: FormGroup;\n\n  // VARIAVEIS CLIENTE\n\n  clienteSelecionado = false;\n\n  dadosCliente = false;\n\n  clientes: Cliente[] = [];\n\n  cliente = {} as Cliente;\n\n  clienteFiltrados: Cliente[] = [];\n\n  // VARIAVEIS GRUPO DE SERVIÇO\n\n  grupoServicoSelecionado = false;\n\n  dadosGrupoServico = false;\n\n  grupoServicos: GrupoServico[] = [];\n\n  grupoServicosFiltrados: GrupoServico[] = [];\n\n  grupoServico = {} as GrupoServico;\n\n  formGrupoServico: FormGroup;\n\n  unidadeGrupoServicos: UnidadeGrupoServico[] = [];\n\n  unidadeGrupoServico = {} as UnidadeGrupoServico;\n\n  tipoGrupoServicos: TipoGrupoServico[] = [];\n\n  tipoGrupoServico = {} as TipoGrupoServico;\n\n  totalServicos = 0;\n\n  constructor(\n    private clienteService: ClienteService,\n    private grupoServicoService: GrupoServicoService,\n    private uGSService: UnidadeGrupoServicoService,\n    private tGSService: TipoGrupoServicoService,\n    private toast: ToastrService,\n    private fb: FormBuilder,\n    private ordemServicoService: OrdemServicoService,\n    private ordemServicoGrupoServicoService: OrdemServicoGrupoServicoService,\n  ) {}\n\n  ngOnInit(): void {\n    this.criarForm();\n    this.carregarClientes();\n    this.carregarGrupoServico();\n    this.criarFormGrupoServico();\n    this.carregaDadosUGS();\n    this.carregaDadosTGS();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  criarForm(): void {\n    this.form = this.fb.group({\n      codigoSupergas: ['', Validators.required],\n      data: ['', Validators.required],\n      cliente: ['', Validators.required],\n    });\n  }\n\n  cadastrarOrdemServico(): void {\n    if (this.form.invalid || this.formGrupoServico.invalid) {\n      this.toast.error('Formulário com campos invalidos', 'Erro!', {\n        timeOut: 4000,\n      });\n      this.toucheCamposFormulario();\n      return;\n    }\n\n    this.ordemServico.codigoSupergas = Number(\n      this.form.get('codigoSupergas').value,\n    );\n    this.ordemServico.data = this.form.get('data').value;\n    this.ordemServico.cliente = this.cliente;\n    this.ordemServico.status = 1;\n\n    if (this.ordemServicoCadastrada.id) {\n      this.adicionarGrupoDeServioOSAtual();\n    } else {\n      this.subscriptions.push(\n        this.ordemServicoService.insert(this.ordemServico).subscribe(\n          (data) => {\n            const msg = 'Ordem de serviço cadastrado com sucesso!';\n            this.ordemServicoCadastrada = data;\n            Swal.fire({\n              title: msg,\n              icon: 'success',\n              showConfirmButton: false,\n              timer: 2000,\n            });\n            this.adicionarGrupoDeServioOSAtual();\n          },\n          (err) => {\n            const msg = err.error;\n            Swal.fire({\n              title: msg,\n              icon: 'error',\n              showConfirmButton: false,\n              timer: 2000,\n            });\n          },\n        ),\n      );\n    }\n  }\n\n  toucheCamposFormulario(): void {\n    this.form.get('codigoSupergas').markAsTouched();\n    this.form.get('data').markAsTouched();\n    this.form.get('cliente').markAsTouched();\n  }\n\n  refresh(): void {\n    window.location.reload();\n  }\n\n  // ///// FUÇÕES DE CLIENTE  \\\\\\\\\\\\\\\\\\\n\n  filtraUsuarioPeloNome(nome: string): void {\n    this.clienteSelecionado = true;\n    this.dadosCliente = false;\n    if (!nome) {\n      this.clienteFiltrados = this.clientes;\n    } else {\n      this.clienteFiltrados = this.clientes.filter((x) =>\n        x.nome.trim().toLowerCase().includes(nome.trim().toLowerCase()),\n      );\n    }\n  }\n\n  dadosClienteSelecionado(id: number): void {\n    this.cliente = this.clientes.find((x) => x.id === id);\n    if (!this.cliente) {\n      const msg = 'Erro ao carregar cliente';\n      Swal.fire({\n        title: msg,\n        icon: 'error',\n        showConfirmButton: false,\n        timer: 2000,\n      });\n    }\n\n    this.populandoFomularioCliente();\n    this.clienteSelecionado = false;\n  }\n\n  populandoFomularioCliente(): void {\n    this.dadosCliente = true;\n    this.form.patchValue({\n      cliente: this.cliente.nome,\n    });\n  }\n\n  carregarClientes(): void {\n    this.subscriptions.push(\n      this.clienteService.getAll().subscribe(\n        (data) => {\n          this.clientes = data;\n        },\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n      ),\n    );\n  }\n\n  // ///// FUÇÕES DE GRUPO DE SERVIÇO  \\\\\\\\\\\\\\\\\\\n\n  criarFormGrupoServico(): void {\n    this.formGrupoServico = this.fb.group({\n      codigoSapItem: ['', Validators.required],\n      descSapItem: ['', Validators.required],\n      valorUnitario: ['', Validators.required],\n      quantidade: ['', Validators.required],\n      unidadeGrupoServico: ['', Validators.required],\n      descServico: ['', Validators.required],\n      tipoGrupoServico: ['', Validators.required],\n    });\n  }\n\n  limparCodSupergas(): void {\n    this.form.patchValue({\n      codigoSupergas: null,\n    });\n  }\n\n  filtraGrupoServicoCodSupergas(codSap: string): void {\n    this.grupoServicoSelecionado = true;\n    this.dadosGrupoServico = false;\n    if (!codSap) {\n      this.grupoServicosFiltrados = this.grupoServicos;\n    } else {\n      this.grupoServicosFiltrados = this.grupoServicos.filter((x) =>\n        x.codigoSapItem\n          .toString()\n          .trim()\n          .toLowerCase()\n          .includes(codSap.toLowerCase().trim()),\n      );\n    }\n  }\n\n  carregarGrupoServico(): void {\n    this.subscriptions.push(\n      this.grupoServicoService.getAll().subscribe(\n        (data) => {\n          this.grupoServicos = data;\n        },\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n      ),\n    );\n  }\n\n  dadosGrupoServicoSelecionado(id: number): void {\n    this.grupoServico = this.grupoServicos.find((x) => x.id === id);\n    if (!this.grupoServico) {\n      const msg = 'Erro ao carregar cliente';\n      Swal.fire({\n        title: msg,\n        icon: 'error',\n        showConfirmButton: false,\n        timer: 2000,\n      });\n    }\n    this.populandoCodGrupoServico();\n    this.grupoServicoSelecionado = false;\n  }\n\n  populandoCodGrupoServico(): void {\n    this.dadosGrupoServico = true;\n    this.form.patchValue({\n      codigoSupergas: this.grupoServico.codigoSapItem,\n    });\n\n    this.populandoFormularioGrupoServico();\n  }\n\n  populandoFormularioGrupoServico(): void {\n    this.formGrupoServico.patchValue({\n      codigoSapItem: this.grupoServico.codigoSapItem,\n      descSapItem: this.grupoServico.descSapItem,\n      valorUnitario: this.grupoServico.valorUnitario,\n      quantidade: 1,\n      unidadeGrupoServico: this.grupoServico.unidadeGrupoServico.id,\n      descServico: this.grupoServico.descServico,\n      tipoGrupoServico: this.grupoServico.tipoGrupoServico.id,\n    });\n  }\n\n  carregaDadosUGS(): void {\n    this.subscriptions.push(\n      this.uGSService.getAll().subscribe(\n        (data) => {\n          this.unidadeGrupoServicos = data;\n        },\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n      ),\n    );\n  }\n\n  carregaDadosTGS(): void {\n    this.subscriptions.push(\n      this.tGSService.getAll().subscribe(\n        (data) => {\n          this.tipoGrupoServicos = data;\n        },\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n      ),\n    );\n  }\n\n  adicionarGrupoDeServioOSAtual(): void {\n    this.ordemServicoGrupoServico.grupoServicoId = this.grupoServico.id;\n    this.ordemServicoGrupoServico.ordemServicoId = this.ordemServicoCadastrada.id;\n    this.ordemServicoGrupoServico.quantidade = this.formGrupoServico.get(\n      'quantidade',\n    ).value;\n    this.ordemServicoGrupoServico.valor = this.grupoServico.valorUnitario;\n\n    this.subscriptions.push(\n      this.ordemServicoGrupoServicoService\n        .insert(this.ordemServicoGrupoServico)\n        .subscribe(\n          (data) => this.carregarDadosOsAtual(),\n          (err) => {\n            const msg = err.error;\n            Swal.fire({\n              title: msg,\n              icon: 'error',\n              showConfirmButton: false,\n              timer: 2000,\n            });\n          },\n        ),\n    );\n  }\n\n  carregarDadosOsAtual(): void {\n    this.subscriptions.push(\n      this.ordemServicoService\n        .findById(this.ordemServicoCadastrada.id)\n        .subscribe(\n          (data) => {\n            this.ordemServicoCadastrada = data;\n            this.quandoServicoGrupoServico();\n          },\n          (err) => {\n            const msg = err.error;\n            Swal.fire({\n              title: msg,\n              icon: 'error',\n              showConfirmButton: false,\n              timer: 2000,\n            });\n          },\n        ),\n    );\n    this.limparCodSupergas();\n  }\n\n  quandoServicoGrupoServico(): void {\n    const idOS = this.ordemServicoCadastrada.id;\n    this.totalServicos = 0;\n\n    this.ordemServicoCadastrada.grupoServico.forEach((x) => {\n      this.ordemServicoGrupoServicoService.findById(idOS, x.id).subscribe(\n        (data) => {\n          x.quantidade = data.quantidade;\n          x.valorUnitario = data.valor;\n          this.totalServicos += data.quantidade * data.valor;\n          x.subTotal = data.quantidade * data.valor;\n          return x;\n        },\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n      );\n    });\n  }\n\n  finalizarOrdemDeServico(): void {\n    this.ordemServicoCadastrada.status = 0;\n    this.subscriptions.push(\n      this.ordemServicoService.update(this.ordemServicoCadastrada).subscribe(\n        (data) => {\n          const msg = 'Ordem de serviço fechada com sucesso';\n          Swal.fire({\n            title: msg,\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n\n          setTimeout(() => {\n            this.refresh();\n          }, 1900);\n        },\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n      ),\n    );\n  }\n\n  removerItemServicoAtual(idOS: number, idGS: number): void {\n    this.subscriptions.push(\n      this.ordemServicoGrupoServicoService.delete(idOS, idGS).subscribe(\n        (data) => this.carregarDadosOsAtual(),\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n      ),\n    );\n  }\n\n  cadastrarGrupoServico(): void {\n    if (this.form.invalid) {\n      this.toast.error('Formulário com campos invalidos', 'Erro!', {\n        timeOut: 4000,\n      });\n      this.toucheCamposFormulario();\n      return;\n    }\n\n    this.grupoServico = this.form.value;\n    const unidadeGrupoServicoId = Number(\n      this.form.get('unidadeGrupoServico').value,\n    );\n    const tipoGrupoServicoId = Number(this.form.get('tipoGrupoServico').value);\n\n    this.grupoServico.unidadeGrupoServico = this.unidadeGrupoServicos.find(\n      (x) => x.id === unidadeGrupoServicoId,\n    );\n\n    this.grupoServico.tipoGrupoServico = this.tipoGrupoServicos.find(\n      (x) => x.id === tipoGrupoServicoId,\n    );\n\n    this.subscriptions.push(\n      this.grupoServicoService.insert(this.grupoServico).subscribe(\n        (data) => {\n          const msg = 'Grupo de serviço cadastrado com sucesso!';\n\n          Swal.fire({\n            title: msg,\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n      ),\n    );\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n        <div class=\"wrapper wrapper-content animated fadeInRight\">\n          <div class=\"row\">\n              <div class=\"col-lg-12\">\n                  <div class=\"ibox float-e-margins\">\n                      <div class=\"ibox-title\">\n                          <h5>Formulário Para Cadastrar Ordem de Serviço &nbsp;&nbsp;<b class=\"text-danger\"><i class='fa fa-exclamation'></i> Campos obrigatórios</b></h5>\n                          <div class=\"ibox-tools\">\n                              <a class=\"collapse-link\">\n                                  <i class=\"fa fa-chevron-up\"></i>\n                              </a>\n                          </div>\n                      </div>\n                      <div class=\"ibox-content\">\n                          <form class=\"form-horizontal\" [formGroup]=\"form\" novalidate>\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Cliente <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\">\n                                <div class=\"col-md-8\">\n                                  <input type=\"text\"\n                                    formControlName=\"cliente\"\n                                    name=\"cliente\"\n                                    id=\"cliente\"\n                                    class=\"form-control\"\n                                    placeholder=\"digite o nome do cliente\"\n                                    aria-label=\"Search\"\n                                    autocomplete=\"off\"\n                                    #termoPesquisa\n                                    (keyup)=\"filtraUsuarioPeloNome(termoPesquisa.value)\"\n                                  >\n                                  <ul class=\"list-group\" style=\"position: absolute; z-index: 999; background-color: #fff;\" *ngIf=\"clienteSelecionado\">\n                                    <li class=\"list-group-item\" *ngFor=\"let item of clienteFiltrados\">\n                                      <a (click)=\"dadosClienteSelecionado(item.id)\">\n                                          {{ item.nome }}\n                                      </a>\n                                    </li>\n                                  </ul>\n                                </div>\n                                <br>\n                                <div class=\"col-sm-12\" *ngIf=\"dadosCliente\">\n\n                                  <div class=\"col-sm-8\">\n                                      <h3><strong>{{ cliente.nome }}</strong></h3>\n                                      <!-- <p><i class=\"fa fa-map-marker\"></i> {{ cliente.enderecos }} </p> -->\n                                      <address>\n                                          <strong>Cod. SuperGas {{ cliente.codigoSupergas }}</strong>\n                                          <p *ngFor=\"let endereco of cliente.enderecos\">\n                                            {{ endereco.logradouro }}, {{ endereco.numero }}\n                                            <br>\n                                            {{ endereco.bairro }},\n                                            <br>\n                                            {{ endereco.cidade.nome }}, {{ endereco.cidade.estado.uf }}\n                                            <br> cep: {{endereco.cep}}\n                                          </p>\n                                          <label title=\"Phone\">Fone:</label> {{ cliente.telefone }}\n                                      </address>\n                                  </div>\n                                </div>\n\n                                <small *ngIf=\"form.get('cliente').valid && form.get('cliente').touched\" class=\"form-text text-success\" >ok</small>\n                                <small *ngIf=\"!form.get('cliente').valid && form.get('cliente').touched\"class=\"form-text text-danger\" >Campo cliente requerido</small>\n                              </div>\n                            </div>\n\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Cod. Sap <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\">\n                                <div class=\"col-md-8\">\n                                  <input type=\"text\"\n                                    formControlName=\"codigoSupergas\"\n                                    name=\"codigoSupergas\"\n                                    id=\"codigoSupergas\"\n                                    class=\"form-control\"\n                                    placeholder=\"digite o cod. Sap\"\n                                    aria-label=\"Search\"\n                                    required\n                                    autocomplete=\"off\"\n                                    #grupoServicoPesquisa\n                                    (keyup)=\"filtraGrupoServicoCodSupergas(grupoServicoPesquisa.value)\"\n                                  >\n                                  <ul class=\"list-group\" style=\"position: absolute; z-index: 999; background-color: #fff;\" *ngIf=\"grupoServicoSelecionado\">\n                                    <li class=\"list-group-item\" *ngFor=\"let item of grupoServicosFiltrados\">\n                                      <a (click)=\"dadosGrupoServicoSelecionado(item.id)\">\n                                          {{ item.codigoSapItem }}\n                                      </a>\n                                    </li>\n                                  </ul>\n                                  <small *ngIf=\"form.get('codigoSupergas').valid && form.get('codigoSupergas').touched\" class=\"form-text text-success\" >ok</small>\n                                  <small *ngIf=\"!form.get('codigoSupergas').valid && form.get('codigoSupergas').touched\"class=\"form-text text-danger\" >Campo Cod. Supergas requerido</small>\n                                </div>\n                                <br>\n                                <div class=\"col-sm-12\" *ngIf=\"form.get('codigoSupergas').valid\">\n                                  <form class=\"form-horizontal\" style=\"margin-top: 20px;\" [formGroup]=\"formGrupoServico\" novalidate>\n                                      <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Código Sap <i class='fa fa-exclamation text-danger'></i></label>\n                                          <div class=\"col-sm-6\">\n                                              <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-vcard'></i></span>\n                                                  <input type=\"text\" class=\"form-control\" formControlName=\"codigoSapItem\" name=\"codigoSapItem\" required></div>\n                                                  <small *ngIf=\"formGrupoServico.get('codigoSapItem').valid && formGrupoServico.get('codigoSapItem').touched\" class=\"form-text text-success\" >ok</small>\n                                                  <small *ngIf=\"!formGrupoServico.get('codigoSapItem').valid && formGrupoServico.get('codigoSapItem').touched\"class=\"form-text text-danger\" >Campo código sap requerido</small>\n                                          </div>\n                                      </div>\n                                      <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Descrição Sap <i class='fa fa-exclamation text-danger'></i></label>\n                                          <div class=\"col-sm-6\">\n                                              <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-id-card'></i></span>\n                                                  <input type=\"text\" formControlName=\"descSapItem\" class=\"form-control\" name=\"descSapItem\" required></div>\n                                                  <small *ngIf=\"formGrupoServico.get('descSapItem').valid && formGrupoServico.get('descSapItem').touched\" class=\"form-text text-success\" >ok</small>\n                                                  <small *ngIf=\"!formGrupoServico.get('descSapItem').valid && formGrupoServico.get('descSapItem').touched\"class=\"form-text text-danger\" >Campo descrição sap requerido</small>\n                                          </div>\n                                      </div>\n\n                                      <div class=\"form-group\" id=\"data_1\"><label class=\"col-sm-2 control-label\">Valor Unitário <i class='fa fa-exclamation text-danger'></i></label>\n                                          <div class=\"col-sm-6\">\n                                              <div class=\"input-group date m-b\">\n                                                  <span class=\"input-group-addon\"><i class=\"fa fa-dollar\"></i></span>\n                                                  <input type=\"text\" formControlName=\"valorUnitario\" class=\"form-control\" name=\"valorUnitario\" required>\n                                              </div>\n                                                <small *ngIf=\"formGrupoServico.get('valorUnitario').valid && formGrupoServico.get('valorUnitario').touched\" class=\"form-text text-success\" >ok</small>\n                                                <small *ngIf=\"!formGrupoServico.get('valorUnitario').valid && formGrupoServico.get('valorUnitario').touched\"class=\"form-text text-danger\" >Campo valor unitário requerido</small>\n\n                                          </div>\n                                      </div>\n                                      <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Quantidade <i class='fa fa-exclamation text-danger'></i></label>\n                                        <div class=\"col-sm-6\">\n                                            <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-vcard'></i></span>\n                                                <input type=\"text\" class=\"form-control\" formControlName=\"quantidade\" name=\"quantidade\" required></div>\n                                                <small *ngIf=\"formGrupoServico.get('quantidade').valid && formGrupoServico.get('quantidade').touched\" class=\"form-text text-success\" >ok</small>\n                                                <small *ngIf=\"!formGrupoServico.get('quantidade').valid && formGrupoServico.get('quantidade').touched\"class=\"form-text text-danger\" >Quantidade requerido</small>\n                                        </div>\n                                      </div>\n                                      <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Serviço desc.<i class='fa fa-exclamation text-danger'></i></label>\n                                        <div class=\"col-sm-6\">\n                                          <div class=\"input-group date m-b\">\n                                              <span class=\"input-group-addon\"><i class=\"fa fa-vcard\"></i></span>\n                                              <input type=\"text\" formControlName=\"descServico\" class=\"form-control\" name=\"descServico\" required>\n                                          </div>\n                                            <small *ngIf=\"formGrupoServico.get('descServico').valid && formGrupoServico.get('descServico').touched\" class=\"form-text text-success\" >ok</small>\n                                            <small *ngIf=\"!formGrupoServico.get('descServico').valid && formGrupoServico.get('descServico').touched\"class=\"form-text text-danger\" >Campo descrição servico obrigatório</small>\n                                        </div>\n                                      </div>\n                                      <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Unidade G. Servico <i class='fa fa-exclamation text-danger'></i></label>\n                                          <div class=\"col-sm-10\">\n                                              <div class=\"col-lg-6 m-l-n\">\n                                                  <select class='form-control' formControlName=\"unidadeGrupoServico\" name='unidadeGrupoServico' required>\n                                                    <option *ngFor=\"let item of unidadeGrupoServicos\" value='{{ item.id }}'>{{ item.nome }}</option>\n                                                  </select>\n                                                  <small *ngIf=\"formGrupoServico.get('unidadeGrupoServico').valid && formGrupoServico.get('unidadeGrupoServico').touched\" class=\"form-text text-success\" >ok</small>\n                                                  <small *ngIf=\"!formGrupoServico.get('unidadeGrupoServico').valid && formGrupoServico.get('unidadeGrupoServico').touched\"class=\"form-text text-danger\" >Campo unidade grupo servico requerido</small>\n                                              </div>\n                                          </div>\n                                      </div>\n\n                                      <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Tipo G. Servico <i class='fa fa-exclamation text-danger'></i></label>\n                                        <div class=\"col-sm-10\">\n                                            <div class=\"col-lg-6 m-l-n\">\n                                                <select class='form-control' formControlName=\"tipoGrupoServico\" name='tipoGrupoServico' required>\n                                                  <option *ngFor=\"let item of tipoGrupoServicos\" value='{{ item.id }}'>{{ item.descricao }}</option>\n                                                </select>\n                                                <small *ngIf=\"formGrupoServico.get('tipoGrupoServico').valid && formGrupoServico.get('tipoGrupoServico').touched\" class=\"form-text text-success\" >ok</small>\n                                                <small *ngIf=\"!formGrupoServico.get('tipoGrupoServico').valid && formGrupoServico.get('tipoGrupoServico').touched\"class=\"form-text text-danger\" >Campo tipo grupo servico requerido</small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"hr-line-dashed\"></div>\n                                  </form>\n                                </div>\n                              </div>\n                            </div>\n\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Data <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\" >\n                                  <div class=\"input-group date m-b\">\n                                      <span class=\"input-group-addon\">\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                      </span>\n                                      <input matInput [matDatepicker]=\"picker\" disabled formControlName=\"data\" class=\"form-control\">\n                                      <mat-datepicker #picker disabled=\"false\" [startAt]=\"startDate\"></mat-datepicker>\n                                      <small *ngIf=\"form.get('data').valid && form.get('data').touched\" class=\"form-text text-success\" >ok</small>\n                                      <small *ngIf=\"!form.get('data').valid && form.get('data').touched\"class=\"form-text text-danger\" >Campo data requerido</small>\n                                  </div>\n                              </div>\n                            </div>\n\n\n                            <div class=\"hr-line-dashed\"></div>\n                            <div class=\"form-group\">\n                                <div class=\"col-sm-4 col-sm-offset-2\">\n                                    <button class=\"btn btn-w-m btn-warning\" type=\"reset\"><i class=\"fa fa-close\"></i> Limpar</button>\n                                    <button class=\"btn btn-w-m btn-primary\" type=\"button\" (click)=\"cadastrarOrdemServico()\" style=\"margin-left: 20px;\"><i class=\"fa fa-check\"></i> Adicionar Serviço</button>\n                                </div>\n                            </div>\n                          </form>\n                      </div>\n                  </div>\n              </div>\n          </div>\n\n          <div class=\"ibox-content\" *ngIf=\"ordemServicoCadastrada.id\">\n            <h3>Serviços da OS atual</h3>\n            <div class=\"table-responsive\">\n                <table class='table table-striped table-bordered table-hover dataTables-example'>\n                  <thead>\n                    <tr>\n                      <th>Código Sap</th>\n                      <th>Descrição Sap</th>\n                      <th>Unidade Grupo Serviço</th>\n                      <th>Tipo Grupo Servico</th>\n                      <th>Quantidade</th>\n                      <th>Valor Unitário</th>\n                      <th>Sub Total</th>\n                      <th>Ação</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr class='gradeX' *ngFor=\"let item of ordemServicoCadastrada.grupoServico\">\n                      <td> {{ item.codigoSapItem }} </td>\n                      <td> {{ item.descSapItem }} </td>\n                      <td> {{ item.unidadeGrupoServico?.nome }} </td>\n                      <td> {{ item.tipoGrupoServico.descricao }} </td>\n                      <td> {{ item.quantidade }} </td>\n                      <td> {{ item.valorUnitario | currency:'BRL':true }} </td>\n                      <td> {{ item.subTotal | currency:'BRL':true }} </td>\n\n                      <td>\n                          <Button class=\"btn btn-outline btn-danger\" (click)=\"removerItemServicoAtual(ordemServicoCadastrada.id, item.id)\"  style=\"margin-right: 5px;\">Remover</Button>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th></th>\n                      <th></th>\n                      <th></th>\n                      <th></th>\n                      <th></th>\n                      <th>Total</th>\n                      <th>{{ totalServicos | currency:'BRL':true }}</th>\n                      <th></th>\n\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n              <div class=\"hr-line-dashed\"></div>\n              <button class=\"btn btn-w-m btn-danger pull-right m-t-n-xs\" type=\"button\" (click)=\"finalizarOrdemDeServico()\" style=\"margin-left: 20px; margin-bottom: 25px;\"><i class=\"fa fa-check\"></i> Finalizar Ordem de Serviço</button>\n              <br><br>\n          </div>\n      </div>\n    </div>\n</div>\n","export * from './cadastrar.component';\n","export * from './atualizar';\nexport * from './cadastrar';\nexport * from './listar';\nexport * from './visualizar';\nexport * from './order-service.component';\n","export * from './listar.component';\n","import { Component, OnInit } from '@angular/core';\nimport {\n  OrdemServico,\n  OrdemServicoService,\n  OrdemServicoHasGrupoServico,\n  OrdemServicoGrupoServicoService,\n  GerarRelatorio,\n} from 'src/app/modules/shared';\nimport { Subscription } from 'rxjs';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport * as html2pdf from 'html2pdf.js';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-listar',\n  templateUrl: './listar.component.html',\n  styleUrls: ['./listar.component.css'],\n})\nexport class ListarComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  ordemServicos: OrdemServico[] = [];\n\n  ordemServicosRelatorio: OrdemServico[] = [];\n\n  ordemServicosGrupoServico: OrdemServicoHasGrupoServico[] = [];\n\n  oSGS = {} as OrdemServicoHasGrupoServico;\n\n  startDate = new Date();\n\n  mostrarRelatorioImpressao = false;\n\n  form: FormGroup;\n\n  relatorioFormulario = false;\n\n  valorTotal = 0;\n\n  dadosRelatorio = {} as GerarRelatorio;\n\n  nomeRelatorio: string;\n\n  constructor(\n    private ordemServicoService: OrdemServicoService,\n    private fb: FormBuilder,\n    private ordemServicoGrupoServicoService: OrdemServicoGrupoServicoService,\n  ) {}\n\n  ngOnInit(): void {\n    this.criarForm();\n    this.carregaDadosOrdemServicos();\n    this.carregaDadosOSGS();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  criarForm(): void {\n    this.form = this.fb.group({\n      nomerelatorio: ['', Validators.required],\n      datainicio: ['', Validators.required],\n      datafim: ['', Validators.required],\n    });\n  }\n\n  carregaDadosOrdemServicos(): void {\n    this.subscriptions.push(\n      this.ordemServicoService.getAll().subscribe(\n        (data) => {\n          this.ordemServicos = data;\n        },\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 3000,\n          });\n        },\n      ),\n    );\n  }\n\n  habilitarDesabilitarFormRelatorio(): void {\n    this.relatorioFormulario = !this.relatorioFormulario;\n    this.mostrarRelatorioImpressao = false;\n  }\n\n  gerarRelatorio(): void {\n    if (this.form.invalid) {\n      return;\n    }\n\n    this.dadosRelatorio = this.form.value;\n    this.nomeRelatorio = this.dadosRelatorio.nomerelatorio;\n\n    if (this.dadosRelatorio.datainicio > this.dadosRelatorio.datafim) {\n      const msg = 'Data inicio não pode ser maior que data fim!';\n      Swal.fire({\n        title: msg,\n        icon: 'error',\n        showConfirmButton: false,\n        timer: 3000,\n      });\n      return;\n    }\n    this.valorTotal = 0;\n    this.ordemServicosRelatorio = [];\n    this.ordemServicos.forEach((x) => {\n      x.valorTotalOS = 0;\n      x.data = new Date(x.data);\n\n      if (\n        x.data >= this.dadosRelatorio.datainicio &&\n        x.data <= this.dadosRelatorio.datafim\n      ) {\n        x.grupoServico.forEach((gs) => {\n          this.oSGS = this.ordemServicosGrupoServico.find((osgs) => {\n            return (\n              osgs.id.grupoServico.id === gs.id &&\n              osgs.id.ordemServico.id === x.id\n            );\n          });\n\n          if (this.oSGS) {\n            x.valorTotalOS += this.oSGS.quantidade * this.oSGS.valor;\n          }\n        });\n        this.valorTotal += x.valorTotalOS;\n        this.ordemServicosRelatorio.push(x);\n      }\n    });\n\n    const msg = 'Relatorio gerado com sucesso!';\n    Swal.fire({\n      title: msg,\n      icon: 'success',\n      showConfirmButton: false,\n      timer: 2000,\n    });\n\n    this.mostrarRelatorioImpressao = true;\n  }\n\n  gerarPDF(): void {\n    const content: Element = document.getElementById('relatoriomensal');\n\n    const options = {\n      margin: 1,\n      filename: `${this.nomeRelatorio}.pdf`,\n      image: { type: 'jpeg' },\n      html2canvas: { scale: 2 },\n      jsPDF: { orientation: 'portrait' },\n    };\n\n    html2pdf().set(options).from(content).save();\n  }\n\n  carregaDadosOSGS(): void {\n    this.subscriptions.push(\n      this.ordemServicoGrupoServicoService.getAll().subscribe(\n        (data) => {\n          this.ordemServicosGrupoServico = data;\n        },\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 3000,\n          });\n        },\n      ),\n    );\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n\n      <div class=\"wrapper wrapper-content animated fadeInRight\">\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <div class=\"ibox float-e-margins\">\n                    <div class=\"ibox-title\">\n                        <h5>Tabela de registros de todas as OS</h5>\n                        <div class=\"ibox-tools\">\n                            <a class=\"collapse-link\">\n                                <i class=\"fa fa-chevron-up\"></i>\n                            </a>\n                        </div>\n\n                    </div>\n\n                    <div class=\"ibox-content\">\n                      <button class=\"btn btn-primary btn-outline\" (click)=\"habilitarDesabilitarFormRelatorio()\">Gerar relatorio</button>\n                      <button class=\"btn btn-outline btn-success pull-right\" *ngIf=\"mostrarRelatorioImpressao\" (click)=\"gerarPDF()\">Exportar Relatorio PDF</button>\n                    </div>\n                    <div class=\"ibox-content\" *ngIf=\"relatorioFormulario\">\n                      <div class=\"inbox-content\">\n                        <form class=\"form-horizontal\" [formGroup]=\"form\" novalidate>\n                          <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Nome Relatorio <i class='fa fa-exclamation text-danger'></i></label>\n                            <div class=\"col-sm-10\">\n                              <div class=\"col-md-8\">\n                                <input type=\"text\" class=\"form-control\" formControlName=\"nomerelatorio\" name=\"nomerelatorio\" required>\n                                <small *ngIf=\"form.get('nomerelatorio').valid && form.get('nomerelatorio').touched\" class=\"form-text text-success\" >ok</small>\n                                <small *ngIf=\"!form.get('nomerelatorio').valid && form.get('nomerelatorio').touched\"class=\"form-text text-danger\" >Campo código sap requerido</small>\n                              </div>\n                            </div>\n                          </div>\n\n                          <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Data Inicio<i class='fa fa-exclamation text-danger'></i></label>\n                            <div class=\"col-sm-10\" >\n                                <div class=\"input-group date m-b\">\n                                    <span class=\"input-group-addon\">\n                                      <mat-datepicker-toggle matSuffix [for]=\"datainicio\"></mat-datepicker-toggle>\n                                    </span>\n                                    <input matInput [matDatepicker]=\"datainicio\" disabled formControlName=\"datainicio\" class=\"form-control\">\n                                    <mat-datepicker #datainicio disabled=\"false\" [startAt]=\"startDate\"></mat-datepicker>\n                                    <small *ngIf=\"form.get('datainicio').valid && form.get('datainicio').touched\" class=\"form-text text-success\" >ok</small>\n                                    <small *ngIf=\"!form.get('datainicio').valid && form.get('datainicio').touched\"class=\"form-text text-danger\" >Campo data requerido</small>\n                                </div>\n                            </div>\n                          </div>\n\n                          <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Data Fim<i class='fa fa-exclamation text-danger'></i></label>\n                            <div class=\"col-sm-10\" >\n                                <div class=\"input-group date m-b\">\n                                    <span class=\"input-group-addon\">\n                                      <mat-datepicker-toggle matSuffix [for]=\"datafim\"></mat-datepicker-toggle>\n                                    </span>\n                                    <input matInput [matDatepicker]=\"datafim\" disabled formControlName=\"datafim\" class=\"form-control\">\n                                    <mat-datepicker #datafim disabled=\"false\" [startAt]=\"startDate\"></mat-datepicker>\n                                    <small *ngIf=\"form.get('datafim').valid && form.get('datafim').touched\" class=\"form-text text-success\" >ok</small>\n                                    <small *ngIf=\"!form.get('datafim').valid && form.get('datafim').touched\"class=\"form-text text-danger\" >Campo data requerido</small>\n                                </div>\n                            </div>\n                          </div>\n                          <div class=\"hr-line-dashed\"></div>\n                            <div class=\"form-group\">\n                                <div class=\"col-sm-4 col-sm-offset-2\">\n                                    <button class=\"btn btn-w-m btn-warning\" type=\"button\" (click)=\"habilitarDesabilitarFormRelatorio()\"><i class=\"fa fa-close\"></i> Cancelar</button>\n                                    <button class=\"btn btn-w-m btn-primary\" type=\"button\" (click)=\"gerarRelatorio()\" style=\"margin-left: 20px;\"><i class=\"fa fa-check\"></i> Gerar relatorio</button>\n                                </div>\n                            </div>\n                        </form>\n                      </div>\n                    </div>\n                    <div class=\"ibox-content\" *ngIf=\"mostrarRelatorioImpressao\">\n                      <h1>Relatorio para impressão</h1>\n                      <br>\n                      <div id=\"relatoriomensal\" #relatoriomensal>\n                        <div>\n                          <img src=\"../../../../../../assets/CCOS/logo-relatorio.jpeg\" alt=\"logorelatorio\">\n                          <img src=\"../../../../../../assets/CCOS/logo-empresa.jpeg\" alt=\"logo-empresa\">\n                        </div>\n                        <H2>AB SERVIÇOS MECÂNICOS - CAPEX - REF. {{ nomeRelatorio }}</H2>\n                        <div class=\"table-responsive\">\n                          <table class=\"table table-striped table-bordered table-hover dataTables-example\">\n                            <thead>\n                              <tr>\n                                <th>EQP</th>\n                                <th>DIA</th>\n                                <th>CLIENTE</th>\n                                <th>MUNICIPIO</th>\n                                <th>VALOR</th>\n                                <th>PST</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor=\"let item of ordemServicosRelatorio\">\n                                <td>1</td>\n                                <td>{{ item.data | date: 'dd/MM/y' }}</td>\n                                <td>{{ item.cliente?.nome }}</td>\n                                <td *ngFor=\"let item2 of item.cliente?.enderecos\">\n                                  {{ item2.cidade.nome }} - {{ item2.cidade.estado.nome }}\n                                </td>\n                                <td>{{ item?.valorTotalOS | currency:'BRL':true }}</td>\n                                <td>01</td>\n                              </tr>\n                            </tbody>\n                            <thead>\n                              <tr>\n                                <th></th>\n                                <th></th>\n                                <th></th>\n                                <th>Total</th>\n                                <th>{{ valorTotal | currency:'BRL':true }}</th>\n                                <th></th>\n                              </tr>\n                            </thead>\n                          </table>\n                        </div>\n                        <br>\n                        <div class=\"hr-line-dashed\"></div>\n                        <br>\n\n                      </div>\n                    </div>\n                    <div class=\"ibox-content\" *ngIf=\"!relatorioFormulario\">\n                        <h2 *ngIf=\"ordemServicos.length <= 0\">\n                          Nenhum ordem de servico Cadastrada <br>\n                          <a href=\"/order-service/cadastrar\">\n                            <Button class=\"btn btn-outline btn-primary\" style=\"margin-top: 20px;\">Cadastrar Nova Ordem de Serviço</Button>\n                          </a>\n                        </h2>\n\n                        <div class=\"table-responsive\" *ngIf=\"ordemServicos.length > 0\">\n                            <table class='table table-striped table-bordered table-hover dataTables-example'>\n                              <thead>\n                                <tr>\n                                <th>Código Supergas</th>\n                                <th>Data</th>\n                                <th>Cliente</th>\n                                <th>Status</th>\n                                <th>Ação</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr class='gradeX' *ngFor=\"let item of ordemServicos\">\n                                  <td> {{ item.codigoSupergas }} </td>\n                                  <td> {{ item.data | date: 'd/MM/y' }} </td>\n                                  <td> {{ item.cliente.nome }}</td>\n                                  <td> {{ item.status === 1 ? 'Aberto' : 'Fechado' }}</td>\n                                  <td>\n                                    <a href=\"/order-service/{{ item.status === 1 ? 'atualizar' : 'visualizar' }}/{{item.id}}\">\n                                      <Button *ngIf=\"item.status === 1\" class=\"btn btn-outline btn-primary\" style=\"margin-right: 5px;\">Editar</Button>\n                                      <Button *ngIf=\"item.status === 0\" class=\"btn btn-outline btn-success\" style=\"margin-right: 5px;\">Detalhes</Button>\n                                    </a>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({ template: `<router-outlet></router-outlet>` })\nexport class OrderServiceComponent {}\n","export * from './visualizar.component';\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport * as html2pdf from 'html2pdf.js';\nimport {\n  OrdemServicoService,\n  OrdemServico,\n  OrdemServicoGrupoServicoService,\n} from 'src/app/modules/shared';\nimport { Subscription } from 'rxjs';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-visualizar',\n  templateUrl: './visualizar.component.html',\n  styleUrls: ['./visualizar.component.css'],\n})\nexport class VisualizarComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  ordemServicoId: number;\n\n  ordemServico = {} as OrdemServico;\n\n  relatorio = 'OrdemDeServico';\n\n  totalServicos: number;\n\n  constructor(\n    private route: ActivatedRoute,\n    private ordemServicoService: OrdemServicoService,\n    private ordemServicoGrupoServicoService: OrdemServicoGrupoServicoService,\n  ) {}\n\n  ngOnInit(): void {\n    this.ordemServicoId = Number(this.route.snapshot.paramMap.get('osid'));\n    this.carregaDadosOS();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  carregaDadosOS(): void {\n    this.subscriptions.push(\n      this.ordemServicoService.findById(this.ordemServicoId).subscribe(\n        (data) => {\n          this.ordemServico = data;\n          this.quandoServicoGrupoServico();\n        },\n        (err) => console.error(err),\n      ),\n    );\n  }\n\n  quandoServicoGrupoServico(): void {\n    const idOS = this.ordemServicoId;\n    this.totalServicos = 0;\n\n    this.ordemServico.grupoServico.forEach((x) => {\n      this.ordemServicoGrupoServicoService.findById(idOS, x.id).subscribe(\n        (data) => {\n          x.quantidade = data.quantidade;\n          x.valorUnitario = data.valor;\n          this.totalServicos += data.quantidade * data.valor;\n          x.subTotal = 0;\n          x.subTotal = data.quantidade * data.valor;\n          return x;\n        },\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n      );\n    });\n  }\n\n  gerarPDF(): void {\n    const options = {\n      filename: `${this.relatorio}.pdf`,\n      image: { type: 'jpeg' },\n      html2canvas: {},\n      jsPDF: { orientation: 'portrait' },\n    };\n\n    const content: Element = document.getElementById('relatorioUsuario');\n\n    html2pdf().from(content).set(options).save();\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n  <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n      <div>\n        <h3>Os para impressão</h3>\n        <button class=\"btn btn-primary btn-outline pull-right\" style=\"margin-left: 10px;\" (click)=\"gerarPDF()\">Exportar OS para PDF</button>\n      </div>\n      <div id=\"relatorioUsuario\">\n        <div>\n          <img src=\"../../../../../../assets/CCOS/logo-relatorio.jpeg\" alt=\"logorelatorio\">\n          <img src=\"../../../../../../assets/CCOS/logo-empresa.jpeg\" alt=\"logo-empresa\">\n        </div>\n        <h1>CCOS - Serviços DF</h1>\n        <h2>{{ordemServico.cliente?.nome}}</h2>\n        <address>\n          <strong>Cod. SuperGas {{ ordemServico.cliente?.codigoSupergas }}</strong>\n          <p *ngFor=\"let endereco of ordemServico.cliente?.enderecos\">\n            {{ endereco.logradouro }}, {{ endereco.numero }}\n            <br>\n            {{ endereco.bairro }},\n            <br>\n            {{ endereco.cidade.nome }}, {{ endereco.cidade.estado.uf }}\n            <br> cep: {{endereco.cep}}\n          </p>\n          <label title=\"Phone\">Fone:</label> {{ ordemServico.cliente?.telefone }}\n        </address>\n        <div class=\"hr-line-dashed\"></div>\n        <div class=\"table-responsive\">\n          <table class='table table-striped table-bordered table-hover dataTables-example'>\n            <thead>\n              <tr>\n                <th>Código Sap</th>\n                <th>Descrição Sap</th>\n                <th>Unidade Grupo Serviço</th>\n                <th>Tipo Grupo Servico</th>\n                <th>Quantidade</th>\n                <th>Valor Unitário</th>\n                <th>Sub Total</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr class='gradeX' *ngFor=\"let item of ordemServico.grupoServico\">\n                <td> {{ item.codigoSapItem }} </td>\n                <td> {{ item.descSapItem }} </td>\n                <td> {{ item.unidadeGrupoServico?.nome }} </td>\n                <td> {{ item.tipoGrupoServico.descricao }} </td>\n                <td> {{ item.quantidade }} </td>\n                <td> {{ item.valorUnitario | currency:'BRL':true }} </td>\n                <td> {{ item.subTotal | currency:'BRL':true }} </td>\n              </tr>\n              <tr>\n                <th></th>\n                <th></th>\n                <th></th>\n                <th></th>\n                <th></th>\n                <th>Total</th>\n                <th>{{ totalServicos | currency:'BRL':true }}</th>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div class=\"hr-line-dashed\"></div>\n      </div>\n\n    <button class=\"btn btn-primary btn-outline pull-right\" onclick=\"history.go(-1);\">Voltar</button>\n    <br>\n    <div class=\"hr-line-dashed\"></div>\n    <br>\n  </div>\n</div>\n","export * from './order-service.module';\nexport * from './router-order-service.module';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RouterModule } from '@angular/router';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';\nimport {\n  AtualizarComponent,\n  CadastrarComponent,\n  ListarComponent,\n  OrderServiceComponent,\n  VisualizarComponent,\n} from './components';\nimport {\n  MenuModule,\n  SharedModule,\n  AppDateAdapter,\n  APP_DATE_FORMATS,\n} from '../../shared';\n\n@NgModule({\n  declarations: [\n    OrderServiceComponent,\n    AtualizarComponent,\n    CadastrarComponent,\n    ListarComponent,\n    VisualizarComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    ReactiveFormsModule,\n    SharedModule,\n    MenuModule,\n    MatDatepickerModule,\n  ],\n  providers: [\n    { provide: DateAdapter, useClass: AppDateAdapter },\n    { provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS },\n  ],\n})\nexport class OrderServiceModule {}\n","import { NgModule } from '@angular/core';\n\nimport { RouterModule, Routes } from '@angular/router';\n\nimport {\n  AtualizarComponent,\n  CadastrarComponent,\n  ListarComponent,\n  OrderServiceComponent,\n  VisualizarComponent,\n} from './components';\nimport { AutenticaRotaSerivce, AuthGuardService } from '../../shared';\n\nexport const OrderServiceRoutes: Routes = [\n  {\n    path: 'order-service',\n    component: OrderServiceComponent,\n    canActivate: [AuthGuardService],\n\n    children: [\n      {\n        path: 'pesquisar',\n        component: ListarComponent,\n        canActivate: [AutenticaRotaSerivce],\n      },\n      {\n        path: 'cadastrar',\n        component: CadastrarComponent,\n        canActivate: [AutenticaRotaSerivce],\n      },\n      { path: 'atualizar/:osid', component: AtualizarComponent },\n      { path: 'visualizar/:osid', component: VisualizarComponent },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(OrderServiceRoutes)],\n\n  exports: [RouterModule],\n})\nexport class OrderServiceRoutingModule {}\n","export * from './autentication';\nexport * from './system';\nexport * from './shared';\nexport * from './ccos';\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-barra-de-menu',\n  templateUrl: './barra-de-menu.component.html',\n  styleUrls: ['./barra-de-menu.component.css'],\n})\nexport class BarraDeMenuComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  logoff() {\n    localStorage.clear();\n  }\n}\n","<nav class=\"navbar navbar-static-top white-bg\" role=\"navigation\" style=\"margin-bottom: 0\">\n  <div class=\"navbar-header\">\n      <a class=\"navbar-minimalize minimalize-styl-2 btn btn-primary \" href=\"#\"><i class=\"fa fa-bars\"></i> </a>\n  </div>\n    <ul class=\"nav navbar-top-links navbar-right\">\n        <li>\n            <span class=\"m-r-sm text-muted welcome-message\">Bem-vindo ao CCOS - Serviços DF</span>\n        </li>\n        <!-- <li class=\"dropdown\">\n            <a class=\"dropdown-toggle count-info\" data-toggle=\"dropdown\" href=\"#\">\n                <i class=\"fa fa-envelope\"></i>  <span class=\"label label-warning\">16</span>\n            </a>\n            <ul class=\"dropdown-menu dropdown-messages\">\n                <li>\n                    <div class=\"dropdown-messages-box\">\n                        <a href=\"profile.html\" class=\"pull-left\">\n                            <img alt=\"image\" class=\"img-circle\" src=\"../../../../../../assets/img/a7.jpg\">\n                        </a>\n                        <div>\n                            <small class=\"pull-right\">46h ago</small>\n                            <strong>Mike Loreipsum</strong> started following <strong>Monica Smith</strong>. <br>\n                            <small class=\"text-muted\">3 days ago at 7:58 pm - 10.06.2014</small>\n                        </div>\n                    </div>\n                </li>\n                <li class=\"divider\"></li>\n                <li>\n                    <div class=\"dropdown-messages-box\">\n                        <a href=\"profile.html\" class=\"pull-left\">\n                            <img alt=\"image\" class=\"img-circle\" src=\"../../../../../../assets/img/a4.jpg\">\n                        </a>\n                        <div>\n                            <small class=\"pull-right text-navy\">5h ago</small>\n                            <strong>Chris Johnatan Overtunk</strong> started following <strong>Monica Smith</strong>. <br>\n                            <small class=\"text-muted\">Yesterday 1:21 pm - 11.06.2014</small>\n                        </div>\n                    </div>\n                </li>\n                <li class=\"divider\"></li>\n                <li>\n                    <div class=\"dropdown-messages-box\">\n                        <a href=\"profile.html\" class=\"pull-left\">\n                            <img alt=\"image\" class=\"img-circle\" src=\"../../../../../../assets/img/profile.jpg\">\n                        </a>\n                        <div>\n                            <small class=\"pull-right\">23h ago</small>\n                            <strong>Monica Smith</strong> love <strong>Kim Smith</strong>. <br>\n                            <small class=\"text-muted\">2 days ago at 2:30 am - 11.06.2014</small>\n                        </div>\n                    </div>\n                </li>\n                <li class=\"divider\"></li>\n                <li>\n                    <div class=\"text-center link-block\">\n                        <a href=\"mailbox.html\">\n                            <i class=\"fa fa-envelope\"></i> <strong>Read All Messages</strong>\n                        </a>\n                    </div>\n                </li>\n            </ul>\n        </li> -->\n        <!-- <li class=\"dropdown\">\n            <a class=\"dropdown-toggle count-info\" data-toggle=\"dropdown\" href=\"#\">\n                <i class=\"fa fa-bell\"></i>  <span class=\"label label-primary\">8</span>\n            </a>\n            <ul class=\"dropdown-menu dropdown-alerts\">\n                <li>\n                    <a href=\"mailbox.html\">\n                        <div>\n                            <i class=\"fa fa-envelope fa-fw\"></i> You have 16 messages\n                            <span class=\"pull-right text-muted small\">4 minutes ago</span>\n                        </div>\n                    </a>\n                </li>\n                <li class=\"divider\"></li>\n                <li>\n                    <a href=\"profile.html\">\n                        <div>\n                            <i class=\"fa fa-twitter fa-fw\"></i> 3 New Followers\n                            <span class=\"pull-right text-muted small\">12 minutes ago</span>\n                        </div>\n                    </a>\n                </li>\n                <li class=\"divider\"></li>\n                <li>\n                    <a href=\"grid_options.html\">\n                        <div>\n                            <i class=\"fa fa-upload fa-fw\"></i> Server Rebooted\n                            <span class=\"pull-right text-muted small\">4 minutes ago</span>\n                        </div>\n                    </a>\n                </li>\n                <li class=\"divider\"></li>\n                <li>\n                    <div class=\"text-center link-block\">\n                        <a href=\"notifications.html\">\n                            <strong>See All Alerts</strong>\n                            <i class=\"fa fa-angle-right\"></i>\n                        </a>\n                    </div>\n                </li>\n            </ul>\n        </li> -->\n\n\n        <li>\n            <a href=\"/login\" (click)=\"logoff()\">\n                <i class=\"fa fa-sign-out\"></i> SAIR\n            </a>\n        </li>\n\n    </ul>\n</nav>\n","export * from './barra-de-menu.component';\n","export * from './menu';\nexport * from './barra-de-menu';\nexport * from './not-found';\n","export * from './menu.module';\n","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Usuario, Permissoes, PerfilPermissaoDTO } from '../../models';\nimport { StorangeService, PerfilPermissaoService } from '../../services';\nimport { API_CONFIG } from '../../config';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css'],\n})\nexport class MenuComponent implements OnInit {\n  usuario = {} as Usuario;\n\n  baseUrlServidor = API_CONFIG.baseUrl;\n\n  permissoes: Permissoes[];\n\n  permissoesFiltradas: Permissoes[];\n\n  private subscriptions: Subscription[] = [];\n\n  perfilPermissaoDTO = {} as PerfilPermissaoDTO;\n\n  constructor(\n    private storange: StorangeService,\n    private perfilPermissaoService: PerfilPermissaoService,\n  ) {}\n\n  ngOnInit(): void {\n    this.usuario = this.storange.getLocalUser();\n    this.permissoes = this.usuario.perfil.permissoes;\n    this.permissoesFiltradas = this.permissoes;\n    this.filtrarPermissoesStatus();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  logoff(): void {\n    localStorage.clear();\n  }\n\n  filtrarPermissoesStatus(): void {\n    this.permissoes.forEach((x) => {\n      this.subscriptions.push(\n        this.perfilPermissaoService\n          .getId(this.usuario.perfil.id, x.id)\n          .subscribe((data) => {\n            this.perfilPermissaoDTO = data;\n            if (this.perfilPermissaoDTO.status === 0) {\n              this.permissoesFiltradas = this.permissoesFiltradas.filter(\n                (p) => {\n                  return p.id !== x.id;\n                },\n              );\n              return data;\n            }\n            return data;\n          }),\n      );\n    });\n  }\n\n  retornaicone(descricao: string): string {\n    switch (descricao) {\n      case 'Usuário':\n        return 'user';\n      case 'Perfil':\n        return 'users';\n      case 'Permissão':\n        return 'lock';\n      case 'Dashboard':\n        return 'dashboard';\n      case 'Home':\n        return 'home';\n      case 'Log':\n        return 'copy';\n      case 'Cliente':\n        return 'id-badge';\n      case 'Ordem De Serviço':\n        return 'gears';\n      case 'Grupo de Serviço':\n        return 'gear';\n      default:\n        return 'drupal';\n    }\n  }\n}\n","<nav class=\"navbar-default navbar-static-side\" role=\"navigation\">\n  <div class=\"sidebar-collapse\">\n      <ul class=\"nav metismenu\" id=\"side-menu\">\n\n        <!-- PERFIL DE USUARIO LOGADO -->\n        <li class=\"nav-header\">\n              <div class=\"dropdown profile-element\"> <span>\n                      <img *ngIf=\"usuario.imageProfile\" alt=\"image\" class=\"img-circle\" src=\"data:image/jpeg;base64,{{ usuario.imageProfile }}\" style=\"width: 70px; height: 70px;\"/>\n                      <img *ngIf=\"!usuario.imageProfile\" alt=\"image\" class=\"img-circle\" src=\"../../../../../assets/img/user-default.png\" style=\"width: 70px; height: 70px;\"/>\n                       </span>\n                  <a data-toggle=\"dropdown\" class=\"dropdown-toggle\" href=\"#\">\n                      <span class=\"clear\"> <span class=\"block m-t-xs\"> <strong class=\"font-bold\">{{ usuario.nome }}</strong>\n                       </span> <span class=\"text-muted text-xs block\">{{ usuario.perfil?.nome }} <b class=\"caret\"></b></span> </span> </a>\n                  <ul class=\"dropdown-menu animated fadeInRight m-t-xs\">\n                      <li><a href=\"/usuario/perfil\">Profile</a></li>\n                      <li class=\"divider\"></li>\n                      <li><a href=\"/login\" (click)=\"logoff()\">Logout</a></li>\n                  </ul>\n              </div>\n              <div class=\"logo-element\">\n                  CCOS\n              </div>\n          </li>\n\n          <!-- MENU LATERAL -->\n          <li *ngFor=\"let item of permissoesFiltradas\">\n            <a *ngIf=\"!item.permissaoPai\" href=\"{{ item.url }}\">\n              <i class=\"fa fa-{{retornaicone(item.descricao) }}\"></i>\n              <span class=\"nav-label\">{{ item.descricao }}</span>\n              <span class=\"fa arrow\" *ngIf=\"(item.descricao != 'Home' && item.descricao != 'Dashboard')\"></span>\n            </a>\n            <ul class=\"nav nav-second-level\" *ngIf=\"(item.descricao != 'Home' && item.descricao != 'Dashboard')\">\n              <li *ngFor=\"let item2 of permissoesFiltradas\">\n                <a *ngIf=\"item.id == item2.permissaoPai?.id\" href=\"{{ item2.url }}\">{{ item2.descricao }}</a>\n              </li>\n            </ul>\n          </li>\n        </ul>\n  </div>\n</nav>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { MenuComponent } from './menu.component';\n\n@NgModule({\n  declarations: [MenuComponent],\n  imports: [CommonModule, RouterModule],\n  exports: [MenuComponent],\n})\nexport class MenuModule {}\n","export * from './not-found.component';\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css'],\n})\nexport class NotFoundComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"middle-box text-center animated fadeInDown\">\n  <h1>404</h1>\n  <h2 class=\"font-bold\">Página não encontrada</h2>\n\n  <div class=\"error-desc\">\n    <h3>\n      Desculpe, mas a página que você está procurando não foi encontrada. Tente verificar o URL em busca de erros e pressione o botão de atualização no seu navegador\n      ou tente encontrar outra coisa em nosso aplicativo. Caso deseje clique no botão voltar abaixo para retorna a ultima página.\n    </h3>\n      <form class=\"form-inline m-t\" role=\"form\">\n          <button type=\"button\" onclick='history.go(-1)' class=\"btn btn-primary\">Voltar</button>\n      </form>\n  </div>\n</div>\n\n<!-- Mainly scripts -->\n<script src=\"../../../../../assets/js/jquery-3.1.1.min.js\"></script>\n<script src=\"../../../../../assets/js/bootstrap.min.js\"></script>\n","export const API_CONFIG = {\n  baseUrl: 'http://localhost:7780',\n  // baseUrl: 'https://core-base-springboot-api.herokuapp.com',\n};\n","export * from './api.config';\nexport * from './storangeKeys.config';\n","export const STORAGE_KEYS = {\n  tokenUser: '@corebase:token',\n  localUser: '@corebase:user',\n  localAllUsers: '@corebase:alluser',\n  localProfiles: '@corebase:perfils',\n  localPermitions: '@corebase:permissoes',\n  localpefpems: '@corebase:perfilpermissoes',\n  localinfoUser: '@corebase:infoUserLogged',\n};\n","export * from './mascara.directive';\n","import { Directive, HostListener, Input, ElementRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\n@Directive({\n  selector: '[mascara]',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: MascaraDirective,\n      multi: true,\n    },\n  ],\n})\nexport class MascaraDirective implements ControlValueAccessor {\n  onTouched: any;\n\n  onChange: any;\n\n  @Input('mascara') mascara: string;\n\n  constructor(private el: ElementRef) {}\n\n  writeValue(value: any) {\n    if (value) {\n      this.el.nativeElement.value = this.aplicarMascara(value);\n    }\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  @HostListener('keyup', ['$event'])\n  onKeyup($event: any) {\n    const valor: string = $event.target.value.replace(/\\D/g, '');\n\n    // retorna caso pressionado backspace\n    if ($event.keyCode === 8) {\n      this.onChange(valor);\n      return;\n    }\n\n    const pad = this.mascara.replace(/\\D/g, '').replace(/9/g, '_');\n    if (valor.length <= pad.length) {\n      this.onChange(valor);\n    }\n\n    $event.target.value = this.aplicarMascara(valor);\n  }\n\n  @HostListener('blur', ['$event'])\n  onBlur($event: any) {\n    if ($event.target.value.length === this.mascara.length) {\n      return;\n    }\n    this.onChange('');\n    $event.target.value = '';\n  }\n\n  aplicarMascara(valor: string): string {\n    valor = valor.replace(/\\D/g, '');\n    const pad = this.mascara.replace(/\\D/g, '').replace(/9/g, '_');\n    const valorMask = valor + pad.substring(0, pad.length - valor.length);\n    let valorMaskPos = 0;\n\n    valor = '';\n    for (let i = 0; i < this.mascara.length; i++) {\n      if (isNaN(parseInt(this.mascara.charAt(i)))) {\n        valor += this.mascara.charAt(i);\n      } else {\n        valor += valorMask[valorMaskPos++];\n      }\n    }\n\n    if (valor.indexOf('_') > -1) {\n      valor = valor.substr(0, valor.indexOf('_'));\n    }\n\n    return valor;\n  }\n}\n","export * from './shared.module';\nexport * from './components';\nexport * from './models';\nexport * from './services';\nexport * from './shared.module';\nexport * from './validators';\nexport * from './util';\nexport * from './interceptors';\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { API_CONFIG } from '../config/api.config';\n\nimport { StorangeService } from '../services';\n\n@Injectable()\nexport class Authinterceptor implements HttpInterceptor {\n  constructor(public storage: StorangeService) {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler,\n  ): Observable<HttpEvent<any>> {\n    const localUser = this.storage.getLocalTokenUser();\n\n    const N = API_CONFIG.baseUrl.length;\n    const requestToAPI = req.url.substring(0, N) === API_CONFIG.baseUrl;\n\n    if (localUser && requestToAPI) {\n      const authReq = req.clone({\n        headers: req.headers.set('Authorization', `Bearer ${localUser.token}`),\n      });\n\n      return next.handle(authReq);\n    }\n    return next.handle(req);\n  }\n}\n","export * from './auth.interceptor';\n","/**\n * @author Mardonio S Costa\n * @since 0.0.1\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'cpfMask',\n})\nexport class CpfPipe implements PipeTransform {\n  /**\n   * Formata um CPF ou retorna seu valor passado caso inválido.\n   * O CPF informado deve ser composto por 11 caracteres numéricos.\n   *\n   * @param string cpf\n   * @return string\n   */\n  transform(cpf: string): string {\n    if (!cpf) {\n      return '';\n    }\n\n    const cpfValor = cpf.replace(/\\D/g, '');\n\n    if (cpfValor.length !== 11) {\n      return cpf;\n    }\n\n    const cpfLista = cpfValor.match(/^(\\d{3})(\\d{3})(\\d{3})(\\d{2})$/);\n\n    if (cpfLista && cpfLista.length === 5) {\n      cpf = `${cpfLista[1]}.${cpfLista[2]}.${cpfLista[3]}-${cpfLista[4]}`;\n    }\n\n    return cpf;\n  }\n}\n","export * from './cpf.pipe';\n","export * from './login.service';\nexport * from './user-logged.service';\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Login, Forgot, TokenUser } from '../../models';\nimport { API_CONFIG } from '../../config';\nimport { StorangeService } from '../storange.service';\n\n@Injectable()\nexport class LoginService {\n  private readonly PATH: string = '/auth';\n\n  helper = new JwtHelperService();\n\n  constructor(\n    private http: HttpClient,\n    private localStorangeService: StorangeService,\n  ) {}\n\n  logar(login: Login): Observable<any> {\n    return this.http.post(`${API_CONFIG.baseUrl}/login`, login, {\n      observe: 'response',\n      responseType: 'text',\n    });\n  }\n\n  successLogin(authorizationValue: string): void {\n    const tok = authorizationValue.substring(7);\n\n    const { sub } = this.helper.decodeToken(tok);\n    const tokenUser: TokenUser = {\n      token: tok,\n      email: sub,\n    };\n\n    this.localStorangeService.setLocalTokenUser(tokenUser);\n  }\n\n  logout(): void {\n    this.localStorangeService.setLocalTokenUser(null);\n  }\n\n  forgot(email: Forgot): Observable<any> {\n    return this.http.post(`${API_CONFIG.baseUrl + this.PATH}/forgot`, email);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { StorangeService } from '../storange.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserLoggedService {\n  constructor(private storange: StorangeService) {}\n\n  userLogged(): boolean {\n    const localUser = this.storange.getLocalUser();\n    return !!localUser;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Cliente, NewClienteDTO } from '../../models';\nimport { API_CONFIG } from '../../config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ClienteService {\n  private readonly PATH: string = '/clientes';\n\n  constructor(private http: HttpClient) {}\n\n  getAll(): Observable<Cliente[]> {\n    return this.http.get<Cliente[]>(API_CONFIG.baseUrl + this.PATH);\n  }\n\n  insert(clienteDTO: NewClienteDTO): Observable<any> {\n    return this.http.post(API_CONFIG.baseUrl + this.PATH, clienteDTO);\n  }\n\n  update(cliente: Cliente): Observable<any> {\n    return this.http.put(\n      `${API_CONFIG.baseUrl + this.PATH}/${cliente.id}`,\n      cliente,\n    );\n  }\n\n  findById(id: number): Observable<Cliente> {\n    return this.http.get<Cliente>(`${API_CONFIG.baseUrl + this.PATH}/${id}`);\n  }\n}\n","// https://viacep.com.br/ws/72015035/json\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { DadosCEP } from '../../models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConsultaCEPService {\n  private readonly PATH: string = 'https://viacep.com.br/ws/';\n\n  constructor(private http: HttpClient) {}\n\n  getDadosCep(cep: string): Observable<DadosCEP> {\n    return this.http.get<DadosCEP>(`${this.PATH + cep}/json`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Estado, Cidade } from '../../models';\nimport { API_CONFIG } from '../../config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EnderecoService {\n  private readonly PATHUF: string = '/estados';\n\n  constructor(private http: HttpClient) {}\n\n  getAllEstados(): Observable<Estado[]> {\n    return this.http.get<Estado[]>(API_CONFIG.baseUrl + this.PATHUF);\n  }\n\n  getAllEstadoCidades(idEstado: number): Observable<Cidade[]> {\n    return this.http.get<Cidade[]>(\n      `${API_CONFIG.baseUrl + this.PATHUF}/${idEstado}/cidades`,\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { GrupoServico } from '../../models';\nimport { API_CONFIG } from '../../config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GrupoServicoService {\n  private readonly PATH: string = '/grupoServicos';\n\n  constructor(private http: HttpClient) {}\n\n  getAll(): Observable<GrupoServico[]> {\n    return this.http.get<GrupoServico[]>(API_CONFIG.baseUrl + this.PATH);\n  }\n\n  insert(grupoServico: GrupoServico): Observable<any> {\n    return this.http.post(API_CONFIG.baseUrl + this.PATH, grupoServico);\n  }\n\n  findById(id: number): Observable<GrupoServico> {\n    return this.http.get<GrupoServico>(\n      `${API_CONFIG.baseUrl + this.PATH}/${id}`,\n    );\n  }\n\n  update(grupoServico: GrupoServico): Observable<any> {\n    return this.http.put(\n      `${API_CONFIG.baseUrl + this.PATH}/${grupoServico.id}`,\n      grupoServico,\n    );\n  }\n}\n","export * from './unidade-grupo-servico.service';\nexport * from './tipo-grupo-servico.service';\nexport * from './cliente.service';\nexport * from './grupo-servico.service';\nexport * from './ordem-servico.service';\nexport * from './consultacep.service';\nexport * from './endereco.service';\nexport * from './ordem-servico-grupo-servico.service';\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {\n  OrdemServicoHasGrupoServico,\n  OrdemServiceGrupoServiceDTO,\n} from '../../models';\nimport { API_CONFIG } from '../../config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrdemServicoGrupoServicoService {\n  private readonly PATH: string = '/ordemServicogrupoServico';\n\n  constructor(private http: HttpClient) {}\n\n  getAll(): Observable<OrdemServicoHasGrupoServico[]> {\n    return this.http.get<OrdemServicoHasGrupoServico[]>(\n      API_CONFIG.baseUrl + this.PATH,\n    );\n  }\n\n  findById(\n    idOS: number,\n    idGS: number,\n  ): Observable<OrdemServicoHasGrupoServico> {\n    return this.http.get<OrdemServicoHasGrupoServico>(\n      `${API_CONFIG.baseUrl + this.PATH}/${idOS}/${idGS}`,\n    );\n  }\n\n  insert(\n    ordemServicoHasGrupoServico: OrdemServiceGrupoServiceDTO,\n  ): Observable<any> {\n    return this.http.post(\n      API_CONFIG.baseUrl + this.PATH,\n      ordemServicoHasGrupoServico,\n    );\n  }\n\n  delete(idOS: number, idGS: number): Observable<any> {\n    return this.http.delete(\n      `${API_CONFIG.baseUrl + this.PATH}/${idOS}/${idGS}`,\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { OrdemServico } from '../../models';\nimport { API_CONFIG } from '../../config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrdemServicoService {\n  private readonly PATH: string = '/ordemServicos';\n\n  constructor(private http: HttpClient) {}\n\n  getAll(): Observable<OrdemServico[]> {\n    return this.http.get<OrdemServico[]>(API_CONFIG.baseUrl + this.PATH);\n  }\n\n  insert(ordemServico: OrdemServico): Observable<any> {\n    return this.http.post(API_CONFIG.baseUrl + this.PATH, ordemServico);\n  }\n\n  findById(id: number): Observable<OrdemServico> {\n    return this.http.get<OrdemServico>(\n      `${API_CONFIG.baseUrl + this.PATH}/${id}`,\n    );\n  }\n\n  update(ordemServico: OrdemServico): Observable<any> {\n    return this.http.put(\n      `${API_CONFIG.baseUrl + this.PATH}/${ordemServico.id}`,\n      ordemServico,\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { TipoGrupoServico } from '../../models';\nimport { API_CONFIG } from '../../config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TipoGrupoServicoService {\n  private readonly PATH: string = '/tipoGrupoServicos';\n\n  constructor(private http: HttpClient) {}\n\n  getAll(): Observable<TipoGrupoServico[]> {\n    return this.http.get<TipoGrupoServico[]>(API_CONFIG.baseUrl + this.PATH);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { UnidadeGrupoServico } from '../../models';\nimport { API_CONFIG } from '../../config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnidadeGrupoServicoService {\n  private readonly PATH: string = '/unidadeGrupoServicos';\n\n  constructor(private http: HttpClient) {}\n\n  getAll(): Observable<UnidadeGrupoServico[]> {\n    return this.http.get<UnidadeGrupoServico[]>(API_CONFIG.baseUrl + this.PATH);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  Router,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { StorangeService } from '../storange.service';\n\n@Injectable()\nexport class AutenticaRotaSerivce implements CanActivate {\n  constructor(\n    private router: Router,\n    private storageService: StorangeService,\n  ) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot,\n  ): boolean {\n    const userLogged = this.storageService.getLocalUser();\n\n    const pp = this.storageService.getLocalPP();\n\n    if (!pp) {\n      localStorage.clear();\n      return false;\n    }\n\n    const { url } = state;\n\n    const urlValida = userLogged.perfil?.permissoes?.find((u) => u.url === url);\n\n    if (urlValida) {\n      const statusURLPerfil = pp.find(\n        (p) =>\n          p.perfilId === userLogged.perfil?.id &&\n          p.permissaoId === urlValida.id,\n      );\n\n      if (statusURLPerfil.status === 1) {\n        return true;\n      }\n    }\n    this.router.navigate(['/home']);\n    return false;\n  }\n}\n","export * from './user-guard.service';\nexport * from './logged-guard.service';\nexport * from './autentica-rota-user.service';\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { StorangeService } from '../storange.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n  constructor(\n    private router: Router,\n    private storageService: StorangeService,\n  ) {}\n\n  canActivate(): boolean {\n    const userLogged = this.storageService.getLocalUser();\n    if (userLogged) {\n      if (userLogged.status === 1) {\n        return true;\n      }\n    }\n\n    this.storageService.setLocalUser(null);\n    this.router.navigate(['/login']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { UsuarioService } from '../system';\nimport { StorangeService } from '../storange.service';\n\n@Injectable()\nexport class UserGuardService implements CanActivate {\n  constructor(\n    private router: Router,\n    private usuarioService: UsuarioService,\n    private storageService: StorangeService,\n  ) {}\n\n  canActivate(): boolean {\n    const userLogged = this.storageService.getLocalUser();\n\n    this.router.navigate(['/login']);\n    return false;\n  }\n}\n","export * from './autenticacao';\nexport * from './system';\nexport * from './storange.service';\nexport * from './guard';\nexport * from './ccos';\n","import { Injectable } from '@angular/core';\nimport {\n  Usuario,\n  Perfil,\n  Permissoes,\n  PerfilPermissaoDTO,\n  TokenUser,\n} from '../models';\nimport { STORAGE_KEYS } from '../config';\n\n@Injectable()\nexport class StorangeService {\n  getLocalUser(): Usuario {\n    const usr = localStorage.getItem(STORAGE_KEYS.localUser);\n\n    if (usr == null) {\n      return null;\n    }\n\n    return JSON.parse(usr);\n  }\n\n  setLocalUser(obj: Usuario): void {\n    if (obj == null) {\n      localStorage.removeItem(STORAGE_KEYS.localUser);\n      return;\n    }\n\n    localStorage.setItem(STORAGE_KEYS.localUser, JSON.stringify(obj));\n  }\n\n  getLocalTokenUser(): TokenUser {\n    const tok = localStorage.getItem(STORAGE_KEYS.tokenUser);\n\n    if (tok == null) {\n      return null;\n    }\n\n    return JSON.parse(tok);\n  }\n\n  setLocalTokenUser(obj: TokenUser): void {\n    if (obj == null) {\n      localStorage.removeItem(STORAGE_KEYS.tokenUser);\n      return;\n    }\n\n    localStorage.setItem(STORAGE_KEYS.tokenUser, JSON.stringify(obj));\n  }\n\n  getLocalPerfils(): Perfil[] {\n    const pfs = localStorage.getItem(STORAGE_KEYS.localProfiles);\n\n    if (pfs == null) {\n      return null;\n    }\n\n    return JSON.parse(pfs);\n  }\n\n  setLocalPerfils(obj: Perfil[]): void {\n    if (obj == null) {\n      localStorage.removeItem(STORAGE_KEYS.localProfiles);\n      return;\n    }\n\n    localStorage.setItem(STORAGE_KEYS.localProfiles, JSON.stringify(obj));\n  }\n\n  getLocalPermition(): Permissoes[] {\n    const pms = localStorage.getItem(STORAGE_KEYS.localPermitions);\n\n    if (pms == null) {\n      return null;\n    }\n\n    return JSON.parse(pms);\n  }\n\n  setLocalPermition(obj: Permissoes[]): void {\n    if (obj == null) {\n      localStorage.removeItem(STORAGE_KEYS.localPermitions);\n      return;\n    }\n\n    localStorage.setItem(STORAGE_KEYS.localPermitions, JSON.stringify(obj));\n  }\n\n  getLocalPP(): PerfilPermissaoDTO[] {\n    const pps = localStorage.getItem(STORAGE_KEYS.localpefpems);\n\n    if (pps == null) {\n      return null;\n    }\n\n    return JSON.parse(pps);\n  }\n\n  setLocalPP(obj: PerfilPermissaoDTO[]): void {\n    if (obj == null) {\n      localStorage.removeItem(STORAGE_KEYS.localpefpems);\n      return;\n    }\n\n    localStorage.setItem(STORAGE_KEYS.localpefpems, JSON.stringify(obj));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { HistoricoAcessoDTO } from '../../models';\nimport { API_CONFIG } from '../../config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HistoricoAcessoService {\n  private readonly PATH: string = '/historicoacesso';\n\n  constructor(private http: HttpClient) {}\n\n  getAllHistoryAccess(): Observable<HistoricoAcessoDTO[]> {\n    return this.http.get<HistoricoAcessoDTO[]>(API_CONFIG.baseUrl + this.PATH);\n  }\n\n  getAllHistoryAccessPagination(\n    direction = 'ASC',\n    linesPerPage = 10,\n    orderBy = 'dataAcesso',\n    page = 0,\n  ): Observable<any> {\n    return this.http.get(\n      `${\n        API_CONFIG.baseUrl + this.PATH\n      }/page?direction=${direction}&linesPerPage=${linesPerPage}&orderBy=${orderBy}&page=${page}`,\n    );\n  }\n}\n","export * from './perfil-permissao.service';\nexport * from './usuario.service';\nexport * from './perfil.service';\nexport * from './permissao.service';\nexport * from './historicoAcesso.service';\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { PerfilPermissaoDTO } from '../../models';\nimport { API_CONFIG } from '../../config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PerfilPermissaoService {\n  private readonly PATH: string = '/perfilpermissao';\n\n  constructor(private http: HttpClient) {}\n\n  getAll(): Observable<PerfilPermissaoDTO[]> {\n    return this.http.get<PerfilPermissaoDTO[]>(API_CONFIG.baseUrl + this.PATH);\n  }\n\n  getId(perfilID: number, permissaoId: number): Observable<PerfilPermissaoDTO> {\n    return this.http.get<PerfilPermissaoDTO>(\n      `${API_CONFIG.baseUrl + this.PATH}/${perfilID}/${permissaoId}`,\n    );\n  }\n\n  update(perfilPermissao: PerfilPermissaoDTO): Observable<any> {\n    return this.http.put(\n      `${API_CONFIG.baseUrl + this.PATH}/${perfilPermissao.perfilId}/${\n        perfilPermissao.permissaoId\n      }`,\n      perfilPermissao,\n    );\n  }\n\n  insert(perfilPermissao: PerfilPermissaoDTO): Observable<any> {\n    return this.http.post(API_CONFIG.baseUrl + this.PATH, perfilPermissao);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { PerfilDTO, Perfil } from '../../models';\nimport { API_CONFIG } from '../../config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PerfilService {\n  private readonly PATH: string = '/perfils';\n\n  constructor(private http: HttpClient) {}\n\n  getAll(): Observable<PerfilDTO[]> {\n    return this.http.get<PerfilDTO[]>(API_CONFIG.baseUrl + this.PATH);\n  }\n\n  getId(perfilID: number): Observable<Perfil> {\n    return this.http.get<Perfil>(\n      `${API_CONFIG.baseUrl + this.PATH}/${perfilID}`,\n    );\n  }\n\n  insert(perfil: PerfilDTO): Observable<any> {\n    return this.http.post(API_CONFIG.baseUrl + this.PATH, perfil);\n  }\n\n  update(id: number, perfil: PerfilDTO): Observable<any> {\n    return this.http.put(`${API_CONFIG.baseUrl + this.PATH}/${id}`, perfil);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Permissoes, PermissaoDTO } from '../../models';\nimport { API_CONFIG } from '../../config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PermissaoService {\n  private readonly PATH: string = '/permissoes';\n\n  constructor(private http: HttpClient) {}\n\n  getAll(): Observable<Permissoes[]> {\n    return this.http.get<Permissoes[]>(API_CONFIG.baseUrl + this.PATH);\n  }\n\n  insert(permissao: PermissaoDTO): Observable<any> {\n    return this.http.post(API_CONFIG.baseUrl + this.PATH, permissao);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { UsuarioListAllDTO, UsuarioNewDTO, Usuario } from '../../models';\nimport { API_CONFIG } from '../../config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UsuarioService {\n  private readonly PATH: string = '/usuarios';\n\n  constructor(private http: HttpClient) {}\n\n  getAll(): Observable<UsuarioListAllDTO[]> {\n    return this.http.get<UsuarioListAllDTO[]>(API_CONFIG.baseUrl + this.PATH);\n  }\n\n  getUserById(id: number): Observable<Usuario> {\n    return this.http.get<Usuario>(`${API_CONFIG.baseUrl + this.PATH}/${id}`);\n  }\n\n  getUserByEmail(email: string): Observable<Usuario> {\n    return this.http.get<Usuario>(\n      `${API_CONFIG.baseUrl + this.PATH}/email?email=${email}`,\n    );\n  }\n\n  insert(usuario: UsuarioNewDTO): Observable<any> {\n    return this.http.post(API_CONFIG.baseUrl + this.PATH, usuario);\n  }\n\n  updateUser(usuario: UsuarioListAllDTO): Observable<any> {\n    return this.http.put(\n      `${API_CONFIG.baseUrl + this.PATH}/${usuario.id}`,\n      usuario,\n    );\n  }\n\n  updateImage(file: FormData, id: number): Observable<any> {\n    return this.http.post(\n      `${API_CONFIG.baseUrl + this.PATH}/picture/${id}`,\n      file,\n    );\n  }\n\n  updateStatus(usuario: UsuarioListAllDTO): Observable<any> {\n    return this.http.patch(\n      `${API_CONFIG.baseUrl + this.PATH}/status/${usuario.id}`,\n      usuario,\n    );\n  }\n\n  updateSenha(usuario: UsuarioListAllDTO): Observable<any> {\n    return this.http.patch(\n      `${API_CONFIG.baseUrl + this.PATH}/senha/${usuario.id}`,\n      usuario,\n    );\n  }\n\n  update(usuario: UsuarioListAllDTO): Observable<any> {\n    return this.http.put(\n      `${API_CONFIG.baseUrl + this.PATH}/${usuario.id}`,\n      usuario,\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n  LoginService,\n  StorangeService,\n  PerfilPermissaoService,\n  UsuarioService,\n  PerfilService,\n  PermissaoService,\n  UserLoggedService,\n  UserGuardService,\n  AuthGuardService,\n  AutenticaRotaSerivce,\n  HistoricoAcessoService,\n  UnidadeGrupoServicoService,\n  ClienteService,\n  GrupoServicoService,\n  OrdemServicoGrupoServicoService,\n  OrdemServicoService,\n  TipoGrupoServicoService,\n  ConsultaCEPService,\n  EnderecoService,\n} from './services';\nimport {\n  BarraDeMenuComponent,\n  MenuModule,\n  NotFoundComponent,\n} from './components';\nimport { MascaraDirective } from './directives';\nimport { CpfPipe } from './pipe';\n\n@NgModule({\n  declarations: [\n    BarraDeMenuComponent,\n    NotFoundComponent,\n    MascaraDirective,\n    CpfPipe,\n  ],\n  imports: [CommonModule, MenuModule],\n  providers: [\n    LoginService,\n    StorangeService,\n    PerfilPermissaoService,\n    UsuarioService,\n    PerfilService,\n    PermissaoService,\n    UserLoggedService,\n    UserGuardService,\n    AuthGuardService,\n    AutenticaRotaSerivce,\n    HistoricoAcessoService,\n    UnidadeGrupoServicoService,\n    ClienteService,\n    GrupoServicoService,\n    OrdemServicoGrupoServicoService,\n    OrdemServicoService,\n    TipoGrupoServicoService,\n    ConsultaCEPService,\n    EnderecoService,\n  ],\n  exports: [BarraDeMenuComponent, NotFoundComponent, MascaraDirective, CpfPipe],\n})\nexport class SharedModule {}\n","import { MatDateFormats, NativeDateAdapter } from '@angular/material/core';\n\nexport class AppDateAdapter extends NativeDateAdapter {\n  format(date: Date, displayFormat: Object): string {\n    if (displayFormat === 'input') {\n      let day: string = date.getDate().toString();\n      day = +day < 10 ? `0${day}` : day;\n      let month: string = (date.getMonth() + 1).toString();\n      month = +month < 10 ? `0${month}` : month;\n      const year = date.getFullYear();\n      return `${day}/${month}/${year}`;\n    }\n    return date.toDateString();\n  }\n}\nexport const APP_DATE_FORMATS: MatDateFormats = {\n  parse: {\n    dateInput: { month: 'short', year: 'numeric', day: 'numeric' },\n  },\n  display: {\n    dateInput: 'input',\n    monthYearLabel: { year: 'numeric', month: 'numeric' },\n    dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n    monthYearA11yLabel: { year: 'numeric', month: 'long' },\n  },\n};\n","export * from './format-datepicker';\n","/**\n * @author Mardonio S Costa\n * @since 0.0.1\n */\nimport { AbstractControl } from '@angular/forms';\n\nexport class CpfValidator {\n  static validate(control: AbstractControl): { [key: string]: boolean } {\n    if (this.cpfValido(control.value)) {\n      return null;\n    }\n    return { cpf: true };\n  }\n\n  static cpfValido(cpf: any): boolean {\n    cpf = !cpf || cpf.replace(/\\D/g, '');\n    const cpfsInvsRegex = /1{11}|2{11}|3{11}|4{11}|5{11}|6{11}|7{11}|8{11}|9{11}|0{11}/;\n\n    if (!cpf || cpf.length !== 11 || cpfsInvsRegex.test(cpf)) {\n      return false;\n    }\n\n    let x = cpf.length - 1;\n    let digitosTemp = 0;\n    let e = 0;\n    let h = '';\n\n    for (let i = 0; i <= cpf.length - 3; i += 1) {\n      digitosTemp = cpf.substring(i, i + 1);\n      e += digitosTemp * x;\n      x -= 1;\n      h += digitosTemp;\n    }\n\n    let digitos = 11 - (e % 11);\n    if (digitos === 10 || digitos === 11) {\n      digitos = 0;\n    }\n\n    const cpfSemDigVer = cpf.substring(0, cpf.length - 2) + digitos;\n    x = 11;\n    e = 0;\n    for (let j = 0; j <= cpf.length - 2; j += 1) {\n      e += cpfSemDigVer.substring(j, j + 1) * x;\n      x -= 1;\n    }\n\n    let digVerificador = 11 - (e % 11);\n    if (digVerificador === 10 || digVerificador === 11) {\n      digVerificador = 0;\n    }\n\n    return (\n      `${digitos}${digVerificador}` ===\n      cpf.substring(cpf.length, cpf.length - 2)\n    );\n  }\n}\n","export * from './cpf.validator';\n","import { Component } from '@angular/core';\n\n@Component({ template: `<router-outlet></router-outlet>` })\nexport class DashboardComponent {}\n","import { Component } from '@angular/core';\nimport { ChartOptions, ChartType, ChartDataSets } from 'chart.js';\nimport { Label } from 'ng2-charts';\n\n@Component({\n  selector: 'app-bar-chart',\n  templateUrl: './bar-chart.component.html',\n  styleUrls: ['./bar-chart.component.css'],\n})\nexport class BarChartComponent {\n  barChartOptions: ChartOptions = {\n    responsive: true,\n  };\n\n  barChartLabels: Label[] = [\n    'Apple',\n    'Banana',\n    'Kiwifruit',\n    'Blueberry',\n    'Orange',\n    'Grapes',\n  ];\n\n  barChartType: ChartType = 'bar';\n\n  barChartLegend = true;\n\n  barChartPlugins = [];\n\n  barChartData: ChartDataSets[] = [\n    { data: [45, 37, 60, 70, 46, 33], label: 'Best Fruits' },\n  ];\n}\n","<div class=\"chart-wrapper\">\n  <canvas baseChart\n    [datasets]=\"barChartData\"\n    [labels]=\"barChartLabels\"\n    [options]=\"barChartOptions\"\n    [plugins]=\"barChartPlugins\"\n    [legend]=\"barChartLegend\"\n    [chartType]=\"barChartType\">\n  </canvas>\n</div>\n","export * from './bar-chart.component';\n","import { Component, OnInit } from '@angular/core';\nimport { ChartOptions, ChartType, ChartDataSets } from 'chart.js';\nimport { Color } from 'ng2-charts';\n\n@Component({\n  selector: 'app-bubble-chart',\n  templateUrl: './bubble-chart.component.html',\n  styleUrls: ['./bubble-chart.component.css'],\n})\nexport class BubbleChartComponent {\n  public bubbleChartOptions: ChartOptions = {\n    responsive: true,\n    scales: {\n      xAxes: [\n        {\n          ticks: {\n            min: 0,\n            max: 50,\n          },\n        },\n      ],\n      yAxes: [\n        {\n          ticks: {\n            min: 0,\n            max: 50,\n          },\n        },\n      ],\n    },\n  };\n\n  public bubbleChartType: ChartType = 'bubble';\n\n  public bubbleChartLegend = true;\n\n  public bubbleChartData: ChartDataSets[] = [\n    {\n      data: [\n        { x: 15, y: 15, r: 15 },\n        { x: 25, y: 15, r: 25 },\n        { x: 36, y: 12, r: 33 },\n        { x: 10, y: 18, r: 18 },\n      ],\n      label: 'Investment Equities',\n    },\n  ];\n}\n","<div class=\"chart-wrapper\">\n  <canvas baseChart\n    [datasets]=\"bubbleChartData\"\n    [options]=\"bubbleChartOptions\"\n    [legend]=\"bubbleChartLegend\"\n    [chartType]=\"bubbleChartType\">\n  </canvas>\n</div>\n","export * from './bubble-chart.component';\n","import { Component } from '@angular/core';\nimport { ChartType } from 'chart.js';\nimport { MultiDataSet, Label } from 'ng2-charts';\n\n@Component({\n  selector: 'app-doughnut-chart',\n  templateUrl: './doughnut-chart.component.html',\n  styleUrls: ['./doughnut-chart.component.css'],\n})\nexport class DoughnutChartComponent {\n  doughnutChartLabels: Label[] = ['BMW', 'Ford', 'Tesla'];\n\n  doughnutChartData: MultiDataSet = [[55, 25, 20]];\n\n  doughnutChartType: ChartType = 'doughnut';\n}\n","<div class=\"chart-wrapper\">\n  <canvas baseChart\n    [data]=\"doughnutChartData\"\n    [labels]=\"doughnutChartLabels\"\n    [chartType]=\"doughnutChartType\">\n  </canvas>\n</div>\n","export * from './doughnut-chart.component';\n","export * from './bar-chart';\nexport * from './bubble-chart';\nexport * from './doughnut-chart';\nexport * from './line-chart';\nexport * from './pie-chart';\nexport * from './radar-chart';\n","export * from './line-chart.component';\n","import { Component, OnInit } from '@angular/core';\nimport { ChartDataSets } from 'chart.js';\nimport { Color, Label } from 'ng2-charts';\n\n@Component({\n  selector: 'app-line-chart',\n  templateUrl: './line-chart.component.html',\n  styleUrls: ['./line-chart.component.css'],\n})\nexport class LineChartComponent implements OnInit {\n  lineChartData: ChartDataSets[];\n\n  lineChartLabels: Label[];\n\n  lineChartOptions;\n\n  lineChartColors: Color[];\n\n  lineChartLegend;\n\n  lineChartPlugins = [];\n\n  lineChartType;\n\n  ngOnInit(): void {\n    this.carregaDadosGrafico();\n  }\n\n  carregaDadosGrafico(): void {\n    this.lineChartData = [\n      { data: [85, 72, 78, 75, 77, 75], label: 'Crude oil prices' },\n    ];\n\n    this.lineChartLabels = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n    ];\n\n    this.lineChartOptions = {\n      responsive: true,\n    };\n\n    this.lineChartColors = [\n      {\n        borderColor: 'black',\n        backgroundColor: 'rgba(150,255,0,0.28)',\n      },\n    ];\n\n    this.lineChartLegend = true;\n\n    this.lineChartPlugins = [];\n\n    this.lineChartType = 'line';\n  }\n}\n","<div class=\"chart-wrapper\">\n  <canvas baseChart\n      [datasets]=\"lineChartData\"\n      [labels]=\"lineChartLabels\"\n      [options]=\"lineChartOptions\"\n      [colors]=\"lineChartColors\"\n      [legend]=\"lineChartLegend\"\n      [chartType]=\"lineChartType\"\n      [plugins]=\"lineChartPlugins\">\n  </canvas>\n</div>\n","export * from './pie-chart.component';\n","import { Component } from '@angular/core';\nimport { ChartType, ChartOptions } from 'chart.js';\nimport {\n  SingleDataSet,\n  Label,\n  monkeyPatchChartJsLegend,\n  monkeyPatchChartJsTooltip,\n} from 'ng2-charts';\n\n@Component({\n  selector: 'app-pie-chart',\n  templateUrl: './pie-chart.component.html',\n  styleUrls: ['./pie-chart.component.css'],\n})\nexport class PieChartComponent {\n  public pieChartOptions: ChartOptions = {\n    responsive: true,\n  };\n\n  public pieChartLabels: Label[] = [['SciFi'], ['Drama'], 'Comedy'];\n\n  public pieChartData: SingleDataSet = [30, 50, 20];\n\n  public pieChartType: ChartType = 'pie';\n\n  public pieChartLegend = true;\n\n  public pieChartPlugins = [];\n\n  constructor() {\n    monkeyPatchChartJsTooltip();\n    monkeyPatchChartJsLegend();\n  }\n}\n","<div class=\"chart-wrapper\">\n  <canvas baseChart\n    [data]=\"pieChartData\"\n    [labels]=\"pieChartLabels\"\n    [chartType]=\"pieChartType\"\n    [options]=\"pieChartOptions\"\n    [plugins]=\"pieChartPlugins\"\n    [legend]=\"pieChartLegend\">\n  </canvas>\n</div>\n","export * from './radar-chart.component';\n","import { Component } from '@angular/core';\nimport { ChartDataSets, ChartType, RadialChartOptions } from 'chart.js';\nimport { Label } from 'ng2-charts';\n\n@Component({\n  selector: 'app-radar-chart',\n  templateUrl: './radar-chart.component.html',\n  styleUrls: ['./radar-chart.component.css'],\n})\nexport class RadarChartComponent {\n  public radarChartOptions: RadialChartOptions = {\n    responsive: true,\n  };\n\n  public radarChartLabels: Label[] = [\n    'Punctuality',\n    'Communication',\n    'Problem Solving',\n    'Team Player',\n    'Coding',\n    'Technical Knowledge',\n    'Meeting Deadlines',\n  ];\n\n  public radarChartData: ChartDataSets[] = [\n    { data: [0, 1, 2, 3, 4, 5, 6], label: 'Employee Skill Analysis' },\n  ];\n\n  public radarChartType: ChartType = 'radar';\n}\n","<div class=\"chart-wrapper\">\n  <canvas baseChart\n    [datasets]=\"radarChartData\"\n    [options]=\"radarChartOptions\"\n    [labels]=\"radarChartLabels\"\n    [chartType]=\"radarChartType\">\n  </canvas>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n\n        <div class=\"wrapper wrapper-content animated fadeInRight\">\n          <div class=\"row\">\n              <div class=\"col-lg-6\">\n                  <div class=\"ibox float-e-margins\">\n                      <div class=\"ibox-title\">\n                          <h5>Line Chart Example\n                              <small>With custom colors.</small>\n                          </h5>\n                      </div>\n                      <div class=\"ibox-content\">\n                          <div>\n                            <app-line-chart></app-line-chart>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n              <div class=\"col-lg-6\">\n                  <div class=\"ibox float-e-margins\">\n                      <div class=\"ibox-title\">\n                          <h5>Bar Chart Example</h5>\n                      </div>\n                      <div class=\"ibox-content\">\n                          <div>\n                            <app-bar-chart></app-bar-chart>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n          <div class=\"row\">\n              <div class=\"col-lg-6\">\n                  <div class=\"ibox float-e-margins\">\n                      <div class=\"ibox-title\">\n                          <h5>Buuble Area</h5>\n\n                      </div>\n                      <div class=\"ibox-content\">\n                          <div class=\"text-center\">\n                            <app-bubble-chart></app-bubble-chart>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n              <div class=\"col-lg-6\">\n                  <div class=\"ibox float-e-margins\">\n                      <div class=\"ibox-title\">\n                          <h5>Pie </h5>\n\n                      </div>\n                      <div class=\"ibox-content\">\n                          <div>\n                            <app-pie-chart></app-pie-chart>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n          <div class=\"row\">\n              <div class=\"col-lg-6\">\n                  <div class=\"ibox float-e-margins\">\n                      <div class=\"ibox-title\">\n                          <h5>Radar Chart Example</h5>\n                      </div>\n                      <div class=\"ibox-content\">\n                          <div>\n                            <app-radar-chart></app-radar-chart>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n              <div class=\"col-lg-6\">\n                  <div class=\"ibox float-e-margins\">\n                      <div class=\"ibox-title\">\n                          <h5>Doughnut Chart Example</h5>\n                      </div>\n                      <div class=\"ibox-content\">\n                          <div>\n                            <app-doughnut-chart></app-doughnut-chart>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n    </div>\n\n</div>\n","export * from './home.component';\n","export * from './home';\nexport * from './graficos';\nexport * from './dashboard.component';\n","import { NgModule } from '@angular/core';\n\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomeComponent, DashboardComponent } from './components';\nimport { AuthGuardService, AutenticaRotaSerivce } from '../../shared';\n\nexport const Dashboardoutes: Routes = [\n  {\n    path: 'dashboard',\n\n    component: DashboardComponent,\n    canActivate: [AuthGuardService, AutenticaRotaSerivce],\n\n    children: [{ path: '', component: HomeComponent }],\n  },\n  { path: 'home', component: HomeComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(Dashboardoutes)],\n\n  exports: [RouterModule],\n})\nexport class DashboardRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { ChartsModule } from 'ng2-charts';\n\nimport {\n  HomeComponent,\n  DashboardComponent,\n  BarChartComponent,\n  BubbleChartComponent,\n  DoughnutChartComponent,\n  LineChartComponent,\n  PieChartComponent,\n  RadarChartComponent,\n} from './components';\nimport { MenuModule, SharedModule } from '../../shared';\n\n@NgModule({\n  declarations: [\n    HomeComponent,\n    DashboardComponent,\n    BarChartComponent,\n    BubbleChartComponent,\n    LineChartComponent,\n    PieChartComponent,\n    RadarChartComponent,\n    DoughnutChartComponent,\n  ],\n  imports: [CommonModule, MenuModule, RouterModule, SharedModule, ChartsModule],\n})\nexport class DashboardModule {}\n","export * from './dashboard.module';\nexport * from './dashboard-routing.module';\n","export * from './dashboard';\nexport * from './user';\nexport * from './permition';\nexport * from './profile';\nexport * from './log';\n","export * from './lista-logs';\nexport * from './log-acesso';\nexport * from './log.component';\n","export * from './lista-logs.component';\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-lista-logs',\n  templateUrl: './lista-logs.component.html',\n  styleUrls: ['./lista-logs.component.css'],\n})\nexport class ListaLogsComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n\n      <div class=\"wrapper wrapper-content animated fadeInRight\">\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <div class=\"ibox float-e-margins\">\n                    <div class=\"ibox-title\">\n                        <h5>Tabela de registros retornados da base de dados</h5>\n                        <div class=\"ibox-tools\">\n                            <a class=\"collapse-link\">\n                                <i class=\"fa fa-chevron-up\"></i>\n                            </a>\n                        </div>\n                    </div>\n                    <div class=\"ibox-content\">\n\n                        <div class=\"table-responsive\">\n                            <table class='table table-striped table-bordered table-hover dataTables-example'>\n                              <thead>\n                                <tr>\n                                <th>Código</th>\n                                <th>Data da interação</th>\n                                <th>Tabela</th>\n                                <th>Operação</th>\n                                <th>Cliente</th>\n                                <th>Usuário</th>\n                                <th>Foto</th>\n                                <th>Email</th>\n                                <th>Perfil</th>\n                                <th>IP</th>\n                                <th>Status</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr class='gradeX'>\n                                  <td>1316</td>\n                                  <td>22/05/2020 17:52</td>\n                                  <td>monitoramento</td>\n                                  <td>DELETE</td>\n                                  <td>Tecnisys</td>\n                                  <td>Alessandra</td>\n                                  <td> sem foto</td>\n                                  <td>gmferreira1982@gmail.com</td>\n                                  <td>Usuário</td>\n                                  <td>10.168.230.206</td>\n                                  <td>\n                                    <b class='text-info'>Ativado</b>\n                                  </td>\n                                </tr>\n                                <tr class='gradeX'>\n                                  <td>1286</td>\n                                  <td>21/05/2020 17:18</td>\n                                  <td>pesquisa</td>\n                                  <td>INSERT</td>\n                                  <td>Tecnisys</td>\n                                  <td>Alessandra</td>\n                                  <td> sem foto</td>\n                                  <td>gmferreira1982@gmail.com</td>\n                                  <td>Usuário</td>\n                                  <td>10.168.230.206</td>\n                                  <td>\n                                    <b class='text-info'>Ativado</b>\n                                  </td>\n                                </tr>\n                                <tr class='gradeX'>\n                                  <td>1307</td>\n                                  <td>22/05/2020 17:19</td>\n                                  <td>pesquisa</td>\n                                  <td>INSERT</td>\n                                  <td>Tecnisys</td>\n                                  <td>Alessandra</td>\n                                  <td> sem foto</td>\n                                  <td>gmferreira1982@gmail.com</td>\n                                  <td>Usuário</td>\n                                  <td>10.168.230.206</td>\n                                  <td>\n                                    <b class='text-info'>Ativado</b>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    </div>\n</div>\n","export * from './log-acesso.component';\n","import { Component, OnInit } from '@angular/core';\nimport {\n  HistoricoAcessoDTO,\n  HistoricoAcessoService,\n  UsuarioService,\n  StorangeService,\n  UsuarioListAllDTO,\n  PerfilService,\n  Perfil,\n  Pagination,\n} from 'src/app/modules/shared';\nimport { API_CONFIG } from 'src/app/modules/shared/config';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-log-acesso',\n  templateUrl: './log-acesso.component.html',\n  styleUrls: ['./log-acesso.component.css'],\n})\nexport class LogAcessoComponent implements OnInit {\n  baseUrlServidor = API_CONFIG.baseUrl;\n\n  historicoAcessoDTO: HistoricoAcessoDTO[];\n\n  usuarios: UsuarioListAllDTO[];\n\n  usuariosFiltrados: UsuarioListAllDTO[];\n\n  usuario = {} as UsuarioListAllDTO;\n\n  paginacao = {} as Pagination;\n\n  numerosDePaginas = [];\n\n  perfils: Perfil[];\n\n  constructor(\n    private historicoAcessoService: HistoricoAcessoService,\n    private userService: UsuarioService,\n    private storangeService: StorangeService,\n    private toast: ToastrService,\n    private perfilService: PerfilService,\n  ) {}\n\n  ngOnInit(): void {\n    this.carregaHistoricoUsuario();\n    this.carregaPerfils();\n    this.carregaUsers();\n  }\n\n  carregaHistoricoUsuario(): void {\n    this.historicoAcessoService\n      .getAllHistoryAccessPagination('ASC', 10, 'dataAcesso', 0)\n      .subscribe(\n        (data) => {\n          this.historicoAcessoDTO = data.content;\n          this.paginacao = data;\n          this.carregaPaginas();\n        },\n        (err) => {\n          this.toast.error('Erro na busca de Historico', 'Erro', {\n            timeOut: 4000,\n          });\n        },\n      );\n  }\n\n  mudarPagina(page: number): void {\n    this.historicoAcessoService\n      .getAllHistoryAccessPagination('ASC', 10, 'dataAcesso', page)\n      .subscribe((data) => {\n        this.historicoAcessoDTO = data.content;\n        this.paginacao = data;\n      });\n  }\n\n  carregaPaginas(): void {\n    this.numerosDePaginas = Array(this.paginacao.totalPages)\n      .fill(this.paginacao.totalPages, 0, this.paginacao.totalPages)\n      .map((x, i) => i);\n  }\n\n  carregaUsers(): void {\n    this.userService.getAll().subscribe((data) => {\n      this.usuarios = data;\n    });\n  }\n\n  carregaPerfils(): void {\n    this.perfilService.getAll().subscribe(\n      (data) => {\n        this.storangeService.setLocalPerfils(data);\n      },\n      (err) => {\n        this.toast.error('Erro ao buscar Perfils', 'Erro', {\n          timeOut: 4000,\n        });\n      },\n    );\n  }\n\n  filtraInfoUser(infoDesejada: string, id: number): string | false {\n    this.usuariosFiltrados = this.usuarios;\n\n    if (!this.usuariosFiltrados) {\n      return false;\n    }\n\n    this.usuario = this.usuariosFiltrados.find((user) => user.id === id);\n    if (this.usuario) {\n      switch (infoDesejada) {\n        case 'usuario':\n          return this.usuario.nome;\n        case 'email':\n          return this.usuario.email;\n        case 'perfil':\n          return 'Master';\n        case 'status':\n          return this.usuario.status.toString();\n        case 'img':\n          return this.usuario.imagem;\n        default:\n          return false;\n      }\n    }\n    return false;\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n\n      <div class=\"wrapper wrapper-content animated fadeInRight\">\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <div class=\"ibox float-e-margins\">\n                    <div class=\"ibox-title\">\n                        <h5>Tabela de registros retornados da base de dados</h5>\n                        <div class=\"ibox-tools\">\n                            <a class=\"collapse-link\">\n                                <i class=\"fa fa-chevron-up\"></i>\n                            </a>\n                        </div>\n                    </div>\n                    <div class=\"ibox-content\">\n                        <div class=\"table-responsive\">\n                            <table class='table table-striped table-bordered table-hover dataTables-example'>\n                              <thead>\n                                <tr>\n                                  <th>Código</th>\n                                  <th>Data do acesso</th>\n                                  <th>Usuário</th>\n                                  <th>Email</th>\n                                  <th>Perfil</th>\n                                  <th>IP</th>\n                                  <th>Status</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr class='gradeX' *ngFor=\"let item of historicoAcessoDTO\">\n                                  <td>{{ item.id }}</td>\n                                  <td> {{ item.dataAcesso | date: 'dd/MM/y HH:mm' }} </td>\n                                  <td>{{ filtraInfoUser('usuario', item.usuarioId) }}</td>\n                                  <td>{{ filtraInfoUser('email', item.usuarioId) }}</td>\n                                  <td>{{ filtraInfoUser('perfil', item.usuarioId) }}</td>\n                                  <td> {{ item.loginIp === null ? '0.0.0.0' : item.loginIp }} </td>\n                                  <td>\n                                    <b class='text-info'>{{ filtraInfoUser('status', item.usuarioId) === '1' ? 'Ativado': 'Desativado' }}</b>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                            <nav aria-label=\"Page navigation example\">\n                              <ul class=\"pagination justify-content-center\">\n                                <li class=\"page-item {{(paginacao.first ? 'disabled' : '')}}\">\n                                  <a *ngIf=\"!paginacao.first\" class=\"page-link\" (click)=\"mudarPagina(paginacao.number - 1)\">Anterior</a>\n                                  <a *ngIf=\"paginacao.first\" class=\"page-link\">Anterior</a>\n                                </li>\n                                <li class=\"page-item\" *ngFor=\"let page of numerosDePaginas\">\n                                  <a class=\"page-link\" (click)=\"mudarPagina(page)\" >{{page + 1}}</a>\n                                </li>\n                                <li class=\"page-item {{(paginacao.last ? 'disabled' : '')}}\">\n                                  <a *ngIf=\"!paginacao.last\" class=\"page-link\" (click)=\"mudarPagina(paginacao.number + 1)\">Proximo</a>\n                                  <a *ngIf=\"paginacao.last\" class=\"page-link\">Proximo</a>\n                                </li>\n                              </ul>\n                            </nav>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({ template: `<router-outlet></router-outlet>` })\nexport class LogComponent {}\n","export * from './log.module';\nexport * from './router-log.module';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { SharedModule, MenuModule } from '../../shared';\nimport {\n  ListaLogsComponent,\n  LogAcessoComponent,\n  LogComponent,\n} from './components';\n\n@NgModule({\n  declarations: [ListaLogsComponent, LogAcessoComponent, LogComponent],\n  imports: [CommonModule, SharedModule, MenuModule, RouterModule],\n})\nexport class LogModule {}\n","import { NgModule } from '@angular/core';\n\nimport { RouterModule, Routes } from '@angular/router';\n\nimport {\n  ListaLogsComponent,\n  LogAcessoComponent,\n  LogComponent,\n} from './components';\nimport { AuthGuardService, AutenticaRotaSerivce } from '../../shared';\n\nexport const LogRoutes: Routes = [\n  {\n    path: 'log',\n    component: LogComponent,\n    canActivate: [AuthGuardService, AutenticaRotaSerivce],\n\n    children: [\n      { path: 'pesquisar', component: ListaLogsComponent },\n      { path: 'pesquisar-acesso', component: LogAcessoComponent },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(LogRoutes)],\n\n  exports: [RouterModule],\n})\nexport class LogRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  Perfil,\n  PerfilPermissaoDTO,\n  Permissoes,\n  PerfilPermissaoService,\n  PerfilService,\n  PermissaoService,\n  StorangeService,\n  ErroDTO,\n  ErroGeral,\n} from 'src/app/modules/shared';\nimport { Subscription } from 'rxjs';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ToastrService } from 'ngx-toastr';\n\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-cadastrar',\n  templateUrl: './cadastrar.component.html',\n  styleUrls: ['./cadastrar.component.css'],\n})\nexport class CadastrarComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  perfilPermissoes: PerfilPermissaoDTO[];\n\n  perfilHasPermissao = {} as PerfilPermissaoDTO;\n\n  perfils: Perfil[];\n\n  erroGeral = {} as ErroGeral;\n\n  erroDTO: ErroDTO;\n\n  perfil = {} as Perfil;\n\n  idPerfilSelecionado = null;\n\n  perfilSelecionadoTrue = false;\n\n  permissao = {} as Permissoes;\n\n  permissoes: Permissoes[];\n\n  permissoesFiltradas: Permissoes[];\n\n  checkBoxSelecionadosArray = [] as Array<Int32Array>;\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private perfilPermissaoService: PerfilPermissaoService,\n    private toast: ToastrService,\n    private perfilService: PerfilService,\n    private permissaoService: PermissaoService,\n    private storangeService: StorangeService,\n  ) {}\n\n  ngOnInit(): void {\n    this.reloadPermissoesPerfil();\n    this.permissoes = this.storangeService.getLocalPermition();\n  }\n\n  reloadPermissoesPerfil(): void {\n    this.listarTodosPerfils();\n    this.listarTodasPermissoes();\n    this.listarTodasPerfilHasPermissao();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n    this.storangeService.setLocalPP(null);\n    this.storangeService.setLocalPerfils(null);\n    this.storangeService.setLocalPermition(null);\n  }\n\n  checkBoxSelecionado(id): void {\n    if (this.checkBoxSelecionadosArray.indexOf(id) > -1) {\n      this.checkBoxSelecionadosArray.splice(\n        this.checkBoxSelecionadosArray.indexOf(id),\n        1,\n      );\n    } else {\n      this.checkBoxSelecionadosArray.push(id);\n    }\n  }\n\n  listarTodosPerfils(): void {\n    this.subscriptions.push(\n      this.perfilService.getAll().subscribe(\n        (data) => {\n          this.perfils = data;\n          this.storangeService.setLocalPerfils(this.perfils);\n        },\n        (err) => {\n          this.erroGeral = err.error;\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { timeOut: 4000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  listarTodasPermissoes(): void {\n    this.subscriptions.push(\n      this.permissaoService.getAll().subscribe(\n        (data) => {\n          this.permissoes = data;\n          this.storangeService.setLocalPermition(this.permissoes);\n        },\n        (err) => {\n          this.erroGeral = err.error;\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { timeOut: 4000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  listarTodasPerfilHasPermissao(): void {\n    this.subscriptions.push(\n      this.perfilPermissaoService.getAll().subscribe(\n        (data) => {\n          this.perfilPermissoes = data;\n          this.storangeService.setLocalPP(this.perfilPermissoes);\n        },\n        (err) => {\n          this.erroGeral = err.error;\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { timeOut: 4000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  pegarPerfil(id: number): void {\n    this.perfil = this.perfils.find((x) => x.id === id);\n    if (!this.perfil) {\n      this.perfils = this.storangeService.getLocalPerfils();\n      this.perfil = this.perfils.find((x) => x.id === id);\n    }\n  }\n\n  pergarPermissao(id): void {\n    this.permissao = this.permissoes.find((x) => x.id === id);\n    if (!this.permissao) {\n      this.permissoes = this.storangeService.getLocalPermition();\n      this.permissao = this.permissoes.find((x) => x.id === id);\n    }\n  }\n\n  cadastrarPerfilHasPermissao(perfilPermissao: PerfilPermissaoDTO): void {\n    this.subscriptions.push(\n      this.perfilPermissaoService.insert(perfilPermissao).subscribe(\n        (data) => console.log(),\n        (err) => {\n          this.erroGeral = err.error;\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { timeOut: 4000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  perfilSelecionado(id): void {\n    this.idPerfilSelecionado = id;\n    this.perfilSelecionadoTrue = true;\n    this.verificaPermissaoDisponivelParaOPerfil(id);\n    this.permissoes = this.storangeService.getLocalPermition();\n  }\n\n  verificaPermissaoDisponivelParaOPerfil(id) {\n    this.permissoesFiltradas = this.permissoes.filter((permissao) => {\n      const resultado = this.perfilPermissoes.find(\n        (perfilPermissao) =>\n          perfilPermissao.permissaoId === permissao.id &&\n          perfilPermissao.perfilId === id,\n      );\n      if (!resultado) {\n        return permissao;\n      }\n\n      return null;\n    });\n  }\n\n  habilitaOuDesabilitaOpcao(idPerfil, idPermissao): boolean {\n    const resultado = this.verificaPermissaoDisponivelParaOPerfil(idPerfil);\n    const result = this.permissoesFiltradas.find((x) => {\n      if (x.id === idPermissao) {\n        return true;\n      }\n      return false;\n    });\n    if (result) {\n      return false;\n    }\n    return true;\n  }\n\n  cadastrar(): void {\n    if (this.perfilSelecionadoTrue === false) {\n      const msg = 'Nenhum Perfil selecionado para cadastro';\n      this.snackBar.open(msg, 'Info', { duration: 5000 });\n      return;\n    }\n    if (this.checkBoxSelecionadosArray.length < 1) {\n      const msg = 'Nenhuma permissão selecionada para cadastro';\n      this.snackBar.open(msg, 'Info', { duration: 5000 });\n      return;\n    }\n\n    this.pegarPerfil(this.idPerfilSelecionado);\n    this.checkBoxSelecionadosArray.forEach((p) => {\n      this.pergarPermissao(p);\n      this.perfilHasPermissao.perfilId = this.perfil.id;\n      this.perfilHasPermissao.permissaoId = this.permissao.id;\n      this.perfilHasPermissao.status = 1;\n      this.cadastrarPerfilHasPermissao(this.perfilHasPermissao);\n    });\n    const msg = 'Permissões cadastradas com sucesso!';\n    Swal.fire({\n      title: msg,\n      icon: 'success',\n      showConfirmButton: false,\n      timer: 2000,\n    });\n    setTimeout(() => {\n      this.refresh();\n    }, 1900);\n  }\n\n  refresh(): void {\n    window.location.reload();\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu>  </app-menu>    <div id=\"page-wrapper\" class=\"gray-bg\">\n    <div class=\"row border-bottom\">\n      <!-- NAVE -->\n      <app-barra-de-menu>        </app-barra-de-menu>\n    </div>\n    <div class=\"wrapper wrapper-content animated fadeInRight\">\n      <div class=\"row\">\n          <div class=\"col-lg-12\">\n              <div class=\"ibox float-e-margins\">\n                  <div class=\"ibox-title\">\n                      <h5>Formulário para preenchimento &nbsp;&nbsp;<b class=\"text-danger\"><i class='fa fa-exclamation'></i> Campos obrigatórios</b></h5>\n                      <div class=\"ibox-tools\">\n                          <a class=\"collapse-link\">\n                              <i class=\"fa fa-chevron-up\"></i>\n                          </a>\n                      </div>\n                  </div>\n                  <div class=\"ibox-content\">\n\n                      <div class=\"form-horizontal\">\n\n                          <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Perfil <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\">\n                                  <div class=\"col-lg-4 m-l-n\">\n                                    <mat-radio-group\n                                        aria-labelledby=\"example-radio-group-label\"\n                                        class=\"radio-group-permissao\">\n                                        <mat-radio-button *ngFor=\"let perfil of perfils\"\n                                            class=\"radio-button-permissao\"\n                                            [value]=\"perfil.id\"\n                                            #perfilId\n                                            (click)=\"perfilSelecionado(perfilId.value)\"\n                                            style=\"margin-right: 5px;\"\n                                        >\n                                            <strong>\n                                              {{ perfil.nome }}\n                                            </strong>\n                                        </mat-radio-button>\n                                    </mat-radio-group>\n                                  </div>\n                              </div>\n                          </div>\n\n                          <div class=\"hr-line-dashed\">\n\n                          </div>\n\n\n\n\n                          <!-- AMBIENTE DE TESTE -->\n\n\n                          <div class=\"form-group\">\n                            <label class=\"col-sm-2 control-label\">Permissão de acesso <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\">\n                                  <div class=\"col-lg-4 m-l-n\">\n                                    <section class=\"section-checkbox\" *ngIf=\"perfilSelecionadoTrue\">\n                                      <li style=\"list-style-type: none;\" *ngFor=\"let item of permissoes\">\n                                        <mat-checkbox\n                                          [disabled]=\"habilitaOuDesabilitaOpcao(idPerfilSelecionado, item.id)\"\n                                          *ngIf=\"!item.permissaoPai\"\n                                          [value]=\"item.id\"\n                                          #permissaoId\n                                          (click)=\"checkBoxSelecionado(permissaoId.value)\"\n\n                                        >\n                                          <span >{{ item.descricao }}</span>\n                                        </mat-checkbox>\n                                        <ul style=\"list-style-type: none;\" *ngIf=\"(item.descricao != 'Home' && item.descricao != 'Dashboard')\">\n                                          <li style=\"list-style-type: none;\" *ngFor=\"let item2 of permissoes\">\n\n                                            <mat-checkbox\n                                              [disabled]=\"habilitaOuDesabilitaOpcao(idPerfilSelecionado, item2.id)\"\n                                              [value]=\"item2.id\"\n                                              #permissaoId\n                                              (click)=\"checkBoxSelecionado(permissaoId.value)\"\n                                              *ngIf=\"item.id == item2.permissaoPai?.id\"\n                                            >\n                                              {{ item2.descricao }}\n                                            </mat-checkbox>\n                                          </li>\n                                        </ul>\n                                      </li>\n\n                                    </section>\n                                    <p *ngIf=\"perfilSelecionadoTrue === false\">\n                                      <strong>\n                                        Selecione um pefil para adicionar permissões\n                                      </strong>\n                                    </p>\n                                    <p *ngIf=\"permissoes?.length === 0\">\n                                      <strong>\n                                        Todas as pemissões já estão cadastradas para este perfil\n                                      </strong>\n                                    </p>\n                                  </div>\n                              </div>\n                          </div>\n\n                          <div class=\"hr-line-dashed\"></div>\n                          <div class=\"form-group\">\n                              <div class=\"col-sm-4 col-sm-offset-2\">\n                                  <button class=\"btn btn-w-m btn-warning\" (click)=\"refresh()\" style=\"margin-right: 20px;\" type=\"button\"><i class=\"fa fa-close\"></i> Limpar</button>\n                                  <button class=\"btn btn-w-m btn-primary\" type=\"button\" (click)=\"cadastrar()\"><i class=\"fa fa-check\"></i> Cadastrar</button>\n                              </div>\n                          </div>\n                        </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n  </div>\n\n</div>\n","export * from './cadastrar.component';\n","import { Component, OnInit } from '@angular/core';\nimport {\n  StorangeService,\n  Permissoes,\n  PermissaoService,\n  PermissaoDTO,\n  ErroGeral,\n  ErroDTO,\n} from 'src/app/modules/shared';\nimport { ToastrService } from 'ngx-toastr';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-create-new',\n  templateUrl: './create-new.component.html',\n  styleUrls: ['./create-new.component.css'],\n})\nexport class CreateNewComponent implements OnInit {\n  permissoes: Permissoes[];\n\n  permissaoDTO = {} as PermissaoDTO;\n\n  form: FormGroup;\n\n  erroGeral = {} as ErroGeral;\n\n  erroDTO = {} as ErroDTO;\n\n  constructor(\n    private storangeService: StorangeService,\n    private toast: ToastrService,\n    private fb: FormBuilder,\n    private permissoesSerivce: PermissaoService,\n    private snackBar: MatSnackBar,\n  ) {}\n\n  ngOnInit(): void {\n    this.carregaPermissoes();\n    this.criarForm();\n  }\n\n  criarForm(): void {\n    this.form = this.fb.group({\n      descricao: ['', Validators.required],\n      url: ['', [Validators.required]],\n      permissaopai: ['', Validators.required],\n    });\n  }\n\n  carregaPermissoes(): void {\n    this.permissoesSerivce.getAll().subscribe(\n      (data) => {\n        this.permissoes = data;\n        this.storangeService.setLocalPermition(this.permissoes);\n      },\n\n      (err) => {\n        this.erroGeral = err.error;\n\n        if (this.erroGeral.errors) {\n          this.erroGeral.errors.forEach((e) => {\n            this.erroDTO = e;\n            this.toast.error(\n              `Erro ${this.erroGeral.status} ${e.message}`,\n              e.fieldName,\n              { timeOut: 4000 },\n            );\n          });\n        } else {\n          const title = `Erro ${this.erroGeral.status}`;\n          this.toast.error(this.erroGeral.message, title, {\n            timeOut: 3000,\n          });\n        }\n      },\n    );\n  }\n\n  cadastrarNovaPermissao(): void {\n    if (this.form.get('url').invalid && this.form.get('descricao').invalid) {\n      const msg = 'Preenchimento do formulário inválido!';\n      this.toast.error(msg, 'Erro validação', { timeOut: 4000 });\n      return;\n    }\n\n    this.permissaoDTO.descricao = this.form.value.descricao;\n    this.permissaoDTO.url = this.form.value.url;\n    if (this.form.value.permissaopai !== '0') {\n      this.permissaoDTO.permissaoPai = this.form.value.permissaopai;\n    } else {\n      this.permissaoDTO.permissaoPai = null;\n    }\n\n    this.permissoesSerivce.insert(this.permissaoDTO).subscribe(\n      (data) => {\n        this.toast.success('Permissão Cadastrada com sucesso!', 'Sucesso', {\n          timeOut: 4000,\n        });\n\n        setTimeout(() => {\n          this.refresh();\n        }, 3900);\n      },\n      (err) => {\n        this.erroGeral = err.error;\n\n        if (this.erroGeral.errors) {\n          this.erroGeral.errors.forEach((e) => {\n            this.erroDTO = e;\n            this.toast.error(\n              `Erro ${this.erroGeral.status} ${e.message}`,\n              e.fieldName,\n              { timeOut: 4000 },\n            );\n          });\n        } else {\n          const title = `Erro ${this.erroGeral.status}`;\n          this.toast.error(this.erroGeral.message, title, {\n            timeOut: 3000,\n          });\n        }\n      },\n    );\n  }\n\n  refresh(): void {\n    window.location.reload();\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n\n      <div class=\"wrapper wrapper-content animated fadeInRight\">\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <div class=\"ibox float-e-margins\">\n                    <div class=\"ibox-title\">\n                        <h5>Formulário para cadastrar nova permissao &nbsp;&nbsp;<b class=\"text-danger\"><i class='fa fa-exclamation'></i> Campos obrigatórios</b></h5>\n                        <div class=\"ibox-tools\">\n                            <a class=\"collapse-link\">\n                                <i class=\"fa fa-chevron-up\"></i>\n                            </a>\n                        </div>\n                    </div>\n                    <div class=\"ibox-content\">\n\n                        <form class=\"form-horizontal\" [formGroup]=\"form\" novalidate>\n                          <div class=\"form-group\">\n                            <label class=\"col-sm-2 control-label\">Descrição <i class='fa fa-exclamation text-danger'></i></label>\n                            <div class=\"col-sm-10\">\n                                <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-vcard'></i></span>\n                                  <input type=\"text\" placeholder=\"Cadastrar Usuário\" formControlName=\"descricao\" class=\"form-control\" name=\"descricao\" ></div>\n                                  <!-- <small *ngIf=\"form.get('nome').valid && form.get('nome').touched\" class=\"form-text text-success\" >ok</small>\n                                  <small *ngIf=\"!form.get('nome').valid && form.get('nome').touched\"class=\"form-text text-danger\" >Nome do perfil requerida</small> -->\n                              </div>\n                            </div>\n\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">URL <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\">\n                                  <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-link'></i></span>\n                                    <input type=\"text\" placeholder=\"/usuario/cadastrar\" formControlName=\"url\" class=\"form-control\" name=\"url\" ></div>\n                                    <!-- <small *ngIf=\"form.get('nome').valid && form.get('nome').touched\" class=\"form-text text-success\" >ok</small>\n                                    <small *ngIf=\"!form.get('nome').valid && form.get('nome').touched\"class=\"form-text text-danger\" >Nome do perfil requerida</small> -->\n                                </div>\n                            </div>\n\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Permissão pai <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\">\n                                <div class=\"col-lg-4 m-l-n\">\n                                  <select class='form-control' formControlName=\"permissaopai\" name ='permissaopai'>\n                                      <option value=\"0\">Nenhum</option>\n                                      <option *ngFor=\"let permissao of permissoes\" value=\"{{ permissao.id }}\">\n                                        {{ permissao.descricao }}\n                                      </option>\n                                    </select>\n                                    <!-- <small *ngIf=\"form.get('perfil').valid && form.get('perfil').touched\" class=\"form-text text-success\" >ok</small>\n                                    <small *ngIf=\"!form.get('perfil').valid && form.get('perfil').touched\"class=\"form-text text-danger\" >Perfil não selecionado</small> -->\n                                </div>\n                              </div>\n\n                            </div>\n                            <div class=\"hr-line-dashed\"></div>\n                            <div class=\"form-group\">\n                                <div class=\"col-sm-4 col-sm-offset-2\">\n                                    <button class=\"btn btn-w-m btn-warning\" type=\"reset\" style=\"margin-right: 10px;margin-top: 20px;\"><i class=\"fa fa-close\"></i> Limpar</button>\n                                    <button class=\"btn btn-w-m btn-primary\" type=\"button\" (click)=\"cadastrarNovaPermissao()\" style=\"margin-top: 20px;\"><i class=\"fa fa-check\"></i> Cadastrar</button>\n                                </div>\n                            </div>\n\n\n                          </form>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n\n</div>\n","export * from './create-new.component';\n","export * from './cadastrar';\nexport * from './listar';\nexport * from './create-new';\nexport * from './permissao.component';\n","export * from './listar.component';\n","import { Component, OnInit } from '@angular/core';\nimport {\n  Permissoes,\n  PermissaoService,\n  ErroDTO,\n  ErroGeral,\n  Perfil,\n  PerfilPermissaoDTO,\n  PerfilService,\n  PerfilPermissaoService,\n  StorangeService,\n} from 'src/app/modules/shared';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { ToastrService } from 'ngx-toastr';\nimport { Subscription } from 'rxjs';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-listar',\n  templateUrl: './listar.component.html',\n  styleUrls: ['./listar.component.css'],\n})\nexport class ListarComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  perfils: Perfil[];\n\n  erroGeral = {} as ErroGeral;\n\n  erroDTO: ErroDTO;\n\n  status: string;\n\n  permissoes: Permissoes[];\n\n  perfilPermi: PerfilPermissaoDTO;\n\n  perfilPermissao: PerfilPermissaoDTO[];\n\n  constructor(\n    private perfilService: PerfilService,\n    private snackBar: MatSnackBar,\n    private toast: ToastrService,\n    private permissaoService: PermissaoService,\n    private perfilPermissaoService: PerfilPermissaoService,\n    private storangeService: StorangeService,\n  ) {}\n\n  ngOnInit(): void {\n    this.carregaPerfils();\n    this.carregaPermissoes();\n    this.carregaPerfilHasPermition();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  carregaPerfils(): void {\n    this.subscriptions.push(\n      this.perfilService.getAll().subscribe(\n        (data) => {\n          this.perfils = data;\n          this.storangeService.setLocalPerfils(this.perfils);\n        },\n        (err) => {\n          this.erroGeral = err.error;\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { timeOut: 4000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  carregaPermissoes(): void {\n    this.subscriptions.push(\n      this.permissaoService.getAll().subscribe(\n        (data) => {\n          this.permissoes = data;\n          this.storangeService.setLocalPermition(this.permissoes);\n        },\n        (err) => {\n          this.erroGeral = err.error;\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { timeOut: 4000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  carregaPerfilHasPermition(): void {\n    this.subscriptions.push(\n      this.perfilPermissaoService.getAll().subscribe(\n        (data) => {\n          this.perfilPermissao = data;\n          this.storangeService.setLocalPP(this.perfilPermissao);\n        },\n        (err) => {\n          this.erroGeral = err.error;\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.snackBar.open(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { duration: 3000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.snackBar.open(this.erroGeral.message, title, {\n              duration: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  verificaPermissaoHasPerfil(permissao: number, perfil: number): boolean {\n    return false;\n  }\n\n  permissaDescricao(id: number): string {\n    const permissao = this.permissoes.find((x) => x.id === id);\n    return permissao.descricao;\n  }\n\n  permissaoUrl(id: number): string {\n    const permissao = this.permissoes.find((x) => x.id === id);\n    return permissao.url;\n  }\n\n  perfiNome(id: number): string {\n    const perfil = this.perfils.find((x) => x.id === id);\n    return perfil.nome;\n  }\n\n  alterStatusPP(pp: PerfilPermissaoDTO): void {\n    this.perfilPermi = pp;\n\n    this.status = pp.status === 1 ? 'desativar' : 'ativar';\n\n    Swal.fire({\n      title: `Deseja ${this.status} permissao?`,\n      icon: 'warning',\n      showCancelButton: true,\n      cancelButtonText: 'Cancelar',\n      confirmButtonText: `Sim, ${this.status}!`,\n    }).then((result) => {\n      if (result.value) {\n        this.perfilPermi.status = pp.status === 1 ? 0 : 1;\n        this.perfilPermissaoService.update(this.perfilPermi).subscribe(\n          (data) => {\n            Swal.fire({\n              title: this.status === 'ativar' ? 'Ativado!' : 'Desativado',\n              icon: 'success',\n              showConfirmButton: false,\n              timer: 1000,\n            });\n          },\n          (err) => {\n            this.erroGeral = err.error;\n            if (this.erroGeral.errors) {\n              this.erroGeral.errors.forEach((e) => {\n                this.erroDTO = e;\n                this.toast.error(\n                  `Erro ${this.erroGeral.status} ${e.message}`,\n                  e.fieldName,\n                  { timeOut: 4000 },\n                );\n              });\n            } else {\n              const title = `Erro ${this.erroGeral.status}`;\n              this.toast.error(this.erroGeral.message, title, {\n                timeOut: 3000,\n              });\n            }\n          },\n        );\n      }\n    });\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu>\n\n  </app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu>\n\n        </app-barra-de-menu>\n      </div>\n      <div class=\"wrapper wrapper-content animated fadeInRight\">\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <div class=\"ibox float-e-margins\">\n                    <div class=\"ibox-title\">\n                        <h5>Tabela de registros retornados da base de dados</h5>\n                        <div class=\"ibox-tools\">\n                            <a class=\"collapse-link\">\n                                <i class=\"fa fa-chevron-up\"></i>\n                            </a>\n                        </div>\n                    </div>\n                    <div class=\"ibox-content\">\n                        <div class=\"table-responsive\">\n                            <table class='table table-striped table-bordered table-hover dataTables-example'>\n                              <thead>\n                                <tr>\n                                <th>Descrição</th>\n                                <th>URL</th>\n                                <th>Perfil</th>\n                                <th>Status</th>\n                                <th>Ação</th>\n                              </tr>\n                              </thead>\n                              <tbody>\n                                <tr *ngFor=\"let pp of perfilPermissao\">\n                                  <td>{{ permissaDescricao(pp.permissaoId) }}</td>\n                                  <td>{{ permissaoUrl(pp.permissaoId) }}</td>\n                                  <td>{{perfiNome(pp.perfilId)}}</td>\n                                  <td>\n                                    <span class='label label-{{ pp.status === 1 ? \"primary\" : \"default\" }}'>{{ pp.status === 1 ? 'Ativado' : 'Desativado' }}</span>\n                                  </td>\n                                  <td>\n                                      <button type='button' (click)=\"alterStatusPP(pp)\" class='btn btn-outline btn-{{ pp.status === 1 ? \"danger\" : \"info\" }}'>\n                                        <i class='fa fa-toggle-off'></i> {{ pp.status === 1 ? \"Desativar\" : \"&nbsp;&nbsp;Ativar&nbsp;&nbsp;\" }}\n                                      </button>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n      </div>\n    </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({ template: `<router-outlet></router-outlet>` })\nexport class PermissaoComponent {}\n","export * from './permition.module';\nexport * from './router-permition.module';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport {\n  ListarComponent,\n  CadastrarComponent,\n  PermissaoComponent,\n  CreateNewComponent,\n} from './components';\n\nimport { SharedModule, MenuModule } from '../../shared';\n\n@NgModule({\n  declarations: [\n    ListarComponent,\n    CadastrarComponent,\n    PermissaoComponent,\n    CreateNewComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    MenuModule,\n    RouterModule,\n    MatCardModule,\n    MatRadioModule,\n    MatCheckboxModule,\n    ReactiveFormsModule,\n  ],\n})\nexport class PermitionModule {}\n","import { NgModule } from '@angular/core';\n\nimport { RouterModule, Routes } from '@angular/router';\n\nimport {\n  CadastrarComponent,\n  ListarComponent,\n  PermissaoComponent,\n  CreateNewComponent,\n} from './components';\nimport { AuthGuardService, AutenticaRotaSerivce } from '../../shared';\n\nexport const PermitionRoutes: Routes = [\n  {\n    path: 'permissao',\n    component: PermissaoComponent,\n    canActivate: [AuthGuardService, AutenticaRotaSerivce],\n    children: [\n      { path: 'cadastrar', component: CadastrarComponent },\n      { path: 'pesquisar', component: ListarComponent },\n      { path: 'criar-nova-permissao', component: CreateNewComponent },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(PermitionRoutes)],\n\n  exports: [RouterModule],\n})\nexport class PermitionRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport Swal from 'sweetalert2';\nimport { ToastrService } from 'ngx-toastr';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport {\n  PerfilDTO,\n  PerfilService,\n  ErroDTO,\n  ErroGeral,\n} from '../../../../shared';\n\n@Component({\n  selector: 'app-atualizar',\n  templateUrl: './atualizar.component.html',\n  styleUrls: ['./atualizar.component.css'],\n})\nexport class AtualizarComponent implements OnInit {\n  erroGeral = {} as ErroGeral;\n\n  erroDTO: ErroDTO;\n\n  private subscriptions: Subscription[] = [];\n\n  form: FormGroup;\n\n  perfil = {} as PerfilDTO;\n\n  idPerfil: string;\n\n  constructor(\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private toast: ToastrService,\n    private snackBar: MatSnackBar,\n    private perfilService: PerfilService,\n  ) {}\n\n  ngOnInit(): void {\n    this.criarForm();\n    this.idPerfil = this.route.snapshot.paramMap.get('perfilId');\n    this.carregaPerfilNome(Number(this.idPerfil));\n  }\n\n  criarForm(): void {\n    this.form = this.fb.group({\n      nome: ['', Validators.required],\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  carregaPerfilNome(id: number): void {\n    this.subscriptions.push(\n      this.perfilService.getId(id).subscribe((data) => {\n        this.perfil = data;\n        this.populandoForm();\n      }),\n    );\n  }\n\n  atualizarPerfil(): void {\n    if (this.form.invalid) {\n      this.snackBar.open('Formulário com campos invalidos!', 'Erro!', {\n        duration: 3000,\n      });\n      this.toucheCamposFormulario();\n      return;\n    }\n\n    this.perfil = this.form.value;\n    this.subscriptions.push(\n      this.perfilService.update(Number(this.idPerfil), this.perfil).subscribe(\n        (data) => {\n          Swal.fire({\n            title: 'Atualizado!',\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n          setTimeout(() => {\n            this.refresh();\n          }, 1900);\n        },\n        (err) => {\n          this.erroGeral = err.error;\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { timeOut: 4000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  toucheCamposFormulario(): void {\n    this.form.get('nome').markAsTouched();\n  }\n\n  populandoForm(): void {\n    this.form.patchValue({ nome: this.perfil.nome });\n  }\n\n  refresh(): void {\n    window.location.reload();\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n\n      <div class=\"wrapper wrapper-content animated fadeInRight\">\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <div class=\"ibox float-e-margins\">\n                    <div class=\"ibox-title\">\n                        <h5>Formulário para preenchimento &nbsp;&nbsp;<b class=\"text-danger\"><i class='fa fa-exclamation'></i> Campos obrigatórios</b></h5>\n                        <div class=\"ibox-tools\">\n                            <a class=\"collapse-link\">\n                                <i class=\"fa fa-chevron-up\"></i>\n                            </a>\n                        </div>\n                    </div>\n                    <div class=\"ibox-content\">\n\n                        <form [formGroup]=\"form\" novalidate>\n\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Perfil <i class='fa fa-exclamation text-danger'></i></label>\n                                <div class=\"col-sm-10\">\n                                    <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-vcard'></i></span>\n                                      <input type=\"text\" [placeholder]=\"perfil.nome\" formControlName=\"nome\" class=\"form-control\" name=\"nome\" ></div>\n                                      <small *ngIf=\"form.get('nome').valid && form.get('nome').touched\" class=\"form-text text-success\" >ok</small>\n                                      <small *ngIf=\"!form.get('nome').valid && form.get('nome').touched\"class=\"form-text text-danger\" >Nome do perfil requerido</small>\n                                  </div>\n                            </div>\n\n                            <div class=\"hr-line-dashed\"></div>\n                            <div class=\"form-group\">\n                                <div class=\"col-sm-4 col-sm-offset-2\">\n                                    <button class=\"btn btn-w-m btn-warning\" type=\"reset\" style=\"margin-right: 10px;\"><i class=\"fa fa-close\"></i> Limpar</button>\n                                    <button class=\"btn btn-w-m btn-primary\" type=\"button\" (click)=\"atualizarPerfil()\"><i class=\"fa fa-check\"></i> Atualizar</button>\n                                </div>\n                            </div>\n                        </form>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n</div>\n","export * from './atualizar.component';\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport Swal from 'sweetalert2';\nimport { ToastrService } from 'ngx-toastr';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport {\n  PerfilDTO,\n  PerfilService,\n  ErroDTO,\n  ErroGeral,\n} from '../../../../shared';\n\n@Component({\n  selector: 'app-cadastrar',\n  templateUrl: './cadastrar.component.html',\n  styleUrls: ['./cadastrar.component.css'],\n})\nexport class CadastrarComponent implements OnInit {\n  erroGeral = {} as ErroGeral;\n\n  erroDTO: ErroDTO;\n\n  private subscriptions: Subscription[] = [];\n\n  form: FormGroup;\n\n  perfil = {} as PerfilDTO;\n\n  constructor(\n    private fb: FormBuilder,\n    private toast: ToastrService,\n    private snackBar: MatSnackBar,\n    private perfilService: PerfilService,\n  ) {}\n\n  ngOnInit(): void {\n    this.criarForm();\n  }\n\n  criarForm(): void {\n    this.form = this.fb.group({\n      nome: ['', Validators.required],\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  cadastrarPerfil(): void {\n    if (this.form.invalid) {\n      this.snackBar.open('Formulário com campos invalidos!', 'Erro!', {\n        duration: 3000,\n      });\n      this.toucheCamposFormulario();\n      return;\n    }\n\n    this.perfil = this.form.value;\n    this.subscriptions.push(\n      this.perfilService.insert(this.perfil).subscribe(\n        (data) => {\n          Swal.fire({\n            title: 'Cadastrado!',\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n          setTimeout(() => {\n            this.refresh();\n          }, 1900);\n        },\n        (err) => {\n          this.erroGeral = err.error;\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { timeOut: 4000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  toucheCamposFormulario(): void {\n    this.form.get('nome').markAsTouched();\n  }\n\n  refresh(): void {\n    window.location.reload();\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n\n      <div class=\"wrapper wrapper-content animated fadeInRight\">\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <div class=\"ibox float-e-margins\">\n                    <div class=\"ibox-title\">\n                        <h5>Formulário para preenchimento &nbsp;&nbsp;<b class=\"text-danger\"><i class='fa fa-exclamation'></i> Campos obrigatórios</b></h5>\n                        <div class=\"ibox-tools\">\n                            <a class=\"collapse-link\">\n                                <i class=\"fa fa-chevron-up\"></i>\n                            </a>\n                        </div>\n                    </div>\n                    <div class=\"ibox-content\">\n\n                        <form [formGroup]=\"form\" novalidate>\n\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Perfil <i class='fa fa-exclamation text-danger'></i></label>\n                                <div class=\"col-sm-10\">\n                                    <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-vcard'></i></span>\n                                      <input type=\"text\" formControlName=\"nome\" class=\"form-control\" name=\"nome\" ></div>\n                                      <small *ngIf=\"form.get('nome').valid && form.get('nome').touched\" class=\"form-text text-success\" >ok</small>\n                                      <small *ngIf=\"!form.get('nome').valid && form.get('nome').touched\"class=\"form-text text-danger\" >Nome do perfil requerida</small>\n                                  </div>\n                            </div>\n\n                            <div class=\"hr-line-dashed\"></div>\n                            <div class=\"form-group\">\n                                <div class=\"col-sm-4 col-sm-offset-2\">\n                                    <button class=\"btn btn-w-m btn-warning\" type=\"reset\" style=\"margin-right: 10px;\"><i class=\"fa fa-close\"></i> Limpar</button>\n                                    <button class=\"btn btn-w-m btn-primary\" type=\"button\" (click)=\"cadastrarPerfil()\"><i class=\"fa fa-check\"></i> Cadastrar</button>\n                                </div>\n                            </div>\n                        </form>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n\n</div>\n","export * from './cadastrar.component';\n","export * from './cadastrar';\nexport * from './atualizar';\nexport * from './listar';\nexport * from './perfil.component';\n","export * from './listar.component';\n","import { Component, OnInit } from '@angular/core';\nimport {\n  Perfil,\n  PerfilService,\n  Permissoes,\n  PermissaoService,\n  PerfilPermissaoService,\n  PerfilPermissaoDTO,\n  ErroDTO,\n  ErroGeral,\n} from 'src/app/modules/shared';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { ToastrService } from 'ngx-toastr';\nimport { Subscription } from 'rxjs';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-listar',\n  templateUrl: './listar.component.html',\n  styleUrls: ['./listar.component.css'],\n})\nexport class ListarComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  perfils: Perfil[];\n\n  erroGeral = {} as ErroGeral;\n\n  erroDTO: ErroDTO;\n\n  status: string;\n\n  permissoes: Permissoes[];\n\n  perfilPermi: PerfilPermissaoDTO;\n\n  perfilPermissao: PerfilPermissaoDTO[];\n\n  constructor(\n    private perfilService: PerfilService,\n    private snackBar: MatSnackBar,\n    private toast: ToastrService,\n    private permissaoService: PermissaoService,\n    private perfilPermissaoService: PerfilPermissaoService,\n  ) {}\n\n  ngOnInit(): void {\n    this.carregaPerfils();\n    this.carregaPermissoes();\n    this.carregaPerfilHasPermition();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  carregaPerfils(): void {\n    this.subscriptions.push(\n      this.perfilService.getAll().subscribe(\n        (data) => {\n          this.perfils = data;\n        },\n        (err) => {\n          this.erroGeral = err.error;\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { timeOut: 4000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  carregaPermissoes(): void {\n    this.subscriptions.push(\n      this.permissaoService.getAll().subscribe(\n        (data) => {\n          this.permissoes = data;\n        },\n        (err) => {\n          this.erroGeral = err.error;\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { timeOut: 4000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  carregaPerfilHasPermition(): void {\n    this.subscriptions.push(\n      this.perfilPermissaoService.getAll().subscribe(\n        (data) => {\n          this.perfilPermissao = data;\n        },\n        (err) => {\n          this.erroGeral = err.error;\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { timeOut: 4000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  verificaPermissao(perfil: number, permissao: number): boolean {\n    const response = this.perfilPermissao?.find(\n      (x) => x.perfilId === perfil && x.permissaoId === permissao,\n    );\n    if (response) {\n      return true;\n    }\n    return false;\n  }\n\n  atualizaStatus(perfil: number, permissao: number) {\n    const response = this.perfilPermissao.find(\n      (x) => x.perfilId === perfil && x.permissaoId === permissao,\n    );\n\n    if (!response) {\n      this.snackBar.open('Erro ao tentar atualizar', 'Erro', {\n        duration: 3000,\n      });\n      return;\n    }\n    this.perfilPermi = response;\n    if (this.perfilPermi.status === 1) {\n      this.status = 'desativar';\n    } else {\n      this.status = 'ativar';\n    }\n\n    Swal.fire({\n      title: `Deseja ${this.status} permissao?`,\n      icon: 'warning',\n      showCancelButton: true,\n      cancelButtonText: 'Cancelar',\n      confirmButtonText: `Sim, ${this.status}!`,\n    }).then((result) => {\n      if (result.value) {\n        this.perfilPermi.status = this.status === 'ativar' ? 1 : 0;\n        this.perfilPermissaoService.update(this.perfilPermi).subscribe(\n          (data) => {\n            Swal.fire({\n              title: this.status === 'ativar' ? 'Ativado!' : 'Desativado',\n              icon: 'success',\n              showConfirmButton: false,\n              timer: 1000,\n            });\n          },\n          (err) => {\n            this.erroGeral = err.error;\n\n            if (this.erroGeral.errors) {\n              this.erroGeral.errors.forEach((e) => {\n                this.erroDTO = e;\n                this.toast.error(\n                  `Erro ${this.erroGeral.status} ${e.message}`,\n                  e.fieldName,\n                  { timeOut: 4000 },\n                );\n              });\n            } else {\n              const title = `Erro ${this.erroGeral.status}`;\n              this.toast.error(this.erroGeral.message, title, {\n                timeOut: 3000,\n              });\n            }\n          },\n        );\n      }\n    });\n  }\n\n  pegaStatusAtual(perfil: number, permissao: number): string {\n    const response = this.perfilPermissao.find(\n      (x) => x.perfilId === perfil && x.permissaoId === permissao,\n    );\n    if (!response) {\n      return 'dafault';\n    }\n    return response.status === 1 ? 'primary' : 'dafault';\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu>\n\n  </app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu>\n\n        </app-barra-de-menu>\n      </div>\n\n      <div class=\"wrapper wrapper-content animated fadeInRight\">\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <div class=\"ibox float-e-margins\">\n                    <div class=\"ibox-title\">\n                        <h5>Tabela de registros retornados da base de dados</h5>\n                        <div class=\"ibox-tools\">\n                            <a class=\"collapse-link\">\n                                <i class=\"fa fa-chevron-up\">\n\n                                </i>\n                            </a>\n                        </div>\n                    </div>\n                    <div class=\"ibox-content\">\n\n                        <div class=\"table-responsive\">\n                            <table class='table table-striped table-bordered table-hover dataTables-example'>\n                              <thead>\n                              <tr>\n                              <th>Perfil</th>\n                              <th>Permissões</th>\n                              <th>Ações</th>\n                            </tr>\n                            </thead>\n                              <tbody>\n                              <tr *ngFor=\"let perfil of perfils\">\n                              <td>{{ perfil.nome }}</td>\n                              <td>\n                              <div class='tooltip-demo'>\n                                <ng-container *ngFor=\"let permissao of permissoes\">\n                                  <button *ngIf=\"verificaPermissao(perfil.id, permissao.id)\"\n                                    type='button'\n                                    class='btn btn-outline btn-{{ pegaStatusAtual(perfil.id, permissao.id) }}'\n                                    data-toggle='tooltip'\n                                    data-placement='top'\n                                    (click)=\"atualizaStatus(perfil.id, permissao.id)\"\n                                    style=\"margin-right: 10px;\"\n                                  > <i class='fa fa-toggle-on'></i>\n\n                                      {{ permissao.descricao }}\n                                  </button>\n                                </ng-container>\n\n                            </div>\n                          </td>\n                            <td>\n                              <a href='/perfil/atualizar/{{perfil.id}}'>\n                              <button type='button' class='btn btn-outline btn-success'>\n                              <i class='fa fa-edit'>\n\n                            </i> Editar Perfil</button>\n                            </a>\n                            </td>\n                          </tr>\n\n                          </tbody>\n                          </table>\n                      </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n\n</div>\n","import { Component } from '@angular/core';\n\n@Component({ template: `<router-outlet></router-outlet>` })\nexport class PerfilComponent {}\n","export * from './profile.module';\nexport * from './router-profile.module';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {\n  ListarComponent,\n  CadastrarComponent,\n  PerfilComponent,\n  AtualizarComponent,\n} from './components';\n\nimport { SharedModule, MenuModule } from '../../shared';\n\n@NgModule({\n  declarations: [\n    ListarComponent,\n    CadastrarComponent,\n    PerfilComponent,\n    AtualizarComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    MenuModule,\n    ReactiveFormsModule,\n    RouterModule,\n  ],\n})\nexport class ProfileModule {}\n","import { NgModule } from '@angular/core';\n\nimport { RouterModule, Routes } from '@angular/router';\n\nimport {\n  CadastrarComponent,\n  ListarComponent,\n  PerfilComponent,\n  AtualizarComponent,\n} from './components';\nimport { AuthGuardService, AutenticaRotaSerivce } from '../../shared';\n\nexport const ProfileRoutes: Routes = [\n  {\n    path: 'perfil',\n    component: PerfilComponent,\n    canActivate: [AuthGuardService],\n    children: [\n      {\n        path: 'cadastrar',\n        component: CadastrarComponent,\n        canActivate: [AutenticaRotaSerivce],\n      },\n      {\n        path: 'pesquisar',\n        component: ListarComponent,\n        canActivate: [AutenticaRotaSerivce],\n      },\n      { path: 'atualizar/:perfilId', component: AtualizarComponent },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(ProfileRoutes)],\n\n  exports: [RouterModule],\n})\nexport class ProfileRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\nimport { PerfilService, UsuarioService } from 'src/app/modules/shared';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport Swal from 'sweetalert2';\nimport {\n  PerfilDTO,\n  ErroGeral,\n  ErroDTO,\n  UsuarioListAllDTO,\n  Usuario,\n} from '../../../../shared/models';\n\nimport { CpfValidator } from '../../../../shared/validators';\n\n@Component({\n  selector: 'app-atualizar',\n  templateUrl: './atualizar.component.html',\n  styleUrls: ['./atualizar.component.css'],\n})\nexport class AtualizarComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  erroGeral = {} as ErroGeral;\n\n  erroDTO = {} as ErroDTO;\n\n  usuarioNew = {} as UsuarioListAllDTO;\n\n  usuario = {} as Usuario;\n\n  form: FormGroup;\n\n  perfil = {} as PerfilDTO;\n\n  perfils: PerfilDTO[];\n\n  userId: string;\n\n  constructor(\n    private fb: FormBuilder,\n    private toast: ToastrService,\n    private route: ActivatedRoute,\n    private perfilService: PerfilService,\n    private usuarioService: UsuarioService,\n  ) {}\n\n  startDate = new Date(2000, 1, 1);\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  ngOnInit(): void {\n    this.criarForm();\n    this.userId = this.route.snapshot.paramMap.get('userId');\n    this.carregaPerfils();\n    this.buscarUserId();\n  }\n\n  criarForm(): void {\n    this.form = this.fb.group({\n      nome: ['', Validators.required],\n      cpf: ['', [Validators.required, CpfValidator]],\n      datanascimento: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      perfil: ['', Validators.required],\n    });\n  }\n\n  buscarUserId(): void {\n    this.subscriptions.push(\n      this.usuarioService.getUserById(Number(this.userId)).subscribe(\n        (data) => {\n          this.usuario = data;\n          this.populandoForm();\n        },\n        (err) => {\n          this.erroGeral = err.error;\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { timeOut: 4000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  carregaPerfils(): void {\n    this.subscriptions.push(\n      this.perfilService.getAll().subscribe(\n        (data) => {\n          this.perfils = data;\n        },\n        (err) => {\n          this.erroGeral = err.error;\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { timeOut: 4000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  atualizarUsuario(): void {\n    if (this.form.invalid) {\n      this.toast.info('Formulário com campos invalidos!', 'Erro!', {\n        timeOut: 3000,\n      });\n      this.toucheCamposFormulario();\n      return;\n    }\n\n    // carregando informações para salvar novo usuário\n    this.usuario = this.form.value;\n    this.usuarioNew.nome = this.usuario.nome;\n    this.usuarioNew.cpf = this.usuario.cpf;\n    this.usuarioNew.id = Number(this.userId);\n    this.usuarioNew.perfilId = this.form.value.perfil;\n    this.usuarioNew.dataNascimento = this.form.value.datanascimento;\n    this.usuarioNew.email = this.usuario.email;\n    this.usuarioNew.login = this.usuarioNew.email;\n    this.usuarioNew.status = 1;\n    this.subscriptions.push(\n      this.usuarioService.update(this.usuarioNew).subscribe(\n        (data) => {\n          const msg = 'Usuário atualizado com sucesso!';\n\n          Swal.fire({\n            title: msg,\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n          setTimeout(() => {\n            this.refresh();\n          }, 1900);\n        },\n        (err) => {\n          this.erroGeral = err.error;\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { timeOut: 4000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  toucheCamposFormulario(): void {\n    this.form.get('cpf').markAsTouched();\n    this.form.get('email').markAsTouched();\n    this.form.get('nome').markAsTouched();\n    this.form.get('perfil').markAsTouched();\n    this.form.get('datanascimento').markAsTouched();\n  }\n\n  populandoForm(): void {\n    this.form.patchValue({\n      nome: this.usuario.nome,\n      cpf: this.usuario.cpf,\n      datanascimento: this.usuario.dataNascimento,\n      email: this.usuario.email,\n      perfil: this.usuario.perfil?.id,\n    });\n  }\n\n  refresh(): void {\n    window.location.reload();\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n\n      <div class=\"wrapper wrapper-content animated fadeInRight\">\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <div class=\"ibox float-e-margins\">\n                    <div class=\"ibox-title\">\n                        <h5>Formulário para preenchimento &nbsp;&nbsp;<b class=\"text-danger\"><i class='fa fa-exclamation'></i> Campos obrigatórios</b></h5>\n                        <div class=\"ibox-tools\">\n                            <a class=\"collapse-link\">\n                                <i class=\"fa fa-chevron-up\"></i>\n                            </a>\n                        </div>\n                    </div>\n                    <div class=\"ibox-content\">\n\n                        <form class=\"form-horizontal\" [formGroup]=\"form\" novalidate>\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Nome <i class='fa fa-exclamation text-danger'></i></label>\n                                <div class=\"col-sm-10\">\n                                    <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-vcard'></i></span>\n                                      <input type=\"text\" formControlName=\"nome\" class=\"form-control\" name=\"nome\" ></div>\n                                      <small *ngIf=\"form.get('nome').valid && form.get('nome').touched\" class=\"form-text text-success\" >ok</small>\n                                      <small *ngIf=\"!form.get('nome').valid && form.get('nome').touched\"class=\"form-text text-danger\" >Campo nome requerido</small>\n                                </div>\n                            </div>\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">CPF <i class='fa fa-exclamation text-danger'></i></label>\n                                <div class=\"col-sm-10\">\n                                    <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-id-card'></i></span>\n                                    <input type=\"text\" formControlName=\"cpf\" class=\"form-control\" name=\"cpf\" mascara=\"999.999.999-99\" ></div>\n                                    <small *ngIf=\"form.get('cpf').valid && form.get('cpf').touched\" class=\"form-text text-success\" >ok</small>\n                                    <small *ngIf=\"!form.get('cpf').valid && form.get('cpf').touched\"class=\"form-text text-danger\" >CPF inválido</small>\n                                </div>\n                            </div>\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Data de Nasc. <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\" >\n                                  <div class=\"input-group date m-b\">\n                                      <span class=\"input-group-addon\">\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                      </span>\n                                      <input matInput [matDatepicker]=\"picker\" disabled formControlName=\"datanascimento\" class=\"form-control\">\n                                      <mat-datepicker #picker disabled=\"false\" startView=\"year\" [startAt]=\"startDate\"></mat-datepicker>\n                                  </div>\n                              </div>\n                          </div>\n\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Email <i class='fa fa-exclamation text-danger'></i></label>\n                                <div class=\"col-sm-10\">\n                                    <div class=\"input-group m-b\"><span class=\"input-group-addon\">@</span>\n                                      <input type=\"email\" formControlName=\"email\" class=\"form-control\" name=\"email\" >\n                                      <small *ngIf=\"form.get('email').valid && form.get('email').touched\" class=\"form-text text-success\" >ok</small>\n                                      <small *ngIf=\"!form.get('email').valid && form.get('email').touched\"class=\"form-text text-danger\" >E-mail inválido</small>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Perfil <i class='fa fa-exclamation text-danger'></i></label>\n                                <div class=\"col-sm-10\">\n                                    <div class=\"col-lg-4 m-l-n\">\n                                        <select class='form-control' formControlName=\"perfil\" name ='perfil_id'>\n                                          <option *ngFor=\"let perfil of perfils\" value='{{ perfil.id }}'>{{ perfil.nome }}</option>\n                                        </select>\n                                        <small *ngIf=\"form.get('perfil').valid && form.get('perfil').touched\" class=\"form-text text-success\" >ok</small>\n                                        <small *ngIf=\"!form.get('perfil').valid && form.get('perfil').touched\"class=\"form-text text-danger\" >Perfil não selecionado</small>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"hr-line-dashed\"></div>\n                            <div class=\"form-group\">\n                                <div class=\"col-sm-4 col-sm-offset-2\">\n                                    <button class=\"btn btn-w-m btn-warning\" type=\"reset\" style=\"margin-right: 20px;\"><i class=\"fa fa-close\"></i> Limpar</button>\n                                    <button class=\"btn btn-w-m btn-primary\" type=\"button\" (click)=\"atualizarUsuario()\"><i class=\"fa fa-check\"></i> Atualizar</button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n\n</div>\n","export * from './atualizar.component';\n","import { Component, OnInit } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\nimport { PerfilService, UsuarioService } from 'src/app/modules/shared';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { ToastrService } from 'ngx-toastr';\n\nimport {\n  PerfilDTO,\n  ErroGeral,\n  ErroDTO,\n  UsuarioNewDTO,\n} from '../../../../shared/models';\n\nimport { CpfValidator } from '../../../../shared/validators';\n\n@Component({\n  selector: 'app-cadastrar',\n  templateUrl: './cadastrar.component.html',\n  styleUrls: ['./cadastrar.component.css'],\n})\nexport class CadastrarComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  erroGeral = {} as ErroGeral;\n\n  erroDTO = {} as ErroDTO;\n\n  usuarioNew = {} as UsuarioNewDTO;\n\n  form: FormGroup;\n\n  perfil = {} as PerfilDTO;\n\n  perfils: PerfilDTO[];\n\n  constructor(\n    private fb: FormBuilder,\n    private toast: ToastrService,\n    private perfilService: PerfilService,\n    private usuarioService: UsuarioService,\n  ) {}\n\n  startDate = new Date(2000, 1, 1);\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  ngOnInit(): void {\n    this.carregaPerfils();\n    this.criarForm();\n  }\n\n  criarForm(): void {\n    this.form = this.fb.group({\n      nome: ['', Validators.required],\n      cpf: ['', [Validators.required, CpfValidator]],\n      datanascimento: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      senha: ['', Validators.required],\n      perfil: ['', Validators.required],\n    });\n  }\n\n  carregaPerfils(): void {\n    this.subscriptions.push(\n      this.perfilService.getAll().subscribe(\n        (data) => {\n          this.perfils = data;\n        },\n        (err) => {\n          this.erroGeral = err.error;\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { timeOut: 4000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  cadastrarUsuario(): void {\n    if (this.form.invalid) {\n      this.toast.error('Formulário com campos invalidos!', 'Erro!', {\n        timeOut: 4000,\n      });\n      this.toucheCamposFormulario();\n      return;\n    }\n\n    // carregando informações para salvar novo usuário\n    this.usuarioNew = this.form.value;\n    this.usuarioNew.perfilId = this.form.value.perfil;\n    this.usuarioNew.dataNascimento = this.form.value.datanascimento;\n    this.usuarioNew.criado = new Date();\n    this.usuarioNew.login = this.usuarioNew.email;\n    this.usuarioNew.status = 1;\n    this.subscriptions.push(\n      this.usuarioService.insert(this.usuarioNew).subscribe(\n        (data) => {\n          const msg = 'Usuário cadastradas com sucesso!';\n\n          Swal.fire({\n            title: msg,\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n          setTimeout(() => {\n            this.refresh();\n          }, 1900);\n        },\n        (err) => {\n          this.erroGeral = err.error;\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { timeOut: 4000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  toucheCamposFormulario(): void {\n    this.form.get('cpf').markAsTouched();\n    this.form.get('email').markAsTouched();\n    this.form.get('nome').markAsTouched();\n    this.form.get('senha').markAsTouched();\n    this.form.get('perfil').markAsTouched();\n    this.form.get('datanascimento').markAsTouched();\n  }\n\n  refresh(): void {\n    window.location.reload();\n  }\n}\n","<ngx-spinner color = \"#fff\" [fullScreen] = \"true\" type=\"ball-clip-rotate-multiple\" >\n  <h1 style=\"color: aliceblue;\">\n    Cadastrando novo usuário...\n  </h1>\n</ngx-spinner>\n<div id=\"wrapper\">\n  <app-menu></app-menu>\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n      <div class=\"wrapper wrapper-content animated fadeInRight\">\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <div class=\"ibox float-e-margins\">\n                    <div class=\"ibox-title\">\n                        <h5>Formulário para preenchimento &nbsp;&nbsp;<b class=\"text-danger\"><i class='fa fa-exclamation'></i> Campos obrigatórios</b></h5>\n                        <div class=\"ibox-tools\">\n                            <a class=\"collapse-link\">\n                                <i class=\"fa fa-chevron-up\"></i>\n                            </a>\n                        </div>\n                    </div>\n                    <div class=\"ibox-content\">\n\n                        <form class=\"form-horizontal\" [formGroup]=\"form\" novalidate>\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Nome <i class='fa fa-exclamation text-danger'></i></label>\n                                <div class=\"col-sm-10\">\n                                    <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-vcard'></i></span>\n                                      <input type=\"text\" formControlName=\"nome\" class=\"form-control\" name=\"nome\" ></div>\n                                      <small *ngIf=\"form.get('nome').valid && form.get('nome').touched\" class=\"form-text text-success\" >ok</small>\n                                      <small *ngIf=\"!form.get('nome').valid && form.get('nome').touched\"class=\"form-text text-danger\" >Campo nome requerido</small>\n                                </div>\n                            </div>\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">CPF <i class='fa fa-exclamation text-danger'></i></label>\n                                <div class=\"col-sm-10\">\n                                    <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-id-card'></i></span>\n                                    <input type=\"text\" formControlName=\"cpf\" class=\"form-control\" name=\"cpf\" mascara=\"999.999.999-99\" ></div>\n                                    <small *ngIf=\"form.get('cpf').valid && form.get('cpf').touched\" class=\"form-text text-success\" >ok</small>\n                                    <small *ngIf=\"!form.get('cpf').valid && form.get('cpf').touched\"class=\"form-text text-danger\" >CPF inválido</small>\n                                </div>\n                            </div>\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Data de Nasc. <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\" >\n                                  <div class=\"input-group date m-b\">\n                                      <span class=\"input-group-addon\">\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                      </span>\n                                      <input matInput [matDatepicker]=\"picker\" disabled formControlName=\"datanascimento\" class=\"form-control\">\n                                      <mat-datepicker #picker disabled=\"false\" [startAt]=\"startDate\"></mat-datepicker>\n                                  </div>\n                              </div>\n                          </div>\n\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Email <i class='fa fa-exclamation text-danger'></i></label>\n                                <div class=\"col-sm-10\">\n                                    <div class=\"input-group m-b\"><span class=\"input-group-addon\">@</span>\n                                      <input type=\"email\" formControlName=\"email\" class=\"form-control\" name=\"email\" >\n                                      <small *ngIf=\"form.get('email').valid && form.get('email').touched\" class=\"form-text text-success\" >ok</small>\n                                      <small *ngIf=\"!form.get('email').valid && form.get('email').touched\"class=\"form-text text-danger\" >E-mail inválido</small>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"hr-line-dashed\"></div>\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Senha <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\">\n                                  <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-eye-slash'></i></span>\n                                      <input type=\"password\" formControlName=\"senha\" class=\"form-control\" name=\"senha\" >\n                                      <small *ngIf=\"form.get('senha').valid && form.get('senha').touched\" class=\"form-text text-success\" >ok</small>\n                                      <small *ngIf=\"!form.get('senha').valid && form.get('senha').touched\"class=\"form-text text-danger\" >Senha requerida</small>\n                                  </div>\n                              </div>\n                            </div>\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Perfil <i class='fa fa-exclamation text-danger'></i></label>\n                                <div class=\"col-sm-10\">\n                                    <div class=\"col-lg-4 m-l-n\">\n                                        <select class='form-control' formControlName=\"perfil\" name ='perfil_id'>\n                                          <option *ngFor=\"let perfil of perfils\" value='{{ perfil.id }}'>{{ perfil.nome }}</option>\n                                        </select>\n                                        <small *ngIf=\"form.get('perfil').valid && form.get('perfil').touched\" class=\"form-text text-success\" >ok</small>\n                                        <small *ngIf=\"!form.get('perfil').valid && form.get('perfil').touched\"class=\"form-text text-danger\" >Perfil não selecionado</small>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"hr-line-dashed\"></div>\n                            <div class=\"form-group\">\n                                <div class=\"col-sm-4 col-sm-offset-2\">\n                                    <button class=\"btn btn-w-m btn-warning\" type=\"reset\" style=\"margin-right: 20px;\"><i class=\"fa fa-close\"></i> Limpar</button>\n                                    <button class=\"btn btn-w-m btn-primary\" type=\"button\" (click)=\"cadastrarUsuario()\"><i class=\"fa fa-check\"></i> Cadastrar</button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n      </div>\n    </div>\n</div>\n","export * from './cadastrar.component';\n","export * from './cadastrar';\nexport * from './listar';\nexport * from './perfil-user';\nexport * from './usuario.component';\nexport * from './atualizar';\n","export * from './listar.component';\n","import { Component, OnInit } from '@angular/core';\nimport {\n  UsuarioListAllDTO,\n  UsuarioService,\n  Usuario,\n  ErroDTO,\n  ErroGeral,\n} from 'src/app/modules/shared';\nimport { Subscription } from 'rxjs';\nimport { API_CONFIG } from 'src/app/modules/shared/config';\nimport { ToastrService } from 'ngx-toastr';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-listar',\n  templateUrl: './listar.component.html',\n  styleUrls: ['./listar.component.css'],\n})\nexport class ListarComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  usuarios: UsuarioListAllDTO[];\n\n  usuariosFiltrados: UsuarioListAllDTO[];\n\n  usuario = {} as UsuarioListAllDTO;\n\n  userDetalhes = {} as Usuario;\n\n  erroGeral = {} as ErroGeral;\n\n  erroDTO: ErroDTO;\n\n  baseUrlServidor = API_CONFIG.baseUrl;\n\n  constructor(\n    private toast: ToastrService,\n    private usuarioService: UsuarioService,\n  ) {}\n\n  ngOnInit(): void {\n    this.carregarUsuarios();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  carregarUsuarios(): void {\n    this.subscriptions.push(\n      this.usuarioService.getAll().subscribe(\n        (data) => {\n          this.usuarios = data;\n          this.usuariosFiltrados = data;\n        },\n        (err) => {\n          this.erroGeral = err.error;\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { timeOut: 4000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  ativarDesativarUsuario(usuario: UsuarioListAllDTO): void {\n    const status = usuario.status === 1 ? 'desativar' : 'ativar';\n    this.usuario = usuario;\n    Swal.fire({\n      title: `Deseja ${status} usuario: ${usuario.nome}`,\n      icon: 'warning',\n      showCancelButton: true,\n      cancelButtonText: 'Cancelar',\n      confirmButtonText: `Sim, confirmar!`,\n    }).then((result) => {\n      if (result.value) {\n        this.usuario.status = status === 'ativar' ? 1 : 0;\n        this.usuarioService.updateStatus(this.usuario).subscribe(\n          (data) => {\n            this.carregarUsuarios();\n            Swal.fire({\n              title: status === 'ativar' ? 'Ativado!' : 'Desativado',\n              text: `Usuário ${usuario.nome} ${status} com sucesso!`,\n              icon: 'success',\n              showConfirmButton: false,\n              timer: 2000,\n            });\n          },\n          (err) => {\n            this.erroGeral = err.error;\n\n            if (this.erroGeral.errors) {\n              this.erroGeral.errors.forEach((e) => {\n                this.erroDTO = e;\n                this.toast.error(\n                  `Erro ${this.erroGeral.status} ${e.message}`,\n                  e.fieldName,\n                  { timeOut: 4000 },\n                );\n              });\n            } else {\n              const title = `Erro ${this.erroGeral.status}`;\n              this.toast.error(this.erroGeral.message, title, {\n                timeOut: 3000,\n              });\n            }\n          },\n        );\n      }\n    });\n  }\n\n  filtraUsuarioPeloNome(nome: string): void {\n    if (!nome) {\n      this.usuariosFiltrados = this.usuarios;\n    } else {\n      this.usuariosFiltrados = this.usuarios.filter((x) =>\n        x.nome.trim().toLowerCase().includes(nome.trim().toLowerCase()),\n      );\n    }\n  }\n\n  carregaUser(id: number): void {\n    this.usuarioService.getUserById(id).subscribe((data) => {\n      this.userDetalhes = data;\n    });\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu>\n\n  </app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu>\n\n        </app-barra-de-menu>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"ibox float-e-margins\">\n                <div class=\"ibox-title\">\n                    <h5>Tabela de registros retornados da base de dados</h5>\n                    <div class=\"ibox-tools\">\n                        <a class=\"collapse-link\">\n                            <i class=\"fa fa-chevron-up\">\n\n                            </i>\n                        </a>\n                    </div>\n                </div>\n                <div class=\"ibox-content\">\n                  <input\n                      class=\"form-control mr-sm-2\"\n                      type=\"search\"\n                      placeholder=\"Busca usuário por nome\"\n                      aria-label=\"Search\"\n                      #termoPesquisa\n                      (keyup)=\"filtraUsuarioPeloNome(termoPesquisa.value)\"\n                  >\n                </div>\n                <div class=\"ibox-content\">\n\n                    <div class=\"table-responsive\">\n                        <table class='table table-striped table-bordered table-hover dataTables-example'>\n                          <thead>\n                            <tr>\n                              <th>Nome</th>\n                              <th>CPF</th>\n                              <th><small>Dt Nasc.</small></th>\n                              <th>Email</th>\n                              <th>Status</th>\n                              <th>Ações</th>\n                              <th>Detalhes</th>\n                            </tr>\n                          </thead>\n                            <tbody>\n                            <tr class='gradeX' *ngFor=\"let user of usuariosFiltrados\">\n                              <td><small>{{ user.nome }}</small></td>\n                              <td><small>{{ user.cpf | cpfMask }}</small></td>\n                              <td> {{ user.dataNascimento | date: 'dd/MM/y' }} </td>\n                              <td><small> {{ user.email }} </small></td>\n                              <td>\n                                  <button *ngIf=\"user.status==0\" (click)=\"ativarDesativarUsuario(user)\" type=\"button\" class='btn btn-outline btn-danger'>\n                                    Desativado\n                                  </button>\n                                  <button *ngIf=\"user.status!=0\" (click)=\"ativarDesativarUsuario(user)\" type=\"button\" class='btn btn-outline btn-info'>\n                                    Ativado\n                                  </button>\n                              </td>\n                              <td>\n                                <a href='/usuario/atualizar/{{user.id}}'>\n                                  <button type='button' class='btn btn-outline btn-success'>\n                                    <i class='fa fa-edit'></i>\n                                    Editar\n                                  </button>\n                                </a>\n                              </td>\n                              <td>\n                                <button (click)=\"carregaUser(user.id)\" type='button' class='btn btn-outline btn-primary' data-toggle=\"modal\" data-target=\"#myModal\">\n                                  Detalhes\n                                </button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    </div>\n</div>\n\n<div class=\"col-lg-4\">\n    <div class=\"modal inmodal\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n        <div class=\"modal-dialog\">\n        <div class=\"modal-content animated bounceInRight\">\n                <div class=\"modal-header\">\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button>\n                    <img *ngIf=\"userDetalhes.imageProfile\" alt=\"image\" class=\"img-circle\" src=\"data:image/jpeg;base64,{{ userDetalhes.imageProfile }}\" style=\"width: 70px; height: 70px;\"/>\n                      <img *ngIf=\"!userDetalhes.imageProfile\" alt=\"image\" class=\"img-circle\" src=\"../../../../../assets/img/user-default.png\" style=\"width: 70px; height: 70px;\"/>\n                    <h4 class=\"modal-title\">{{ userDetalhes.nome }}</h4>\n                    <h4 *ngIf=\"!userDetalhes.nome\" class=\"modal-title\">Sem nome</h4>\n                    <small class=\"font-bold\">{{ userDetalhes.perfil ? 'Perfil: ' + userDetalhes.perfil.nome : 'Perfil não cadastrado' }}</small>\n                </div>\n                <div class=\"modal-body\">\n                    <p> <strong>Data de Nascimento:</strong> {{ userDetalhes.dataNascimento | date: 'dd/MM/y' }}</p>\n                    <p> <strong>Login: </strong> {{ userDetalhes.login }}</p>\n                    <p> <strong>CPF: </strong> {{ userDetalhes.cpf | cpfMask }}</p>\n                    <p> <strong>Cadastrado  </strong>em: {{ userDetalhes.criado | date: 'dd/MM/y' }}</p>\n                    <p> <strong>Status: </strong> {{ userDetalhes.status === 1 ? 'Ativado' : 'Desativado' }}</p>\n\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n","export * from './perfil-user.component';\n","import { Component, OnInit } from '@angular/core';\n\nimport { API_CONFIG } from 'src/app/modules/shared/config';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Subscription } from 'rxjs';\nimport Swal from 'sweetalert2';\nimport { ToastrService } from 'ngx-toastr';\nimport {\n  Usuario,\n  StorangeService,\n  UsuarioService,\n  ErroGeral,\n  ErroDTO,\n} from '../../../../shared';\n\n@Component({\n  selector: 'app-perfil-user',\n  templateUrl: './perfil-user.component.html',\n  styleUrls: ['./perfil-user.component.css'],\n})\nexport class PerfilUserComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  usuario = {} as Usuario;\n\n  erroGeral = {} as ErroGeral;\n\n  erroDTO: ErroDTO;\n\n  file = new FormData();\n\n  baseUrlServidor = API_CONFIG.baseUrl;\n\n  form: FormGroup;\n\n  constructor(\n    private storangeService: StorangeService,\n    private toast: ToastrService,\n    private spinner: NgxSpinnerService,\n    private fb: FormBuilder,\n    private usuarioService: UsuarioService,\n  ) {}\n\n  ngOnInit(): void {\n    this.carregaDadosUsuario();\n    this.criarForm();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  criarForm(): void {\n    this.form = this.fb.group({\n      file: [''],\n    });\n  }\n\n  onFileSelect(event): void {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.form.get('file').setValue(file);\n    }\n  }\n\n  carregaDadosUsuario(): void {\n    this.usuario = this.storangeService.getLocalUser();\n  }\n\n  atualizarImagePerfil(): void {\n    this.spinner.show();\n    if (this.form.invalid) {\n      this.spinner.hide();\n\n      this.toast.error(\n        'Favor selecionar nova imagem de perfil',\n        'Erro 404 Not Found',\n        {\n          timeOut: 4000,\n        },\n      );\n    }\n\n    this.file.append('file', this.form.get('file').value);\n    this.subscriptions.push(\n      this.usuarioService.updateImage(this.file, this.usuario.id).subscribe(\n        (data) => {\n          this.spinner.hide();\n          Swal.fire({\n            title: 'sucesso',\n            text: 'Imagem do perfil atualizada!',\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 1000,\n          });\n          this.atualizaDadosUser();\n          setTimeout(() => {\n            this.refresh();\n          }, 1000);\n        },\n        (err) => {\n          this.erroGeral = err.error;\n          this.spinner.hide();\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                {\n                  timeOut: 4000,\n                },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  atualizaDadosUser(): void {\n    this.storangeService.setLocalUser(null);\n    this.usuarioService.getUserById(this.usuario.id).subscribe((data) => {\n      this.storangeService.setLocalUser(data);\n      this.carregaDadosUsuario();\n    });\n  }\n\n  refresh() {\n    window.location.reload();\n  }\n}\n","<ngx-spinner color = \"#fff\" [fullScreen] = \"true\" type=\"ball-clip-rotate-multiple\" >\n  <h1 style=\"color: aliceblue;\">\n    Atualizando...\n  </h1>\n</ngx-spinner>\n<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n\n      <div class=\"wrapper wrapper-content animated fadeInRight\">\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <div class=\"ibox float-e-margins\">\n                    <div class=\"ibox-title\">\n                        <h5>Perfil do usuário</h5>\n                        <div class=\"ibox-tools\">\n                            <a class=\"collapse-link\">\n                                <i class=\"fa fa-chevron-up\"></i>\n                            </a>\n                        </div>\n                    </div>\n                    <div class=\"ibox-content\" style=\"display: flex; align-items: center; flex-direction: column;\">\n                      <div class=\"row m-b-lg m-t-lg\">\n                        <div class=\"col-md-9\">\n\n                            <div class=\"profile-image\">\n                              <form class=\"form-horizontal\" [formGroup]=\"form\">                                <label for=\"avatar\" style=\"cursor: pointer;\">\n                                  <img *ngIf=\"usuario.imageProfile\" for='imagemProfile' alt=\"image\" class=\"img-circle circle-border m-b-md\" src=\"data:image/jpeg;base64,{{ usuario.imageProfile }}\" style=\"width: 100px; height: 100px;\"/>\n                                  <img *ngIf=\"!usuario.imageProfile\" alt=\"image\" class=\"img-circle circle-border m-b-md\" src=\"../../../../../assets/img/user-default.png\" style=\"width: 130px; height: 130px;\"/>\n                                  <input\n                                    formControlName=\"file\"\n                                    type=\"file\"\n                                    accept=\"image/*\"\n                                    name=\"avatar\"\n                                    id=\"avatar\"\n                                    style=\"display: none;\"\n                                    (change)=\"onFileSelect($event)\"\n                                  >\n                                </label>\n                                <p>Clique na imagem para atualizar foto de perfil</p>\n                                <button type=\"button\" (click)=\"atualizarImagePerfil()\" class=\"btn btn-primary\">Atualizar</button>\n                              </form>\n                            </div>\n                            <div class=\"profile-info\">\n                                <div class=\"col-md-12\">\n                                    <div>\n                                        <h2 class=\"no-margins\">\n                                            {{ usuario.nome | uppercase }}\n                                        </h2>\n                                        <h4>{{ usuario.perfil?.nome | uppercase }}</h4>\n\n                                          <table class=\"table small m-b-xs\">\n                                            <tbody>\n                                            <tr>\n                                                <td>\n                                                    <strong>E-mail</strong>\n                                                </td>\n                                                <td>\n                                                  {{ usuario.email }}\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td>\n                                                    <strong>Data de Nascimento</strong>\n                                                </td>\n                                                <td>\n                                                    {{ usuario.dataNascimento | date: 'dd/MM/y' }}\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td>\n                                                    <strong>CPF</strong>\n                                                </td>\n                                                <td>\n                                                    {{ usuario.cpf | cpfMask }}\n                                                </td>\n                                            </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({ template: `<router-outlet></router-outlet>` })\nexport class UsuarioComponent {}\n","export * from './user.module';\nexport * from './router-user.module';\n","import { NgModule } from '@angular/core';\n\nimport { RouterModule, Routes } from '@angular/router';\n\nimport {\n  CadastrarComponent,\n  ListarComponent,\n  UsuarioComponent,\n  PerfilUserComponent,\n  AtualizarComponent,\n} from './components';\nimport { AuthGuardService, AutenticaRotaSerivce } from '../../shared';\n\nexport const UserRoutes: Routes = [\n  {\n    path: 'usuario',\n    component: UsuarioComponent,\n    canActivate: [AuthGuardService],\n    children: [\n      {\n        path: 'cadastrar',\n        component: CadastrarComponent,\n        canActivate: [AutenticaRotaSerivce],\n      },\n      {\n        path: 'pesquisar',\n        component: ListarComponent,\n        canActivate: [AutenticaRotaSerivce],\n      },\n      { path: 'perfil', component: PerfilUserComponent },\n      { path: 'atualizar/:userId', component: AtualizarComponent },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(UserRoutes)],\n\n  exports: [RouterModule],\n})\nexport class UserRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport {\n  MatNativeDateModule,\n  DateAdapter,\n  MAT_DATE_FORMATS,\n} from '@angular/material/core';\n\nimport {\n  CadastrarComponent,\n  ListarComponent,\n  UsuarioComponent,\n  PerfilUserComponent,\n  AtualizarComponent,\n} from './components';\nimport {\n  SharedModule,\n  MenuModule,\n  APP_DATE_FORMATS,\n  AppDateAdapter,\n} from '../../shared';\n\n@NgModule({\n  declarations: [\n    CadastrarComponent,\n    ListarComponent,\n    UsuarioComponent,\n    PerfilUserComponent,\n    AtualizarComponent,\n  ],\n  imports: [\n    CommonModule,\n    MenuModule,\n    RouterModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatNativeDateModule,\n    NgxSpinnerModule,\n    ReactiveFormsModule,\n    NgxSpinnerModule,\n    SharedModule,\n  ],\n  providers: [\n    MatDatepickerModule,\n    { provide: DateAdapter, useClass: AppDateAdapter },\n    { provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS },\n  ],\n})\nexport class UserModule {}\n","export const environment = {\n  production: false,\n  baseURL: 'http://localhost:8080',\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}