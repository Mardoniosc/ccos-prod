{"version":3,"file":"80.c9fbf94cbc43627b.js","mappings":"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","names":["UsuarioService","BaseResourceService","constructor","injector","super","this","i0","factory","UsuarioListComponent","BaseResourceListComponent","usuarioService","selectors","ctx","Usuario","BaseResourceModel","id","nome","email","senha","cpf","login","dataNascimento","imagem","status","perfilId","perfil","UsuarioFormComponent","BaseResourceFormComponent","perfilService","ngOnInit","setTimeout","carregaPerfils","buildResourceForm","resourceForm","formBuilder","group","Validators","senhaConfirmacao","matchValidator","getAll","filtro","pagina","direcaoOrdenacao","tamanho","ordenarPor","subscribe","perfils","content","patchValue","resource","err","toastr","error","timeOut","progressBar","closeButton","createPageTitle","editionPageTitle","matchTo","reverse","control","parent","c","controls","updateValueAndValidity","value","matching","routes","path","component","MY_DATE_FORMATS","parse","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","UsuarioModule","provide","MAT_DATE_FORMATS","useValue","imports","CommonModule","RouterModule","SharedModule","NgxMaskModule"],"sourceRoot":"webpack:///","sources":["./src/app/modules/usuario/api/usuario.service.ts","./src/app/modules/usuario/containers/usuario-list/usuario-list.component.html","./src/app/modules/usuario/containers/usuario-list/usuario-list.component.ts","./src/app/modules/usuario/model/usuario.model.ts","./src/app/modules/usuario/containers/usuario-form/usuario-form.component.html","./src/app/modules/usuario/containers/usuario-form/usuario-form.component.ts","./src/app/modules/usuario/usuario.module.ts"],"sourcesContent":["import { Injectable, Injector } from '@angular/core';\r\nimport { BaseResourceService } from 'app/shared/services/base-resource.service';\r\nimport { Usuario, UsuarioResponse } from '../model/usuario.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UsuarioService extends BaseResourceService<\r\n  Usuario,\r\n  UsuarioResponse\r\n> {\r\n  constructor(protected injector: Injector) {\r\n    super('/usuarios', injector);\r\n  }\r\n}\r\n","<div class=\"absolute inset-0 flex flex-col min-w-0 overflow-hidden bg-card dark:bg-transparent\">\r\n  <div class=\"flex flex-col flex-auto min-w-0 overflow-y-auto\" cdkScrollable>\r\n    <app-page-header [show-button]=\"validaPermissao('MANTER_USUARIO')\" page-title=\"Usuários\"\r\n      placeholder-text=\"Buscar por nome\" (pesquisar)=\"filtrarResource($event)\">\r\n    </app-page-header>\r\n\r\n    <!-- Page body -->\r\n    <div class=\"flex flex-col flex-auto min-w-0 overflow-y-auto\" cdkScrollable *ngIf=\"length > 0\">\r\n      <mat-table [dataSource]=\"resources\">\r\n        <!-- User name Definition -->\r\n        <ng-container matColumnDef=\"id\">\r\n          <mat-header-cell *matHeaderCellDef> Código </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let row\"> {{ row.id }} </mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- NOME -->\r\n        <ng-container matColumnDef=\"nome\" class=\"cursor-pointer\">\r\n          <mat-header-cell *matHeaderCellDef> Nome </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let row\">\r\n            {{ row.nome }}\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- E-MAIL -->\r\n        <ng-container matColumnDef=\"email\" class=\"cursor-pointer\">\r\n          <mat-header-cell *matHeaderCellDef> E-mail </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let row\">\r\n            {{ row.email }}\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- DATA NASCIMENTO -->\r\n        <ng-container matColumnDef=\"dataNascimento\" class=\"cursor-pointer\">\r\n          <mat-header-cell *matHeaderCellDef> data Nascimento </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let row\">\r\n            {{ row.dataNascimento | date: 'd/MM/Y' }}\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- STATUS -->\r\n        <ng-container matColumnDef=\"status\" class=\"cursor-pointer\">\r\n          <mat-header-cell *matHeaderCellDef> Status </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let row\">\r\n            <span class=\"font-bold text-sm px-2.5 py-0.5 rounded-full\" [ngClass]=\"{'bg-blue-200 text-blue-800 dark:bg-blue-600 dark:text-blue-50': row.status,\r\n                          'bg-rose-200 text-rose-800 dark:bg-rose-600 dark:text-rose-50': !row.status}\">\r\n              {{ row.status ? 'Ativado' : 'Desativado'}}\r\n            </span>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"acoes\">\r\n          <mat-header-cell *matHeaderCellDef> Ações </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let row\">\r\n            <span *ngIf=\"!validaPermissao('MANTER_USUARIO')\">-</span>\r\n            <span class=\"mr-2 cursor-pointer\" [routerLink]=\"[row.id, 'editar']\" *ngIf=\"validaPermissao('MANTER_USUARIO')\">\r\n              <mat-icon class=\"text-accent dark:text-accent-300\" svgIcon=\"heroicons_outline:pencil-alt\"></mat-icon>\r\n            </span>\r\n            <span (click)=\"excluir(row)\" class=\"cursor-pointer\" *ngIf=\"validaPermissao('MANTER_USUARIO')\">\r\n              <mat-icon class=\"text-warn-600\" svgIcon=\"heroicons_outline:trash\"></mat-icon>\r\n            </span>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- Header and Row Declarations -->\r\n        <mat-header-row *matHeaderRowDef=\"['id', 'nome', 'email', 'dataNascimento', 'status', 'acoes']\">\r\n        </mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: ['id', 'nome', 'email', 'dataNascimento', 'status', 'acoes']\"></mat-row>\r\n      </mat-table>\r\n    </div>\r\n\r\n    <!-- NENHUM DADO ENCONTRADO -->\r\n    <app-not-found-data class=\"h-full\" mensagem=\"Nenhum registro de usuários encontrado!\" *ngIf=\"length <= 0\">\r\n    </app-not-found-data>\r\n  </div>\r\n  <div class=\"flex flex-0 flex-col\" *ngIf=\"length > 0\">\r\n    <mat-paginator class=\"flex justify-end border-t\" [length]=\"length\" [pageSize]=\"pageSize\"\r\n      [pageSizeOptions]=\"pageSizeOptions\" (page)=\"paginacao($event)\" aria-label=\"Select page\">\r\n    </mat-paginator>\r\n  </div>\r\n</div>\r\n","import { Component, Injector, OnInit } from '@angular/core';\r\nimport { BaseResourceListComponent } from 'app/shared/containers/base-resource-list/base-resource-list.component';\r\nimport { UsuarioService } from '../../api/usuario.service';\r\nimport { Usuario, UsuarioResponse } from '../../model/usuario.model';\r\n\r\n@Component({\r\n  selector: 'app-usuario-list',\r\n  templateUrl: './usuario-list.component.html',\r\n  styleUrls: ['./usuario-list.component.scss'],\r\n})\r\nexport class UsuarioListComponent extends BaseResourceListComponent<\r\n  Usuario,\r\n  UsuarioResponse\r\n> {\r\n  constructor(\r\n    protected injector: Injector,\r\n    protected usuarioService: UsuarioService\r\n  ) {\r\n    super(injector, usuarioService);\r\n  }\r\n}\r\n","import { Perfil } from 'app/modules/perfil/models/perfil.model';\r\nimport { BaseResourceModel } from 'app/shared/models/base-resource.model';\r\n\r\nexport class Usuario extends BaseResourceModel {\r\n  constructor(\r\n    public id?: number,\r\n    public nome?: string,\r\n    public email?: string,\r\n    public senha?: string | null,\r\n    public cpf?: string,\r\n    public login?: string,\r\n    public dataNascimento?: string,\r\n    public imagem?: string,\r\n    public status?: number,\r\n    public perfilId?: number,\r\n    public perfil?: Perfil\r\n  ) {\r\n    super();\r\n  }\r\n}\r\n\r\nexport class UsuarioResponse {\r\n  constructor(\r\n    public content?: Usuario[],\r\n    public totalElements?: number,\r\n    public size?: number,\r\n    public numberOfElements?: number\r\n  ) {}\r\n}\r\n","<div class=\"flex flex-col flex-auto min-w-0\">\r\n  <div class=\"flex-auto p-6 sm:p-10\">\r\n    <div class=\"bg-card rounded-2xl shadow overflow-hidden\">\r\n      <form [formGroup]=\"resourceForm\" class=\"m-4\">\r\n        <!-- Section -->\r\n        <div class=\"w-full\">\r\n          <div class=\"text-xl\">{{ pageTitle }}</div>\r\n        </div>\r\n        <div class=\"flex flex-auto flex-wrap my-5\">\r\n          <div class=\"flex flex-col w-full sm:pl-8\">\r\n            <!-- Destinação -->\r\n            <div class=\"flex\">\r\n              <mat-form-field class=\"w-2/3 pr-2\">\r\n                <mat-label>Nome</mat-label>\r\n                <span matPrefix>\r\n                  <mat-icon svgIcon=\"heroicons_outline:user\"></mat-icon>\r\n                </span>\r\n                <input id=\"nome\" matInput formControlName=\"nome\" />\r\n              </mat-form-field>\r\n              <mat-form-field class=\"w-1/3 pl-2\">\r\n                <mat-label>CPF</mat-label>\r\n                <span matPrefix>\r\n                  <mat-icon svgIcon=\"heroicons_outline:user-circle\"></mat-icon>\r\n                </span>\r\n                <input id=\"cpf-titular\" matInput mask=\"000.000.000-00\" formControlName=\"cpf\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <!-- Dados do banco -->\r\n            <div class=\"flex\">\r\n\r\n              <mat-form-field class=\"w-1/3 pr-2\">\r\n                <mat-label>Data Nascimento</mat-label>\r\n                <input matInput formControlName=\"dataNascimento\" [matDatepicker]=\"data_nascimento\">\r\n                <mat-datepicker-toggle matPrefix [for]=\"data_nascimento\"></mat-datepicker-toggle>\r\n                <mat-datepicker #data_nascimento></mat-datepicker>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field class=\"w-1/3 px-2\">\r\n                <mat-label>Senha</mat-label>\r\n                <span matPrefix>\r\n                  <mat-icon svgIcon=\"heroicons_outline:lock-closed\"></mat-icon>\r\n                </span>\r\n                <input id=\"senha\" matInput type=\"password\" formControlName=\"senha\" />\r\n              </mat-form-field>\r\n              <mat-form-field class=\"w-1/3 pr-2\">\r\n                <mat-label>Confirmação de Senha</mat-label>\r\n                <span matPrefix>\r\n                  <mat-icon svgIcon=\"heroicons_outline:lock-closed\"></mat-icon>\r\n                </span>\r\n                <input id=\"senha-confirmacao\" matInput type=\"password\" formControlName=\"senhaConfirmacao\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <!-- Dados da conta -->\r\n            <div class=\"flex\">\r\n              <mat-form-field class=\"w-1/2 pr-2\">\r\n                <mat-label>Login</mat-label>\r\n                <span matPrefix>\r\n                  <mat-icon svgIcon=\"heroicons_outline:user\"></mat-icon>\r\n                </span>\r\n                <input id=\"login\" matInput type=\"text\" formControlName=\"login\" />\r\n              </mat-form-field>\r\n              <mat-form-field class=\"w-1/2 pl-2\">\r\n                <mat-label>E-mail</mat-label>\r\n                <span matPrefix>\r\n                  <mat-icon svgIcon=\"heroicons_outline:mail\"></mat-icon>\r\n                </span>\r\n                <input id=\"email\" type=\"text\" matInput formControlName=\"email\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"flex\">\r\n\r\n              <mat-form-field class=\"w-2/3 pr-2\">\r\n                <mat-label>Perfil</mat-label>\r\n                <mat-select id=\"perfilId\" formControlName=\"perfilId\">\r\n                  <mat-option *ngFor=\"let perfil of perfils\" [value]=\"perfil.id\">{{ perfil.nome }}</mat-option>\r\n                </mat-select>\r\n                <mat-icon class=\"icon-size-5\" matPrefix [svgIcon]=\"'heroicons_outline:document-text'\"></mat-icon>\r\n              </mat-form-field>\r\n\r\n\r\n              <div class=\"w-1/3 pl-2\">\r\n                <div class=\"w-full pl-2 flex flex-col mt-1 ml-5\">\r\n                  <mat-label>Status</mat-label>\r\n                  <mat-slide-toggle color=\"primary\" class=\"mt-3\" [(ngModel)]=\"status\" formControlName=\"status\">\r\n                    {{ status ? 'Ativado' : 'Desativado' }}\r\n                  </mat-slide-toggle>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Divider -->\r\n        <div class=\"mt-11 mb-10 border-t\"></div>\r\n\r\n        <!-- Actions -->\r\n        <div class=\"flex items-center justify-end\">\r\n          <a routerLink=\"/usuario\" routerLinkActive=\"router-link-active\">\r\n            <button class=\"fuse-mat-button-rounded mat-flat-button mat-button-base\" mat-stroked-button type=\"button\">\r\n              Cancelar\r\n            </button>\r\n          </a>\r\n\r\n          <button class=\"ml-4 fuse-mat-button-rounded mat-flat-button mat-button-base mat-primary\" mat-flat-button\r\n            type=\"button\" [disabled]=\"resourceForm.invalid\" (click)=\"submitForm()\">\r\n            Salvar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Injector, OnInit } from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  ValidationErrors,\r\n  ValidatorFn,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { PerfilService } from 'app/modules/perfil/api/perfil.service';\r\nimport { Perfil } from 'app/modules/perfil/models/perfil.model';\r\nimport { BaseResourceFormComponent } from 'app/shared/containers/base-resource-form';\r\nimport { IFilter } from 'app/shared/models/interface.model';\r\nimport { UsuarioService } from '../../api/usuario.service';\r\nimport { Usuario, UsuarioResponse } from '../../model/usuario.model';\r\nimport toastr from 'toastr';\r\n\r\n@Component({\r\n  selector: 'app-usuario-form',\r\n  templateUrl: './usuario-form.component.html',\r\n  styleUrls: ['./usuario-form.component.scss'],\r\n})\r\nexport class UsuarioFormComponent\r\n  extends BaseResourceFormComponent<Usuario, UsuarioResponse>\r\n  implements OnInit\r\n{\r\n  status: number = 0;\r\n\r\n  perfils: Perfil[] = [];\r\n\r\n  constructor(\r\n    protected usuarioService: UsuarioService,\r\n    protected injector: Injector,\r\n    protected perfilService: PerfilService\r\n  ) {\r\n    super(injector, new Usuario(), usuarioService);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    setTimeout(() => {\r\n      this.carregaPerfils();\r\n    }, 500);\r\n  }\r\n\r\n  protected buildResourceForm() {\r\n    this.resourceForm = this.formBuilder.group({\r\n      nome: [null, [Validators.required, Validators.minLength(2)]],\r\n      email: [null, [Validators.required, Validators.email]],\r\n      cpf: [null, [Validators.required, Validators.minLength(11)]],\r\n      login: [null, [Validators.required]],\r\n      dataNascimento: [null, [Validators.required]],\r\n      status: [null, [Validators.required]],\r\n      perfilId: [null, [Validators.required]],\r\n      senha: [null, [Validators.minLength(6)]],\r\n      senhaConfirmacao: [\r\n        null,\r\n        [Validators.minLength(6), this.matchValidator('senha')],\r\n      ],\r\n    });\r\n  }\r\n\r\n  protected carregaPerfils() {\r\n    const filtro: IFilter = {\r\n      filtro: '',\r\n      pagina: 0,\r\n      direcaoOrdenacao: 'DESC',\r\n      tamanho: 100,\r\n      ordenarPor: 'id',\r\n    };\r\n\r\n    this.perfilService.getAll(filtro).subscribe(\r\n      (perfils) => {\r\n        this.perfils = perfils.content;\r\n        this.resourceForm.patchValue({\r\n          perfilId: this.resource?.perfil?.id,\r\n        });\r\n      },\r\n      (err) =>\r\n        toastr.error('Não foi possível carregar os perfils', err.error.error, {\r\n          timeOut: 10000,\r\n          progressBar: true,\r\n          closeButton: true,\r\n        })\r\n    );\r\n  }\r\n\r\n  protected createPageTitle(): string {\r\n    return 'Cadastro de Novo Usuário';\r\n  }\r\n\r\n  protected editionPageTitle(): string {\r\n    const usuarioNome = this.resource.nome || '';\r\n    return 'Editando usuário: ' + usuarioNome;\r\n  }\r\n\r\n  protected matchValidator(matchTo: string, reverse?: boolean): ValidatorFn {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n      if (control.parent && reverse) {\r\n        const c = (control.parent?.controls as any)[matchTo] as AbstractControl;\r\n        if (c) {\r\n          c.updateValueAndValidity();\r\n        }\r\n        return null;\r\n      }\r\n      return !!control.parent &&\r\n        !!control.parent.value &&\r\n        control.value === (control.parent?.controls as any)[matchTo].value\r\n        ? null\r\n        : { matching: true };\r\n    };\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Route, RouterModule } from '@angular/router';\r\nimport { UsuarioListComponent } from './containers/usuario-list/usuario-list.component';\r\nimport { UsuarioFormComponent } from './containers/usuario-form/usuario-form.component';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { NgxMaskModule } from 'ngx-mask';\r\n\r\nconst routes: Route[] = [\r\n  { path: '', component: UsuarioListComponent },\r\n  { path: 'novo', component: UsuarioFormComponent },\r\n  { path: ':id/editar', component: UsuarioFormComponent },\r\n];\r\n\r\nexport const MY_DATE_FORMATS = {\r\n  parse: {\r\n    dateInput: 'DD/MM/YYYY',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n\r\n@NgModule({\r\n  declarations: [UsuarioListComponent, UsuarioFormComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    SharedModule,\r\n    NgxMaskModule.forRoot(),\r\n  ],\r\n  providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }],\r\n})\r\nexport class UsuarioModule {}\r\n"],"x_google_ignoreList":[]}