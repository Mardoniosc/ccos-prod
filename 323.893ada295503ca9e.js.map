{"version":3,"file":"323.893ada295503ca9e.js","mappings":"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","names":["i0","PerfilListComponent","BaseResourceListComponent","constructor","injector","perfilService","super","this","selectors","ctx","Perfil","BaseResourceModel","id","nome","PerfilFormComponent","BaseResourceFormComponent","buildResourceForm","resourceForm","formBuilder","group","Validators","createPageTitle","editionPageTitle","resource","routes","path","component","PerfilModule","CommonModule","RouterModule","SharedModule","NotFoundDataComponent","PageHeaderComponent","EventEmitter","ngOnInit","filtrar","termo","pesquisar","emit","injecto","resourceService","route","get","ActivatedRoute","router","Router","FormBuilder","setCurrentAction","loadResource","ngAfterContentChecked","setPageTitle","submitForm","invalid","value","currentAction","update","subscribe","toastr","timeOut","progressBar","closeButton","navigate","snapshot","parent","url","error","insert","idResource","Number","getById","patchValue","pageTitle","RulesService","temPermissao","rule","token","localStorage","getItem","ELocalStorage","ROLES","AuthUtils","Object","find","permissao","factory","_fuseConfirmationService","FuseConfirmationService","_matPaginatorIntl","MatPaginatorIntl","_ruleService","carregaInformacoesResource","itemsPerPageLabel","setPageSizeOptions","setPageSizeOptionsInput","pageSizeOptions","split","map","str","getAll","filtro","pagina","direcaoOrdenacao","tamanho","ordenarPor","data","resources","content","length","totalElements","pageSize","size","excluir","open","title","message","icon","show","name","color","actions","confirm","label","cancel","dismissible","afterClosed","result","delete","res","paginacao","event","pageIndex","filtrarResource","validaPermissao"],"sourceRoot":"webpack:///","sources":["./src/app/modules/perfil/containers/perfil-list/perfil-list.component.html","./src/app/modules/perfil/containers/perfil-list/perfil-list.component.ts","./src/app/modules/perfil/models/perfil.model.ts","./src/app/modules/perfil/containers/perfil-form/perfil-form.component.ts","./src/app/modules/perfil/containers/perfil-form/perfil-form.component.html","./src/app/modules/perfil/perfil.module.ts","./src/app/shared/components/not-found-data/not-found-data.component.ts","./src/app/shared/components/not-found-data/not-found-data.component.html","./src/app/shared/components/page-header/page-header.component.html","./src/app/shared/components/page-header/page-header.component.ts","./src/app/shared/containers/base-resource-form/BaseResourceFormComponent.ts","./src/app/shared/services/rules.service.ts","./src/app/shared/containers/base-resource-list/base-resource-list.component.ts","./src/app/shared/models/base-resource.model.ts"],"sourcesContent":["<div class=\"absolute inset-0 flex flex-col min-w-0 overflow-hidden bg-card dark:bg-transparent\">\r\n  <div class=\"flex flex-col flex-auto min-w-0 overflow-y-auto\" cdkScrollable>\r\n\r\n    <app-page-header [show-button]=\"validaPermissao('MANTER_PERFIL')\" page-title=\"Perfils\" placeholder-text=\"Buscar por nome\" (pesquisar)=\"filtrarResource($event)\">\r\n    </app-page-header>\r\n\r\n    <!-- Page body -->\r\n    <div class=\"flex flex-col flex-auto min-w-0 overflow-y-auto\" cdkScrollable *ngIf=\"length > 0\">\r\n      <mat-table [dataSource]=\"resources\">\r\n        <!-- User name Definition -->\r\n        <ng-container matColumnDef=\"id\">\r\n          <mat-header-cell *matHeaderCellDef> Código </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let row\"> {{ row.id }} </mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- Age Definition -->\r\n        <ng-container matColumnDef=\"nome\" class=\"cursor-pointer\">\r\n          <mat-header-cell *matHeaderCellDef> Nome </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let row\">\r\n            {{ row.nome }}\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"acoes\">\r\n          <mat-header-cell *matHeaderCellDef> Ações </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let row\">\r\n            <span *ngIf=\"!validaPermissao('MANTER_PERFIL')\">-</span>\r\n            <span class=\"mr-2 cursor-pointer\" [routerLink]=\"[row.id, 'editar']\" *ngIf=\"validaPermissao('MANTER_PERFIL')\">\r\n              <mat-icon class=\"text-accent dark:text-accent-300\" svgIcon=\"heroicons_outline:pencil-alt\"></mat-icon>\r\n            </span>\r\n            <span (click)=\"excluir(row)\" class=\"cursor-pointer\" *ngIf=\"validaPermissao('MANTER_PERFIL')\">\r\n              <mat-icon class=\"text-warn-600\" svgIcon=\"heroicons_outline:trash\"></mat-icon>\r\n            </span>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- Header and Row Declarations -->\r\n        <mat-header-row *matHeaderRowDef=\"['id', 'nome', 'acoes']\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: ['id', 'nome', 'acoes']\"></mat-row>\r\n      </mat-table>\r\n    </div>\r\n\r\n    <!-- NENHUM DADO ENCONTRADO -->\r\n    <app-not-found-data class=\"h-full\" mensagem=\"Nenhum registro de perfils encontrado!\" *ngIf=\"length <= 0\">\r\n    </app-not-found-data>\r\n  </div>\r\n  <div class=\"flex flex-0 flex-col\" *ngIf=\"length > 0\">\r\n    <mat-paginator class=\"flex justify-end border-t\" [length]=\"length\" [pageSize]=\"pageSize\"\r\n      [pageSizeOptions]=\"pageSizeOptions\" (page)=\"paginacao($event)\" aria-label=\"Select page\">\r\n    </mat-paginator>\r\n  </div>\r\n</div>\r\n","import { Component, Injector } from '@angular/core';\r\nimport { PerfilService } from '../../api/perfil.service';\r\nimport { Perfil, PerfilResponse } from '../../models/perfil.model';\r\nimport { BaseResourceListComponent } from 'app/shared/containers/base-resource-list/base-resource-list.component';\r\n\r\n@Component({\r\n  selector: 'app-perfil-list',\r\n  templateUrl: './perfil-list.component.html',\r\n  styleUrls: ['./perfil-list.component.scss'],\r\n})\r\nexport class PerfilListComponent extends BaseResourceListComponent<\r\n  Perfil,\r\n  PerfilResponse\r\n> {\r\n  constructor(\r\n    protected injector: Injector,\r\n    protected perfilService: PerfilService\r\n  ) {\r\n    super(injector, perfilService);\r\n  }\r\n}\r\n","import { BaseResourceModel } from 'app/shared/models/base-resource.model';\r\n\r\nexport class Perfil extends BaseResourceModel {\r\n  constructor(public id?: number, public nome?: string) {\r\n    super();\r\n  }\r\n}\r\n\r\nexport class PerfilResponse {\r\n  constructor(\r\n    public content?: Perfil[],\r\n    public totalElements?: number,\r\n    public size?: number,\r\n    public numberOfElements?: number\r\n  ) {}\r\n}\r\n","import { Component, Injector } from '@angular/core';\r\nimport { Validators } from '@angular/forms';\r\nimport { PerfilService } from '../../api/perfil.service';\r\nimport { Perfil, PerfilResponse } from '../../models/perfil.model';\r\nimport { BaseResourceFormComponent } from 'app/shared/containers/base-resource-form';\r\n\r\n@Component({\r\n  selector: 'app-perfil-form',\r\n  templateUrl: './perfil-form.component.html',\r\n  styleUrls: ['./perfil-form.component.scss'],\r\n})\r\nexport class PerfilFormComponent extends BaseResourceFormComponent<\r\n  Perfil,\r\n  PerfilResponse\r\n> {\r\n  constructor(\r\n    protected perfilService: PerfilService,\r\n    protected injector: Injector\r\n  ) {\r\n    super(injector, new Perfil(), perfilService);\r\n  }\r\n\r\n  protected buildResourceForm() {\r\n    this.resourceForm = this.formBuilder.group({\r\n      nome: [null, [Validators.required, Validators.minLength(2)]],\r\n    });\r\n  }\r\n\r\n  protected createPageTitle(): string {\r\n    return 'Cadastro de Novo Perfil';\r\n  }\r\n\r\n  protected editionPageTitle(): string {\r\n    const perfilNome = this.resource.nome || '';\r\n    return 'Editando perfil: ' + perfilNome;\r\n  }\r\n}\r\n","<div class=\"flex flex-col flex-auto min-w-0\">\r\n  <div class=\"flex-auto p-6 sm:p-10\">\r\n    <div class=\"bg-card rounded-2xl shadow overflow-hidden\">\r\n      <form [formGroup]=\"resourceForm\" class=\"m-4\">\r\n        <!-- Section -->\r\n        <div class=\"w-full\">\r\n          <div class=\"text-xl\">{{ pageTitle }}</div>\r\n        </div>\r\n        <div class=\"grid sm:grid-cols-4 gap-6 w-full mt-8\">\r\n          <!-- Name -->\r\n          <div class=\"sm:col-span-4\">\r\n            <mat-form-field class=\"fuse-mat-no-subscript w-full\">\r\n              <mat-label>Nome Perfil</mat-label>\r\n              <mat-icon class=\"icon-size-5\" [svgIcon]=\"'heroicons_outline:view-grid'\" matPrefix></mat-icon>\r\n              <input id=\"nome_id\" [formControlName]=\"'nome'\" matInput placeholder=\"informa o nome da perfil\" />\r\n            </mat-form-field>\r\n            <app-form-field-error [form-control]=\"resourceForm.get('nome')\"></app-form-field-error>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Divider -->\r\n        <div class=\"mt-11 mb-10 border-t\"></div>\r\n\r\n        <!-- Actions -->\r\n        <div class=\"flex items-center justify-end\">\r\n          <a routerLink=\"/perfil\" routerLinkActive=\"router-link-active\">\r\n            <button class=\"fuse-mat-button-rounded mat-flat-button mat-button-base\" mat-stroked-button type=\"button\">\r\n              Cancelar\r\n            </button>\r\n          </a>\r\n\r\n          <button class=\"ml-4 fuse-mat-button-rounded mat-flat-button mat-button-base mat-primary\" mat-flat-button\r\n            type=\"button\" [disabled]=\"resourceForm.invalid\" (click)=\"submitForm()\">\r\n            Salvar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Route, RouterModule } from '@angular/router';\r\nimport { PerfilListComponent } from './containers/perfil-list/perfil-list.component';\r\nimport { PerfilFormComponent } from './containers/perfil-form/perfil-form.component';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\n\r\nconst routes: Route[] = [\r\n  { path: '', component: PerfilListComponent },\r\n  { path: 'novo', component: PerfilFormComponent },\r\n  { path: ':id/editar', component: PerfilFormComponent },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [PerfilListComponent, PerfilFormComponent],\r\n  imports: [CommonModule, RouterModule.forChild(routes), SharedModule],\r\n})\r\nexport class PerfilModule {}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found-data',\r\n  templateUrl: './not-found-data.component.html',\r\n  styleUrls: ['./not-found-data.component.scss'],\r\n})\r\nexport class NotFoundDataComponent {\r\n  @Input('mensagem') mensagem: string;\r\n}\r\n","<div class=\"flex flex-col w-full h-full items-center justify-center border-t-2 border-gray-200\">\r\n  <img src=\"assets/icons/searching.svg\" class=\"w-64 h-64\" alt=\"\">\r\n  <p class=\"mt-2 text-lg md:text-2xl font-medium tracking-tight text-center text-secondary\">{{ mensagem }}</p>\r\n</div>\r\n","<div\r\n  class=\"relative flex flex-col flx-col-0 sm:flex-row flex-0 sm:items-center sm:justify-between py-8 px-6 md:px-8 border-b\">\r\n  <div class=\"text-4xl font-extrabold tracking-tight\">{{ pageTitle }}</div>\r\n\r\n  <div class=\"flex flex-col sm:flex-row items-start shrink-0 sm:items-center mt-6 sm:mt-0 sm:ml-4\">\r\n    <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded min-w-64\" *ngIf=\"showSearch\">\r\n      <mat-icon class=\"icon-size-5\" matPrefix [svgIcon]=\"'heroicons_solid:search'\"></mat-icon>\r\n      <input matInput id=\"searchPerfil\" #temoPesquisa (keyup)=\"filtrar(temoPesquisa.value)\" [autocomplete]=\"'off'\"\r\n        [placeholder]=\"placeholder\" />\r\n    </mat-form-field>\r\n    <!-- Add product button -->\r\n    <a [routerLink]=\"['novo']\" routerLinkActive=\"router-link-active\" *ngIf=\"showButton\"\r\n      class=\"mat-focus-indicator mt-2 fuse-mat-button-rounded mat-flat-button mat-button-base mat-accent m-1 text-1xl\"\r\n      mat-flat-button>\r\n      <span class=\"p-3 flex flex-row items-center\">\r\n        <mat-icon class=\"icon-size-5\" [svgIcon]=\"'heroicons_outline:plus'\"></mat-icon>\r\n        Cadastrar\r\n      </span>\r\n    </a>\r\n  </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-header',\r\n  templateUrl: './page-header.component.html',\r\n  styleUrls: ['./page-header.component.scss'],\r\n})\r\nexport class PageHeaderComponent implements OnInit {\r\n  @Input('page-title') pageTitle: string = '';\r\n  @Input('show-button') showButton: boolean = true;\r\n  @Input('show-search') showSearch: boolean = true;\r\n  @Input('placeholder-text') placeholder: string = '';\r\n\r\n  @Output() pesquisar = new EventEmitter();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  filtrar(termo: string): void {\r\n    this.pesquisar.emit(termo);\r\n  }\r\n}\r\n","import {\r\n  AfterContentChecked,\r\n  Component,\r\n  Inject,\r\n  Injector,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { FormBuilder, UntypedFormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport toastr from 'toastr';\r\n\r\nimport { BaseResourceModel } from 'app/shared/models/base-resource.model';\r\nimport { BaseResourceService } from 'app/shared/services/base-resource.service';\r\n\r\n@Component({\r\n  template: '',\r\n})\r\nexport abstract class BaseResourceFormComponent<T extends BaseResourceModel, R>\r\n  implements OnInit, AfterContentChecked\r\n{\r\n  currentAction: string;\r\n  resourceForm: UntypedFormGroup;\r\n  pageTitle: string;\r\n\r\n  protected route: ActivatedRoute;\r\n  protected router: Router;\r\n  protected formBuilder: FormBuilder;\r\n\r\n  constructor(\r\n    protected injecto: Injector,\r\n    @Inject('resource') protected resource: T,\r\n    protected resourceService: BaseResourceService<T, R>\r\n  ) {\r\n    this.route = this.injecto.get(ActivatedRoute);\r\n    this.router = this.injecto.get(Router);\r\n    this.formBuilder = this.injecto.get(FormBuilder);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setCurrentAction();\r\n    this.buildResourceForm();\r\n    this.loadResource();\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    this.setPageTitle();\r\n  }\r\n\r\n  submitForm() {\r\n    if (this.resourceForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    const resource: T = this.resourceForm.value;\r\n    if (this.currentAction === 'novo') {\r\n      this.resourceService.insert(resource).subscribe(\r\n        () => {\r\n          toastr.success('Dado cadastrado com sucesso!', 'Sucesso', {\r\n            timeOut: 10000,\r\n            progressBar: true,\r\n            closeButton: true,\r\n          });\r\n          const baseComponentPath: string =\r\n            this.route.snapshot.parent.url[0].path;\r\n\r\n          this.router.navigate([baseComponentPath]);\r\n        },\r\n        (error) => {\r\n          toastr.error(\r\n            'Não foi possível carregar os dados',\r\n            error.error.error,\r\n            {\r\n              timeOut: 10000,\r\n              progressBar: true,\r\n              closeButton: true,\r\n            }\r\n          );\r\n        }\r\n      );\r\n      return;\r\n    }\r\n\r\n    resource.id = this.resource.id;\r\n    this.resourceService.update(resource).subscribe(\r\n      () => {\r\n        toastr.success('Dado atualizado com sucesso!', 'Sucesso', {\r\n          timeOut: 10000,\r\n          progressBar: true,\r\n          closeButton: true,\r\n        });\r\n        const baseComponentPath: string =\r\n          this.route.snapshot.parent.url[0].path;\r\n\r\n        this.router.navigate([baseComponentPath]);\r\n      },\r\n      (error) => {\r\n        toastr.error('Não foi possível atualizar o dado', error.error.error, {\r\n          timeOut: 10000,\r\n          progressBar: true,\r\n          closeButton: true,\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  // PRIVATE METHODS\r\n  protected setCurrentAction() {\r\n    if (this.route.snapshot.url[0]?.path === 'novo') {\r\n      this.currentAction = 'novo';\r\n    } else {\r\n      this.currentAction = 'editar';\r\n    }\r\n  }\r\n\r\n  protected loadResource() {\r\n    if (this.currentAction === 'editar') {\r\n      const idResource = Number(this.route.snapshot.url[0]?.path);\r\n      this.resourceService.getById(idResource).subscribe(\r\n        (resource) => {\r\n          this.resource = resource;\r\n          this.resourceForm.patchValue(this.resource);\r\n        },\r\n        (error) => {\r\n          toastr.error(\r\n            'Não foi possível carregar os dados',\r\n            error.error.error,\r\n            {\r\n              timeOut: 10000,\r\n              progressBar: true,\r\n              closeButton: true,\r\n            }\r\n          );\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  protected setPageTitle() {\r\n    if (this.currentAction === 'novo') {\r\n      this.pageTitle = this.createPageTitle();\r\n    } else {\r\n      this.pageTitle = this.editionPageTitle();\r\n    }\r\n  }\r\n\r\n  protected createPageTitle(): string {\r\n    return 'Novo';\r\n  }\r\n\r\n  protected editionPageTitle(): string {\r\n    return 'Edição';\r\n  }\r\n\r\n  protected abstract buildResourceForm(): void;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AuthUtils } from 'app/core/auth/auth.utils';\r\nimport { ELocalStorage } from '../models/localstorage.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RulesService {\r\n  constructor() {}\r\n\r\n  temPermissao(rule: string): boolean {\r\n    const token = localStorage.getItem(ELocalStorage.TOKEN);\r\n    if (!token) {\r\n      return false;\r\n    }\r\n\r\n    const { ROLES } = AuthUtils.decodeToken(token);\r\n\r\n    if (Object(ROLES).find((permissao) => permissao == rule)) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n","import { Component, Injector, OnInit } from '@angular/core';\r\nimport { MatPaginatorIntl, PageEvent } from '@angular/material/paginator';\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { BaseResourceModel } from 'app/shared/models/base-resource.model';\r\nimport { IFilter } from 'app/shared/models/interface.model';\r\nimport { BaseResourceService } from 'app/shared/services/base-resource.service';\r\nimport { RulesService } from 'app/shared/services/rules.service';\r\nimport toastr from 'toastr';\r\n\r\n@Component({\r\n  template: '',\r\n})\r\nexport abstract class BaseResourceListComponent<T extends BaseResourceModel, R>\r\n  implements OnInit\r\n{\r\n  resources: T[] = [];\r\n\r\n  // MatPaginator Inputs\r\n  length = 0;\r\n  pageSize = 10;\r\n  pageSizeOptions: number[] = [5, 10, 25, 100];\r\n\r\n  // MatPaginator Output\r\n  pageEvent: PageEvent;\r\n  protected _fuseConfirmationService: FuseConfirmationService;\r\n  protected _matPaginatorIntl: MatPaginatorIntl;\r\n  protected _ruleService: RulesService;\r\n\r\n  constructor(\r\n    protected injecto: Injector,\r\n    protected resourceService: BaseResourceService<T, R>\r\n  ) {\r\n    this._fuseConfirmationService = this.injecto.get(FuseConfirmationService);\r\n    this._matPaginatorIntl = this.injecto.get(MatPaginatorIntl);\r\n    this._ruleService = this.injecto.get(RulesService);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.carregaInformacoesResource();\r\n    this._matPaginatorIntl.itemsPerPageLabel = 'Itens por página';\r\n  }\r\n\r\n  setPageSizeOptions(setPageSizeOptionsInput: string) {\r\n    if (setPageSizeOptionsInput) {\r\n      this.pageSizeOptions = setPageSizeOptionsInput\r\n        .split(',')\r\n        .map((str) => +str);\r\n    }\r\n  }\r\n\r\n  carregaInformacoesResource(): void {\r\n    const filtro: IFilter = {\r\n      filtro: '',\r\n      pagina: 0,\r\n      direcaoOrdenacao: 'DESC',\r\n      tamanho: 10,\r\n      ordenarPor: 'id',\r\n    };\r\n    this.resourceService.getAll(filtro).subscribe((data) => {\r\n      this.resources = data['content'];\r\n      this.length = data['totalElements'];\r\n      this.pageSize = data['size'];\r\n    });\r\n  }\r\n\r\n  excluir(resource: T): void {\r\n    const dialogRef = this._fuseConfirmationService.open({\r\n      title: `Deseja realmente excluir o item: ${resource.id}?`,\r\n      message: '',\r\n      icon: {\r\n        show: true,\r\n        name: 'heroicons_outline:exclamation',\r\n        color: 'warn',\r\n      },\r\n      actions: {\r\n        confirm: {\r\n          show: true,\r\n          label: 'Confirmar',\r\n          color: 'warn',\r\n        },\r\n        cancel: {\r\n          show: true,\r\n          label: 'Cancelar',\r\n        },\r\n      },\r\n      dismissible: false,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 'confirmed') {\r\n        this.resourceService.delete(resource.id).subscribe(\r\n          (res) => {\r\n            toastr.success(`Item excluído com sucesso!`, '', {\r\n              timeOut: 10000,\r\n              progressBar: true,\r\n              closeButton: true,\r\n            });\r\n            this.carregaInformacoesResource();\r\n          },\r\n          (error) => {\r\n            toastr.error(\r\n              'Não foi possível excluir o perfil',\r\n              error.error.error,\r\n              {\r\n                timeOut: 10000,\r\n                progressBar: true,\r\n                closeButton: true,\r\n              }\r\n            );\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  paginacao(event: Event): void {\r\n    this.pageSize = event['pageSize'];\r\n    const filtro: IFilter = {\r\n      filtro: '',\r\n      pagina: event['pageIndex'],\r\n      direcaoOrdenacao: 'DESC',\r\n      tamanho: this.pageSize,\r\n      ordenarPor: 'id',\r\n    };\r\n\r\n    this.resourceService.getAll(filtro).subscribe((data) => {\r\n      this.resources = data['content'];\r\n      this.length = data['totalElements'];\r\n      this.pageSize = data['size'];\r\n    });\r\n  }\r\n\r\n  filtrarResource(termo: string): void {\r\n    const filtro: IFilter = {\r\n      filtro: termo,\r\n      pagina: 0,\r\n      direcaoOrdenacao: 'DESC',\r\n      tamanho: 10,\r\n      ordenarPor: 'id',\r\n    };\r\n    this.resourceService.getAll(filtro).subscribe((data) => {\r\n      this.resources = data['content'];\r\n      this.length = data['totalElements'];\r\n      this.pageSize = data['size'];\r\n    });\r\n  }\r\n\r\n  validaPermissao(rule: string): boolean {\r\n    return this._ruleService.temPermissao(rule);\r\n  }\r\n}\r\n","export abstract class BaseResourceModel {\r\n  id?: number;\r\n}\r\n"],"x_google_ignoreList":[]}