{"version":3,"file":"61.a706faa810931876.js","mappings":"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","names":["RelatorioFormComponent","constructor","dialogRef","_formBuilder","this","ngOnInit","criarFormularioRelatorio","fecharDialog","filtrar","submitForm","close","form","invalid","console","log","value","group","nome","Validators","inicio","fim","Date","tipo","tipoRelatorio","i0","selectors","ctx","OrdemServicoService","BaseResourceService","injector","super","factory","OrdemservicoListComponent","BaseResourceListComponent","dialog","ordemServicoService","gerarRelatorio","open","data","visualizar","os","OrdemServico","BaseResourceModel","id","codigoSupergas","status","tipoServico","cliente","grupoServico","OrdemServicoGrupoServicoService","_http","getAll","get","env","apiPath","getById","ordemServiceId","grupoServiceId","insert","resource","post","update","put","ordemServico","delete","IdOrdemServico","idGrupo","OrdemservicoFormComponent","BaseResourceFormComponent","orderServicoService","_clienteService","_ordemServicoGrupoServicoService","filtro","pagina","direcaoOrdenacao","tamanho","ordenarPor","carregaClientes","_carregaOrdemServicoGrupoServico","resourceForm","subscribe","clientes","content","err","displayFn","total","forEach","gs","subTotal","buildResourceForm","formBuilder","currentAction","setValue","createPageTitle","editionPageTitle","source","interval","val","datadosCarregados","carregaQuantidadeESubTotal","map","x","res","quantidade","valorUnitario","routes","path","component","MY_DATE_FORMATS","parse","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","OrdemServicoModule","provide","MAT_DATE_FORMATS","useValue","imports","CommonModule","RouterModule","SharedModule","NotFoundDataComponent","PageHeaderComponent","EventEmitter","termo","pesquisar","emit","EEventosLocais","injecto","resourceService","route","ActivatedRoute","router","Router","FormBuilder","setCurrentAction","loadResource","ngAfterContentChecked","setPageTitle","toastr","timeOut","progressBar","closeButton","navigate","snapshot","parent","url","error","length","idResource","Number","patchValue","carregamentoDeDados","pageTitle","RulesService","temPermissao","rule","token","localStorage","getItem","ELocalStorage","ROLES","AuthUtils","Object","find","permissao","_fuseConfirmationService","FuseConfirmationService","_matPaginatorIntl","MatPaginatorIntl","_ruleService","carregaInformacoesResource","itemsPerPageLabel","setPageSizeOptions","setPageSizeOptionsInput","pageSizeOptions","split","str","resources","totalElements","pageSize","size","excluir","title","message","icon","show","name","color","actions","confirm","label","cancel","dismissible","afterClosed","result","paginacao","event","pageIndex","filtrarResource","validaPermissao"],"sourceRoot":"webpack:///","sources":["./src/app/modules/ccos/ordem-servico/containers/relatorio-form/relatorio-form.component.ts","./src/app/modules/ccos/ordem-servico/containers/relatorio-form/relatorio-form.component.html","./src/app/modules/ccos/ordem-servico/api/ordem-servico.service.ts","./src/app/modules/ccos/ordem-servico/containers/ordemservico-list/ordemservico-list.component.html","./src/app/modules/ccos/ordem-servico/containers/ordemservico-list/ordemservico-list.component.ts","./src/app/modules/ccos/ordem-servico/models/ordem-servico.model.ts","./src/app/modules/ccos/ordem-servico/api/ordem-servico-grupo-servico.service.ts","./src/app/modules/ccos/ordem-servico/containers/ordemservico-form/ordemservico-form.component.html","./src/app/modules/ccos/ordem-servico/containers/ordemservico-form/ordemservico-form.component.ts","./src/app/modules/ccos/ordem-servico/ordem-servico.module.ts","./src/app/shared/components/not-found-data/not-found-data.component.ts","./src/app/shared/components/not-found-data/not-found-data.component.html","./src/app/shared/components/page-header/page-header.component.html","./src/app/shared/components/page-header/page-header.component.ts","./src/app/shared/models/eventos.enum.ts","./src/app/shared/containers/base-resource-form/BaseResourceFormComponent.ts","./src/app/shared/services/rules.service.ts","./src/app/shared/containers/base-resource-list/base-resource-list.component.ts","./src/app/shared/models/base-resource.model.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {\n  UntypedFormBuilder,\n  UntypedFormGroup,\n  Validators,\n} from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\n\nimport toastr from 'toastr';\n\n@Component({\n  selector: 'app-relatorio-form',\n  templateUrl: './relatorio-form.component.html',\n  styleUrls: ['./relatorio-form.component.scss'],\n})\nexport class RelatorioFormComponent implements OnInit {\n  form: UntypedFormGroup;\n  pageTitle: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<RelatorioFormComponent>,\n\n    private _formBuilder: UntypedFormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.criarFormularioRelatorio();\n  }\n\n  fecharDialog(filtrar: boolean): void {\n    if (!filtrar) {\n      this.dialogRef.close();\n      return;\n    }\n\n    this.submitForm();\n  }\n\n  submitForm() {\n    if (this.form.invalid) {\n      return;\n    }\n\n    console.log(this.form.value)\n  }\n\n  // PRIVATE METHODS\n  private criarFormularioRelatorio() {\n    this.form = this._formBuilder.group({\n      nome: [null, [Validators.required, Validators.minLength(2)]],\n      inicio: [null, [Validators.required]],\n      fim: [new Date(), [Validators.required]],\n      tipo: ['TODOS', [Validators.required]],\n      tipoRelatorio: ['DETALHADO', [Validators.required]],\n    });\n  }\n}\n","<div class=\"flex flex-col max-w-240 md:min-w-160 max-h-screen -m-6\">\n  <!-- HEADER -->\n  <div class=\"flex flex-0 items-center justify-between h-16 pr-3 sm:pr-5 pl-6 sm:pl-8 bg-primary text-on-primary\">\n    <div class=\"text-lg font-medium\">Relatório Ordem de Serviço</div>\n    <button mat-icon-button (click)=\"fecharDialog(false)\" [tabIndex]=\"-1\">\n      <mat-icon class=\"text-current\" [svgIcon]=\"'heroicons_outline:x'\"></mat-icon>\n    </button>\n  </div>\n\n  <!-- body -->\n  <div class=\"flex flex-col flex-auto p-6 sm:p-8 overflow-y-auto\">\n    <form [formGroup]=\"form\">\n      <div class=\"grid sm:grid-cols-4 gap-6 w-full\">\n\n        <!-- Nome -->\n        <div class=\"sm:col-span-4\">\n          <mat-form-field class=\"p-1 w-full\">\n\n            <mat-label>Nome Relatório</mat-label>\n            <input id=\"nome\" [formControlName]=\"'nome'\" matInput placeholder=\"Informar descrição do objeto\" />\n          </mat-form-field>\n          <app-form-field-error [form-control]=\"form.get('nome')\"></app-form-field-error>\n\n          <mat-form-field class=\"p-1 w-full\">\n            <mat-label>Data Início</mat-label>\n            <input matInput formControlName=\"inicio\" [matDatepicker]=\"data_inicio\">\n            <mat-datepicker-toggle matPrefix [for]=\"data_inicio\"></mat-datepicker-toggle>\n            <mat-datepicker #data_inicio></mat-datepicker>\n            <span matSuffix class=\"p-1\">\n              <app-form-field-error [form-control]=\"form.get('inicio')\"></app-form-field-error>\n            </span>\n          </mat-form-field>\n\n          <mat-form-field class=\"p-1 w-full\">\n            <mat-label>Data Fim</mat-label>\n            <input matInput formControlName=\"fim\" [matDatepicker]=\"data_fim\">\n            <mat-datepicker-toggle matPrefix [for]=\"data_fim\"></mat-datepicker-toggle>\n            <mat-datepicker #data_fim></mat-datepicker>\n          </mat-form-field>\n\n          <mat-form-field class=\"p-1 w-full\">\n            <mat-label>Tipo</mat-label>\n            <mat-select id=\"tipo\" formControlName=\"tipo\" [placeholder]=\"'Tipo'\">\n              <mat-option value=\"INSTALACAO\">INSTALAÇÃO</mat-option>\n              <mat-option value=\"ASSISTENCIA\">ASSISTENCIA</mat-option>\n              <mat-option value=\"TODOS\">TODOS</mat-option>\n            </mat-select>\n          </mat-form-field>\n\n          <mat-form-field class=\"p-1 w-full\">\n            <mat-label>Tipo de relatório</mat-label>\n            <mat-select id=\"tipoRelatorio\" formControlName=\"tipoRelatorio\" [placeholder]=\"'Tipo de relatorio'\">\n              <mat-option value=\"DETALHADO\">DETALHADO</mat-option>\n              <mat-option value=\"RESUMIDO\">RESUMIDO</mat-option>\n            </mat-select>\n          </mat-form-field>\n\n        </div>\n\n      </div>\n    </form>\n\n    <div class=\"flex flex-col sm:flex-row sm:items-center justify-between mt-4 sm:mt-6 border-t\">\n      <div class=\"-ml-2\"></div>\n      <div class=\"flex items-center mt-4 sm:mt-0\">\n        <button [disabled]=\"form.invalid\"\n          class=\"ml-2 mt-3 fuse-mat-button-rounded mat-flat-button mat-button-base mat-primary\" id=\"btn-salvar-objeto\"\n          (click)=\"fecharDialog(true)\" type=\"button\" mat-button>Gerar</button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable, Injector } from '@angular/core';\nimport { BaseResourceService } from 'app/shared/services/base-resource.service';\nimport { OrdemServico, OrdemServicoResponse } from '../models/ordem-servico.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdemServicoService extends BaseResourceService<OrdemServico, OrdemServicoResponse> {\n  constructor(protected injector: Injector) {\n    super('/ordemServicos', injector);\n  }\n}\n","<div class=\"absolute inset-0 flex flex-col min-w-0 overflow-hidden bg-card dark:bg-transparent\">\n  <div class=\"flex flex-col flex-auto min-w-0 overflow-y-auto\" cdkScrollable>\n\n    <app-page-header [show-button]=\"true\" page-title=\"Ordem De Serviços\" placeholder-text=\"Buscar por nome do cliente\"\n      (pesquisar)=\"filtrarResource($event)\">\n    </app-page-header>\n\n    <div class=\"w-full flex items-center justify-end\">\n      <button (click)=\"gerarRelatorio()\"\n        class=\"mat-focus-indicator mt-2 fuse-mat-button-rounded mat-flat-button mat-button-base mat-primary m-1 text-1xl\"\n        mat-flat-button>\n        <span class=\"p-3 flex flex-row items-center\">\n          <mat-icon class=\"icon-size-5 mr-1\" [svgIcon]=\"'heroicons_outline:trending-up'\"></mat-icon>\n          Gerar Relatório\n        </span>\n      </button>\n\n    </div>\n    <div class=\"my-2 border-b\"></div>\n\n    <!-- Page body -->\n    <div class=\"flex flex-col flex-auto min-w-0 overflow-y-auto\" cdkScrollable *ngIf=\"length > 0\">\n      <mat-table [dataSource]=\"resources\">\n        <!-- User name Definition -->\n        <ng-container matColumnDef=\"codigoSupergas\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> Cod. Supergás </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            {{ row.codigoSupergas }}\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"status\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> Status </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            {{ row.status ? 'Aberto' : 'Fechado' }}\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"cliente\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> Cliente </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            {{ row.cliente.nome }}\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"tipoServico\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> Tipo de Serviço </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            {{ row.tipoServico }}\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"data\">\n          <mat-header-cell *matHeaderCellDef> Data </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\"> {{ row.data | date: 'd/M/y' }} </mat-cell>\n        </ng-container>\n\n\n\n        <ng-container matColumnDef=\"acoes\">\n          <mat-header-cell *matHeaderCellDef> Ações </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            <span *ngIf=\"!validaPermissao('MANTER_PERFIL')\">-</span>\n            <span class=\"mr-2 cursor-pointer\" [routerLink]=\"[row.id, 'editar']\"\n              *ngIf=\"validaPermissao('MANTER_PERFIL')\">\n              <mat-icon class=\"text-accent dark:text-accent-300\" svgIcon=\"heroicons_outline:pencil-alt\"></mat-icon>\n            </span>\n            <span (click)=\"visualizar(row)\" class=\"cursor-pointer\" *ngIf=\"validaPermissao('MANTER_PERFIL')\">\n              <mat-icon lass=\"text-accent dark:text-accent-300\" svgIcon=\"heroicons_outline:eye\"></mat-icon>\n            </span>\n          </mat-cell>\n        </ng-container>\n\n        <!-- Header and Row Declarations -->\n        <mat-header-row *matHeaderRowDef=\"['codigoSupergas', 'cliente', 'tipoServico', 'data', 'status', 'acoes']\">\n        </mat-header-row>\n        <mat-row *matRowDef=\"let row; columns: ['codigoSupergas', 'cliente', 'tipoServico', 'data', 'status', 'acoes']\">\n        </mat-row>\n      </mat-table>\n    </div>\n\n    <!-- NENHUM DADO ENCONTRADO -->\n    <app-not-found-data class=\"h-full\" mensagem=\"Nenhum registro de perfils encontrado!\" *ngIf=\"length <= 0\">\n    </app-not-found-data>\n  </div>\n  <div class=\"flex flex-0 flex-col\" *ngIf=\"length > 0\">\n    <mat-paginator class=\"flex justify-end border-t\" [length]=\"length\" [pageSize]=\"pageSize\"\n      [pageSizeOptions]=\"pageSizeOptions\" (page)=\"paginacao($event)\" aria-label=\"Select page\">\n    </mat-paginator>\n  </div>\n</div>\n","import { Component, Injector, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BaseResourceListComponent } from 'app/shared/containers/base-resource-list/base-resource-list.component';\nimport { OrdemServicoService } from '../../api/ordem-servico.service';\nimport {\n  OrdemServico,\n  OrdemServicoResponse,\n} from '../../models/ordem-servico.model';\nimport { RelatorioFormComponent } from '../relatorio-form/relatorio-form.component';\n\n@Component({\n  selector: 'app-ordemservico-list',\n  templateUrl: './ordemservico-list.component.html',\n  styleUrls: ['./ordemservico-list.component.scss'],\n})\nexport class OrdemservicoListComponent extends BaseResourceListComponent<\n  OrdemServico,\n  OrdemServicoResponse\n> {\n  constructor(\n    public dialog: MatDialog,\n    protected injector: Injector,\n    protected ordemServicoService: OrdemServicoService\n  ) {\n    super(injector, ordemServicoService);\n  }\n\n  gerarRelatorio(): void {\n    this.dialog.open(RelatorioFormComponent, {\n      data: {  },\n    });\n  }\n\n  visualizar(os: OrdemServico): void {\n    console.log('OS id => ', os)\n  }\n}\n","import { BaseResourceModel } from 'app/shared/models/base-resource.model';\n\nexport class OrdemServico extends BaseResourceModel {\n  constructor(\n    public id?: number,\n    public codigoSupergas?: string,\n    public data?: string,\n    public status?: number,\n    public tipoServico?: string,\n    public cliente?: ICliente,\n    public grupoServico?: IGrupoServico[]\n  ) {\n    super();\n  }\n}\n\nexport class OrdemServicoResponse {\n  constructor(\n    public content?: OrdemServico[],\n    public totalElements?: number,\n    public size?: number,\n    public numberOfElements?: number\n  ) {}\n}\n\nexport interface IGrupoServico {\n  id: number;\n  codigoSapItem: number;\n  descSapItem: string;\n  valorUnitario: number;\n  descServico: string;\n  tipoServico: string;\n  unidadeGrupoServico: IUnidadeGrupoServico;\n  tipoGrupoServico: ITipoGrupoServico;\n  quantidade?: number;\n  subTotal?: number;\n}\n\nexport interface IUnidadeGrupoServico {\n  id: number;\n  nome: string;\n}\n\nexport interface ITipoGrupoServico {\n  id: number;\n  descricao: string;\n}\n\nexport interface ICliente {\n  id: number;\n  codigoSupergas: string;\n  nome: string;\n  enderecos: IEndereco[];\n  cnpj: string;\n  email: string;\n  telefone: string;\n  observacoes: string;\n}\n\nexport class IEndereco {\n  id: number;\n  logradouro: string;\n  numero: number;\n  complemento: string;\n  bairro: string;\n  cep: string;\n  cidade: Cidade;\n  cidadeId: number;\n  clienteId: number;\n}\n\nexport class Cidade {\n  constructor(\n    public id?: number,\n    public nome?: string,\n    public estado?: Estado\n  ) {}\n}\n\nexport class Estado {\n  constructor(\n    public id?: number,\n    public nome?: string,\n    public codigoUf?: number,\n    public uf?: string,\n    public regiao?: number\n  ) {}\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment as env } from 'environments/environment';\nimport { IOrdemServicoGrupoServico, IRequestOrdemServicoGrupoServico } from '../models/ordem-servico-grupo-servico.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrdemServicoGrupoServicoService {\n  apiPath: string = '/ordemServicogrupoServico';\n\n  constructor(private _http: HttpClient) {}\n\n  getAll(): Observable<IOrdemServicoGrupoServico[]> {\n    return this._http.get<IOrdemServicoGrupoServico[]>(\n      `${env.api}${this.apiPath}`\n    );\n  }\n\n  getById(ordemServiceId: number, grupoServiceId: number): Observable<IOrdemServicoGrupoServico> {\n    return this._http.get<IOrdemServicoGrupoServico>(`${env.api}${this.apiPath}/${ordemServiceId}/${grupoServiceId}`);\n  }\n\n  insert(resource: IRequestOrdemServicoGrupoServico): Observable<null> {\n    return this._http.post<null>(`${env.api}${this.apiPath}`, resource);\n  }\n\n  update(resource: IOrdemServicoGrupoServico): Observable<null> {\n    return this._http.put<null>(\n      `${env.api}${this.apiPath}/${resource.id.ordemServico.id}/${resource.id.grupoServico.id}`,\n      resource\n    );\n  }\n\n  delete(IdOrdemServico: number, idGrupo: number): Observable<null> {\n    return this._http.delete<null>(`${env.api}${this.apiPath}/${IdOrdemServico}/${idGrupo}`);\n  }\n}\n","<div class=\"flex flex-col flex-auto min-w-0\">\n  <div class=\"flex-auto p-6 sm:p-10\">\n    <div class=\"bg-card rounded-2xl shadow overflow-hidden\">\n      <form [formGroup]=\"resourceForm\" class=\"m-4\">\n        <!-- Section -->\n        <div class=\"w-full\">\n          <div class=\"text-xl\">{{ pageTitle }}</div>\n        </div>\n        <div class=\"grid sm:grid-cols-4 gap-6 w-full mt-8\">\n          <!-- Name -->\n          <div class=\"sm:col-span-4\">\n            <mat-form-field class=\"fuse-mat-no-subscript w-full p-1\">\n              <mat-label>Cliente</mat-label>\n\n              <input id=\"cliente\" type=\"text\" matInput [formControlName]=\"'cliente'\" [matAutocomplete]=\"auto\" #cliente\n                (keyup)=\"carregaClientes(cliente.value)\" />\n              <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn\">\n                <mat-option *ngFor=\"let cliente of clientes\" [value]=\"cliente\">\n                  {{ cliente.nome }}\n                </mat-option>\n              </mat-autocomplete>\n            </mat-form-field>\n\n            <!-- Cliente -->\n            <div *ngIf=\"resourceForm.get('cliente').valid\"\n              class=\"flex flex-col my-2 flex-auto p-6 bg-card shadow rounded-2xl overflow-hidden dark:bg-accent-700 bg-accent-100\">\n              <div class=\"flex items-start justify-between\">\n                <div class=\"text-lg font-medium tracking-tight leading-6 truncate\">\n                  {{ resourceForm.get('cliente').value['nome'] }}\n                </div>\n              </div>\n\n              <div class=\"flex flex-col mt-2\">\n                <div class=\"flex item-center\">\n                  <mat-icon class=\"icon-size-5 text-hint mr-1\" [svgIcon]=\"'heroicons_solid:user'\"></mat-icon>\n                  <span>\n                    <strong>Cod. Supergás:</strong> {{ resourceForm.get('cliente').value['codigoSupergas'] }}\n                  </span>\n                </div>\n                <span class=\"ml-6\">\n                  <strong>CNPJ: </strong> {{ resourceForm.get('cliente').value['cnpj'] }}\n                </span>\n                <span class=\"ml-6\">\n                  <strong>E-mail: </strong> {{ resourceForm.get('cliente').value['email'] }}\n                </span>\n\n                <span class=\"ml-6\">\n                  <strong>Telefone: </strong> {{ resourceForm.get('cliente').value['telefone'] }}\n                </span>\n\n                <span class=\"ml-6\">\n                  <strong>Observações: </strong> {{ resourceForm.get('cliente').value['observacoes'] }}\n                </span>\n\n              </div>\n            </div>\n\n            <mat-form-field class=\"fuse-mat-no-subscript w-full p-1\">\n              <mat-label>Data</mat-label>\n              <input matInput formControlName=\"data\" [matDatepicker]=\"data_os\">\n              <mat-datepicker-toggle matPrefix [for]=\"data_os\"></mat-datepicker-toggle>\n              <mat-datepicker #data_os></mat-datepicker>\n              <span matSuffix class=\"p-1\">\n                <app-form-field-error [form-control]=\"resourceForm.get('data')\"></app-form-field-error>\n              </span>\n            </mat-form-field>\n\n            <div class=\"w-full\">\n              <div\n                class=\"flex items-center justify-center my-3 pr-2 border-2 border-dashed border-gray-300 rounded-2xl cursor-pointer\">\n                <h1 class=\"text-2xl py-2\">+ Adicionar Serviço</h1>\n              </div>\n\n              <fuse-alert *ngIf=\"resource?.grupoServico?.length <= 0\" class=\"mt-2\" [type]=\"'warning'\"\n                [appearance]=\"'outline'\">\n                Nenhum <strong>serviço</strong> cadastrado ainda!\n              </fuse-alert>\n            </div>\n          </div>\n        </div>\n\n\n        <div class=\"overflow-x-auto relative shadow-md sm:rounded-lg mt-4\"\n          *ngIf=\"currentAction === 'editar' || resource?.grupoServico?.length > 0\">\n          <table class=\"w-full text-md text-left text-gray-500 dark:text-gray-400\">\n            <thead class=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\n              <tr>\n                <th scope=\"col\" class=\"py-3 px-6\">\n                  Código Sap\n                </th>\n                <th scope=\"col\" class=\"py-3 px-6\">\n                  Descrição Sap\n                </th>\n                <th scope=\"col\" class=\"py-3 px-6\">\n                  Valor Unitário\n                </th>\n                <th scope=\"col\" class=\"py-3 px-6\">\n                  Unidade Grupo Serviço\n                </th>\n                <th scope=\"col\" class=\"py-3 px-6\">\n                  Tipo Grupo Serviço\n                </th>\n                <th scope=\"col\" class=\"py-3 px-6\">\n                  Quantidade\n                </th>\n                <th scope=\"col\" class=\"py-3 px-6\">\n                  SubTotal\n                </th>\n                <th scope=\"col\" class=\"py-3 px-6\">\n                  Ação\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let gs of resource.grupoServico\"\n                class=\"bg-white border-b dark:bg-gray-900 dark:border-gray-700\">\n                <th scope=\"row\" class=\"py-4 px-6 font-medium text-gray-900 whitespace-nowrap dark:text-white\">\n                  {{ gs.codigoSapItem }}\n                </th>\n                <td class=\"py-4 px-6\">\n                  {{ gs.descSapItem }}\n                </td>\n                <td class=\"py-4 px-6\">\n                  {{ gs.valorUnitario | currency:'R$ ' }}\n                </td>\n                <td class=\"py-4 px-6\">\n                  {{ gs.unidadeGrupoServico.nome }}\n                </td>\n                <td class=\"py-4 px-6\">\n                  {{ gs.tipoServico }}\n                </td>\n                <td class=\"py-4 px-6\">\n                  {{ gs.quantidade ?? 0 }}\n                </td>\n                <td class=\"py-4 px-6\">\n                  {{ gs.subTotal | currency : 'R$ ' }}\n                </td>\n                <td class=\"py-4 px-6\">\n                  <span class=\"cursor-pointer\">\n                    <mat-icon class=\"text-warn-600\" svgIcon=\"heroicons_outline:trash\"></mat-icon>\n                  </span>\n                </td>\n              </tr>\n              <tr class=\"bg-white border-b dark:bg-gray-900 dark:border-gray-700 my-3\">\n                <td colspan=\"5\"></td>\n                <td>Total</td>\n                <td>{{ total | currency : 'R$ ' }}</td>\n                <td></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <!-- Divider -->\n        <div class=\"mt-11 mb-10 border-t\"></div>\n\n        <!-- Actions -->\n        <div class=\"flex items-center justify-end\">\n          <a routerLink=\"/ordem-servico\" routerLinkActive=\"router-link-active\">\n            <button class=\"fuse-mat-button-rounded mat-flat-button mat-button-base\" mat-stroked-button type=\"button\">\n              Cancelar\n            </button>\n          </a>\n\n          <button\n            *ngIf=\"currentAction === 'novo'\"\n            class=\"ml-4 fuse-mat-button-rounded mat-flat-button mat-button-base mat-primary\" mat-flat-button\n            type=\"button\" [disabled]=\"resourceForm.invalid\" (click)=\"submitForm()\">\n            Salvar\n          </button>\n\n          <button\n            *ngIf=\"currentAction === 'editar'\"\n            class=\"ml-4 fuse-mat-button-rounded mat-flat-button mat-button-base mat-primary\" mat-flat-button\n            type=\"button\" [disabled]=\"resourceForm.invalid\" (click)=\"submitForm()\">\n            Finalizar OS\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, Injector, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { ClienteService } from 'app/modules/ccos/cliente/api/cliente.service';\nimport { Cliente } from 'app/modules/ccos/cliente/models/cliente.model';\nimport { BaseResourceFormComponent } from 'app/shared/containers/base-resource-form';\nimport { IFilter } from 'app/shared/models/interface.model';\nimport { interval, map, Observable, startWith } from 'rxjs';\nimport { OrdemServicoGrupoServicoService } from '../../api/ordem-servico-grupo-servico.service';\nimport { OrdemServicoService } from '../../api/ordem-servico.service';\nimport {\n  OrdemServico,\n  OrdemServicoResponse,\n} from '../../models/ordem-servico.model';\n\n@Component({\n  selector: 'app-ordemservico-form',\n  templateUrl: './ordemservico-form.component.html',\n  styleUrls: ['./ordemservico-form.component.scss'],\n})\nexport class OrdemservicoFormComponent extends BaseResourceFormComponent<\n  OrdemServico,\n  OrdemServicoResponse\n> {\n  clientes: Cliente[] = [];\n\n  filtro: IFilter = {\n    filtro: '',\n    pagina: 0,\n    direcaoOrdenacao: 'DESC',\n    tamanho: 10,\n    ordenarPor: 'id',\n  };\n\n  datadosCarregados: boolean = false;\n\n  constructor(\n    protected orderServicoService: OrdemServicoService,\n    protected injector: Injector,\n    private _clienteService: ClienteService,\n    private _ordemServicoGrupoServicoService: OrdemServicoGrupoServicoService\n  ) {\n    super(injector, new OrdemServico(), orderServicoService);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.carregaClientes();\n    this._carregaOrdemServicoGrupoServico();\n  }\n\n  submitForm(): void {\n    console.log(this.resourceForm.value);\n  }\n\n  carregaClientes(nome: string = ''): void {\n    this.filtro.filtro = nome;\n    console.log(this.filtro);\n    this._clienteService.getAll(this.filtro).subscribe(\n      (clientes) => {\n        console.log(clientes);\n        this.clientes = clientes.content;\n      },\n      (err) => console.log(err)\n    );\n  }\n\n  displayFn(cliente: Cliente): string {\n    return cliente && cliente.nome ? cliente.nome : '';\n  }\n\n  get total(): number {\n    if (!this.resource.id) return 0;\n    let total: number = 0;\n    this.resource.grupoServico.forEach((gs) => (total = total + gs.subTotal));\n\n    return total;\n  }\n\n  // METHODS PROTECTED\n\n  protected buildResourceForm() {\n    this.resourceForm = this.formBuilder.group({\n      cliente: [null, [Validators.required]],\n      data: [null, [Validators.required]],\n    });\n\n    if (this.currentAction === 'novo') {\n      this.resourceForm.get('data').setValue(new Date());\n    }\n  }\n\n  protected createPageTitle(): string {\n    return 'Cadastro de Nova Ordem de Servico';\n  }\n\n  protected editionPageTitle(): string {\n    const orderServicoCodigo = this.resource.codigoSupergas || '';\n    return 'Editando Order de Servico: ' + orderServicoCodigo;\n  }\n\n  // METHODS PRIVATES\n\n  private _carregaOrdemServicoGrupoServico(): void {\n    const source = interval(500);\n\n    source.subscribe((val) => {\n      if (this.datadosCarregados) return;\n\n      if (!this.datadosCarregados && this.resource.id) {\n        this.datadosCarregados = true;\n        console.log(this.resource);\n        this.carregaQuantidadeESubTotal();\n      }\n    });\n  }\n\n  private carregaQuantidadeESubTotal(): void {\n    this.resource.grupoServico.map((x) => {\n      this._ordemServicoGrupoServicoService\n        .getById(this.resource.id, x.id)\n        .subscribe((res) => {\n          x.quantidade = res.quantidade;\n          x.subTotal = res.quantidade * x.valorUnitario;\n        });\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Route, RouterModule } from '@angular/router';\nimport { SharedModule } from 'app/shared/shared.module';\nimport { OrdemservicoListComponent } from './containers/ordemservico-list/ordemservico-list.component';\nimport { OrdemservicoFormComponent } from './containers/ordemservico-form/ordemservico-form.component';\nimport { RelatorioFormComponent } from './containers/relatorio-form/relatorio-form.component';\n\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\n\nconst routes: Route[] = [\n  { path: '', component: OrdemservicoListComponent },\n  { path: 'novo', component: OrdemservicoFormComponent },\n  { path: ':id/editar', component: OrdemservicoFormComponent },\n];\n\nexport const MY_DATE_FORMATS = {\n  parse: {\n    dateInput: 'DD/MM/YYYY',\n  },\n  display: {\n    dateInput: 'DD/MM/YYYY',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n\n@NgModule({\n  declarations: [\n    OrdemservicoListComponent,\n    OrdemservicoFormComponent,\n    RelatorioFormComponent,\n  ],\n  imports: [CommonModule, RouterModule.forChild(routes), SharedModule],\n  providers: [\n    { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS },\n  ]\n})\nexport class OrdemServicoModule { }\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found-data',\n  templateUrl: './not-found-data.component.html',\n  styleUrls: ['./not-found-data.component.scss'],\n})\nexport class NotFoundDataComponent {\n  @Input('mensagem') mensagem: string;\n}\n","<div class=\"flex flex-col w-full h-full items-center justify-center border-t-2 border-gray-200\">\n  <img src=\"assets/icons/searching.svg\" class=\"w-64 h-64\" alt=\"\">\n  <p class=\"mt-2 text-lg md:text-2xl font-medium tracking-tight text-center text-secondary\">{{ mensagem }}</p>\n</div>\n","<div\n  class=\"relative flex flex-col flx-col-0 sm:flex-row flex-0 sm:items-center sm:justify-between py-8 px-6 md:px-8 border-b\">\n  <div class=\"text-4xl font-extrabold tracking-tight\">{{ pageTitle }}</div>\n\n  <div class=\"flex flex-col sm:flex-row items-start shrink-0 sm:items-center mt-6 sm:mt-0 sm:ml-4\">\n    <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded min-w-64\" *ngIf=\"showSearch\">\n      <mat-icon class=\"icon-size-5\" matPrefix [svgIcon]=\"'heroicons_solid:search'\"></mat-icon>\n      <input matInput id=\"searchPerfil\" #temoPesquisa (keyup)=\"filtrar(temoPesquisa.value)\" [autocomplete]=\"'off'\"\n        [placeholder]=\"placeholder\" />\n    </mat-form-field>\n    <!-- Add product button -->\n    <a [routerLink]=\"['novo']\" routerLinkActive=\"router-link-active\" *ngIf=\"showButton\"\n      class=\"mat-focus-indicator mt-2 fuse-mat-button-rounded mat-flat-button mat-button-base mat-accent m-1 text-1xl\"\n      mat-flat-button>\n      <span class=\"p-3 flex flex-row items-center\">\n        <mat-icon class=\"icon-size-5\" [svgIcon]=\"'heroicons_outline:plus'\"></mat-icon>\n        Cadastrar\n      </span>\n    </a>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-page-header',\n  templateUrl: './page-header.component.html',\n  styleUrls: ['./page-header.component.scss'],\n})\nexport class PageHeaderComponent implements OnInit {\n  @Input('page-title') pageTitle: string = '';\n  @Input('show-button') showButton: boolean = true;\n  @Input('show-search') showSearch: boolean = true;\n  @Input('placeholder-text') placeholder: string = '';\n\n  @Output() pesquisar = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  filtrar(termo: string): void {\n    this.pesquisar.emit(termo);\n  }\n}\n","export enum EEventosLocais {\n  CARREGAMENTO_DADOS_API = 'carregamento-dados-api',\n}\n","import {\n  AfterContentChecked,\n  Component,\n  EventEmitter,\n  Inject,\n  Injector,\n  OnInit,\n} from '@angular/core';\nimport { FormBuilder, UntypedFormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport toastr from 'toastr';\n\nimport { BaseResourceModel } from 'app/shared/models/base-resource.model';\nimport { BaseResourceService } from 'app/shared/services/base-resource.service';\nimport { EEventosLocais } from 'app/shared/models/eventos.enum';\n\n@Component({\n  template: '',\n})\nexport abstract class BaseResourceFormComponent<T extends BaseResourceModel, R>\n  implements OnInit, AfterContentChecked\n{\n  currentAction: string;\n  resourceForm: UntypedFormGroup;\n  pageTitle: string;\n\n  protected route: ActivatedRoute;\n  protected router: Router;\n  protected formBuilder: FormBuilder;\n\n  carregamentoDeDados = new EventEmitter()\n\n  constructor(\n    protected injecto: Injector,\n    @Inject('resource') protected resource: T,\n    protected resourceService: BaseResourceService<T, R>\n  ) {\n    this.route = this.injecto.get(ActivatedRoute);\n    this.router = this.injecto.get(Router);\n    this.formBuilder = this.injecto.get(FormBuilder);\n  }\n\n  ngOnInit(): void {\n    this.setCurrentAction();\n    this.buildResourceForm();\n    this.loadResource();\n  }\n\n  ngAfterContentChecked(): void {\n    this.setPageTitle();\n  }\n\n  submitForm() {\n    if (this.resourceForm.invalid) {\n      return;\n    }\n\n    const resource: T = this.resourceForm.value;\n    if (this.currentAction === 'novo') {\n      this.resourceService.insert(resource).subscribe(\n        () => {\n          toastr.success('Dado cadastrado com sucesso!', 'Sucesso', {\n            timeOut: 10000,\n            progressBar: true,\n            closeButton: true,\n          });\n          const baseComponentPath: string =\n            this.route.snapshot.parent.url[0].path;\n\n          this.router.navigate([baseComponentPath]);\n        },\n        (error) => {\n          toastr.error(\n            'Não foi possível carregar os dados',\n            error.error.error,\n            {\n              timeOut: 10000,\n              progressBar: true,\n              closeButton: true,\n            }\n          );\n        }\n      );\n      return;\n    }\n\n    resource.id = this.resource.id;\n    this.resourceService.update(resource).subscribe(\n      () => {\n        toastr.success('Dado atualizado com sucesso!', 'Sucesso', {\n          timeOut: 10000,\n          progressBar: true,\n          closeButton: true,\n        });\n        const baseComponentPath: string =\n          this.route.snapshot.parent.url[0].path;\n\n        this.router.navigate([baseComponentPath]);\n      },\n      (error) => {\n        toastr.error('Não foi possível atualizar o dado', error.error.error, {\n          timeOut: 10000,\n          progressBar: true,\n          closeButton: true,\n        });\n      }\n    );\n  }\n\n  // PRIVATE METHODS\n  protected setCurrentAction() {\n    if (this.route.snapshot.url[this.route.snapshot.url.length - 1]?.path === 'novo') {\n      this.currentAction = 'novo';\n    } else {\n      this.currentAction = 'editar';\n    }\n  }\n\n  protected loadResource() {\n    if (this.currentAction === 'editar') {\n      const idResource = Number(\n        this.route.snapshot.url[this.route.snapshot.url.length - 2]?.path\n      );\n      this.resourceService.getById(idResource).subscribe(\n        (resource) => {\n          this.resource = resource;\n          this.resourceForm.patchValue(this.resource);\n          this.carregamentoDeDados.emit(EEventosLocais.CARREGAMENTO_DADOS_API)\n        },\n        (error) => {\n          toastr.error(\n            'Não foi possível carregar os dados',\n            error.error.error,\n            {\n              timeOut: 10000,\n              progressBar: true,\n              closeButton: true,\n            }\n          );\n        }\n      );\n    }\n  }\n\n  protected setPageTitle() {\n    if (this.currentAction === 'novo') {\n      this.pageTitle = this.createPageTitle();\n    } else {\n      this.pageTitle = this.editionPageTitle();\n    }\n  }\n\n  protected createPageTitle(): string {\n    return 'Novo';\n  }\n\n  protected editionPageTitle(): string {\n    return 'Edição';\n  }\n\n  protected abstract buildResourceForm(): void;\n}\n","import { Injectable } from '@angular/core';\nimport { AuthUtils } from 'app/core/auth/auth.utils';\nimport { ELocalStorage } from '../models/localstorage.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RulesService {\n  constructor() {}\n\n  temPermissao(rule: string): boolean {\n    const token = localStorage.getItem(ELocalStorage.TOKEN);\n    if (!token) {\n      return false;\n    }\n\n    const { ROLES } = AuthUtils.decodeToken(token);\n\n    if (Object(ROLES).find((permissao) => permissao == rule)) {\n      return true;\n    }\n\n    return false;\n  }\n}\n","import { Component, Injector, OnInit } from '@angular/core';\nimport { MatPaginatorIntl, PageEvent } from '@angular/material/paginator';\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\nimport { BaseResourceModel } from 'app/shared/models/base-resource.model';\nimport { IFilter } from 'app/shared/models/interface.model';\nimport { BaseResourceService } from 'app/shared/services/base-resource.service';\nimport { RulesService } from 'app/shared/services/rules.service';\nimport toastr from 'toastr';\n\n@Component({\n  template: '',\n})\nexport abstract class BaseResourceListComponent<T extends BaseResourceModel, R>\n  implements OnInit\n{\n  resources: T[] = [];\n\n  // MatPaginator Inputs\n  length = 0;\n  pageSize = 10;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n\n  // MatPaginator Output\n  pageEvent: PageEvent;\n  protected _fuseConfirmationService: FuseConfirmationService;\n  protected _matPaginatorIntl: MatPaginatorIntl;\n  protected _ruleService: RulesService;\n\n  constructor(\n    protected injecto: Injector,\n    protected resourceService: BaseResourceService<T, R>\n  ) {\n    this._fuseConfirmationService = this.injecto.get(FuseConfirmationService);\n    this._matPaginatorIntl = this.injecto.get(MatPaginatorIntl);\n    this._ruleService = this.injecto.get(RulesService);\n  }\n\n  ngOnInit(): void {\n    this.carregaInformacoesResource();\n    this._matPaginatorIntl.itemsPerPageLabel = 'Itens por página';\n  }\n\n  setPageSizeOptions(setPageSizeOptionsInput: string) {\n    if (setPageSizeOptionsInput) {\n      this.pageSizeOptions = setPageSizeOptionsInput\n        .split(',')\n        .map((str) => +str);\n    }\n  }\n\n  carregaInformacoesResource(): void {\n    const filtro: IFilter = {\n      filtro: '',\n      pagina: 0,\n      direcaoOrdenacao: 'DESC',\n      tamanho: 10,\n      ordenarPor: 'id',\n    };\n    this.resourceService.getAll(filtro).subscribe((data) => {\n      this.resources = data['content'];\n      this.length = data['totalElements'];\n      this.pageSize = data['size'];\n    });\n  }\n\n  excluir(resource: T): void {\n    const dialogRef = this._fuseConfirmationService.open({\n      title: `Deseja realmente excluir o item: ${resource.id}?`,\n      message: '',\n      icon: {\n        show: true,\n        name: 'heroicons_outline:exclamation',\n        color: 'warn',\n      },\n      actions: {\n        confirm: {\n          show: true,\n          label: 'Confirmar',\n          color: 'warn',\n        },\n        cancel: {\n          show: true,\n          label: 'Cancelar',\n        },\n      },\n      dismissible: false,\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result === 'confirmed') {\n        this.resourceService.delete(resource.id).subscribe(\n          (res) => {\n            toastr.success(`Item excluído com sucesso!`, '', {\n              timeOut: 10000,\n              progressBar: true,\n              closeButton: true,\n            });\n            this.carregaInformacoesResource();\n          },\n          (error) => {\n            toastr.error(\n              'Não foi possível excluir o perfil',\n              error.error.error,\n              {\n                timeOut: 10000,\n                progressBar: true,\n                closeButton: true,\n              }\n            );\n          }\n        );\n      }\n    });\n  }\n\n  paginacao(event: Event): void {\n    this.pageSize = event['pageSize'];\n    const filtro: IFilter = {\n      filtro: '',\n      pagina: event['pageIndex'],\n      direcaoOrdenacao: 'DESC',\n      tamanho: this.pageSize,\n      ordenarPor: 'id',\n    };\n\n    this.resourceService.getAll(filtro).subscribe((data) => {\n      this.resources = data['content'];\n      this.length = data['totalElements'];\n      this.pageSize = data['size'];\n    });\n  }\n\n  filtrarResource(termo: string): void {\n    const filtro: IFilter = {\n      filtro: termo,\n      pagina: 0,\n      direcaoOrdenacao: 'DESC',\n      tamanho: 10,\n      ordenarPor: 'id',\n    };\n    this.resourceService.getAll(filtro).subscribe((data) => {\n      this.resources = data['content'];\n      this.length = data['totalElements'];\n      this.pageSize = data['size'];\n    });\n  }\n\n  validaPermissao(rule: string): boolean {\n    return this._ruleService.temPermissao(rule);\n  }\n}\n","export abstract class BaseResourceModel {\n  id?: number;\n}\n"],"x_google_ignoreList":[]}