{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/modules/autentication/index.ts","./src/app/modules/autentication/login/components/autenticacao.component.ts","./src/app/modules/autentication/login/components/forgot/forgot.component.ts","./src/app/modules/autentication/login/components/forgot/forgot.component.html","./src/app/modules/autentication/login/components/forgot/index.ts","./src/app/modules/autentication/login/components/index.ts","./src/app/modules/autentication/login/components/login/index.ts","./src/app/modules/autentication/login/components/login/login.component.ts","./src/app/modules/autentication/login/components/login/login.component.html","./src/app/modules/autentication/login/index.ts","./src/app/modules/autentication/login/login-routing.module.ts","./src/app/modules/autentication/login/login.module.ts","./src/app/modules/ccos/client/cliente.module.ts","./src/app/modules/ccos/client/components/atualizar/atualizar.component.ts","./src/app/modules/ccos/client/components/atualizar/atualizar.component.html","./src/app/modules/ccos/client/components/atualizar/index.ts","./src/app/modules/ccos/client/components/cadastrar/cadastrar.component.ts","./src/app/modules/ccos/client/components/cadastrar/cadastrar.component.html","./src/app/modules/ccos/client/components/cadastrar/index.ts","./src/app/modules/ccos/client/components/clinet.component.ts","./src/app/modules/ccos/client/components/index.ts","./src/app/modules/ccos/client/components/listar/index.ts","./src/app/modules/ccos/client/components/listar/listar.component.ts","./src/app/modules/ccos/client/components/listar/listar.component.html","./src/app/modules/ccos/client/index.ts","./src/app/modules/ccos/client/router-client.module.ts","./src/app/modules/ccos/group-service/components/atualizar/atualizar.component.ts","./src/app/modules/ccos/group-service/components/atualizar/atualizar.component.html","./src/app/modules/ccos/group-service/components/atualizar/index.ts","./src/app/modules/ccos/group-service/components/cadastrar/cadastrar.component.ts","./src/app/modules/ccos/group-service/components/cadastrar/cadastrar.component.html","./src/app/modules/ccos/group-service/components/cadastrar/index.ts","./src/app/modules/ccos/group-service/components/group-service.component.ts","./src/app/modules/ccos/group-service/components/index.ts","./src/app/modules/ccos/group-service/components/listar-tipo-grupo/index.ts","./src/app/modules/ccos/group-service/components/listar-tipo-grupo/listar-tipo-grupo.component.ts","./src/app/modules/ccos/group-service/components/listar-tipo-grupo/listar-tipo-grupo.component.html","./src/app/modules/ccos/group-service/components/listar-unidade/index.ts","./src/app/modules/ccos/group-service/components/listar-unidade/listar-unidade.component.ts","./src/app/modules/ccos/group-service/components/listar-unidade/listar-unidade.component.html","./src/app/modules/ccos/group-service/components/listar/index.ts","./src/app/modules/ccos/group-service/components/listar/listar.component.ts","./src/app/modules/ccos/group-service/components/listar/listar.component.html","./src/app/modules/ccos/group-service/group-service.module.ts","./src/app/modules/ccos/group-service/index.ts","./src/app/modules/ccos/group-service/router-group-service.module.ts","./src/app/modules/ccos/index.ts","./src/app/modules/ccos/order-service/components/atualizar/atualizar.component.ts","./src/app/modules/ccos/order-service/components/atualizar/atualizar.component.html","./src/app/modules/ccos/order-service/components/atualizar/index.ts","./src/app/modules/ccos/order-service/components/cadastrar/cadastrar.component.ts","./src/app/modules/ccos/order-service/components/cadastrar/cadastrar.component.html","./src/app/modules/ccos/order-service/components/cadastrar/index.ts","./src/app/modules/ccos/order-service/components/index.ts","./src/app/modules/ccos/order-service/components/listar/index.ts","./src/app/modules/ccos/order-service/components/listar/listar.component.ts","./src/app/modules/ccos/order-service/components/listar/listar.component.html","./src/app/modules/ccos/order-service/components/order-service.component.ts","./src/app/modules/ccos/order-service/components/visualizar/index.ts","./src/app/modules/ccos/order-service/components/visualizar/visualizar.component.ts","./src/app/modules/ccos/order-service/components/visualizar/visualizar.component.html","./src/app/modules/ccos/order-service/index.ts","./src/app/modules/ccos/order-service/order-service.module.ts","./src/app/modules/ccos/order-service/router-order-service.module.ts","./src/app/modules/index.ts","./src/app/modules/shared/components/barra-de-menu/barra-de-menu.component.ts","./src/app/modules/shared/components/barra-de-menu/barra-de-menu.component.html","./src/app/modules/shared/components/barra-de-menu/index.ts","./src/app/modules/shared/components/index.ts","./src/app/modules/shared/components/menu/index.ts","./src/app/modules/shared/components/menu/menu.component.ts","./src/app/modules/shared/components/menu/menu.component.html","./src/app/modules/shared/components/menu/menu.module.ts","./src/app/modules/shared/components/not-found/index.ts","./src/app/modules/shared/components/not-found/not-found.component.ts","./src/app/modules/shared/components/not-found/not-found.component.html","./src/app/modules/shared/config/api.config.ts","./src/app/modules/shared/config/index.ts","./src/app/modules/shared/config/storangeKeys.config.ts","./src/app/modules/shared/directives/index.ts","./src/app/modules/shared/directives/mascara.directive.ts","./src/app/modules/shared/index.ts","./src/app/modules/shared/interceptors/auth.interceptor.ts","./src/app/modules/shared/interceptors/index.ts","./src/app/modules/shared/pipe/cpf.pipe.ts","./src/app/modules/shared/pipe/index.ts","./src/app/modules/shared/services/autenticacao/index.ts","./src/app/modules/shared/services/autenticacao/login.service.ts","./src/app/modules/shared/services/autenticacao/user-logged.service.ts","./src/app/modules/shared/services/ccos/cliente.service.ts","./src/app/modules/shared/services/ccos/consultacep.service.ts","./src/app/modules/shared/services/ccos/endereco.service.ts","./src/app/modules/shared/services/ccos/grupo-servico.service.ts","./src/app/modules/shared/services/ccos/index.ts","./src/app/modules/shared/services/ccos/ordem-servico-grupo-servico.service.ts","./src/app/modules/shared/services/ccos/ordem-servico.service.ts","./src/app/modules/shared/services/ccos/tipo-grupo-servico.service.ts","./src/app/modules/shared/services/ccos/unidade-grupo-servico.service.ts","./src/app/modules/shared/services/guard/autentica-rota-user.service.ts","./src/app/modules/shared/services/guard/index.ts","./src/app/modules/shared/services/guard/logged-guard.service.ts","./src/app/modules/shared/services/guard/user-guard.service.ts","./src/app/modules/shared/services/index.ts","./src/app/modules/shared/services/storange.service.ts","./src/app/modules/shared/services/system/historicoAcesso.service.ts","./src/app/modules/shared/services/system/index.ts","./src/app/modules/shared/services/system/perfil-permissao.service.ts","./src/app/modules/shared/services/system/perfil.service.ts","./src/app/modules/shared/services/system/permissao.service.ts","./src/app/modules/shared/services/system/usuario.service.ts","./src/app/modules/shared/shared.module.ts","./src/app/modules/shared/util/format-datepicker.ts","./src/app/modules/shared/util/index.ts","./src/app/modules/shared/validators/cpf.validator.ts","./src/app/modules/shared/validators/index.ts","./src/app/modules/system/dashboard/components/dashboard.component.ts","./src/app/modules/system/dashboard/components/graficos/bar-chart/bar-chart.component.ts","./src/app/modules/system/dashboard/components/graficos/bar-chart/bar-chart.component.html","./src/app/modules/system/dashboard/components/graficos/bar-chart/index.ts","./src/app/modules/system/dashboard/components/graficos/bubble-chart/bubble-chart.component.ts","./src/app/modules/system/dashboard/components/graficos/bubble-chart/bubble-chart.component.html","./src/app/modules/system/dashboard/components/graficos/bubble-chart/index.ts","./src/app/modules/system/dashboard/components/graficos/doughnut-chart/doughnut-chart.component.ts","./src/app/modules/system/dashboard/components/graficos/doughnut-chart/doughnut-chart.component.html","./src/app/modules/system/dashboard/components/graficos/doughnut-chart/index.ts","./src/app/modules/system/dashboard/components/graficos/index.ts","./src/app/modules/system/dashboard/components/graficos/line-chart/index.ts","./src/app/modules/system/dashboard/components/graficos/line-chart/line-chart.component.ts","./src/app/modules/system/dashboard/components/graficos/line-chart/line-chart.component.html","./src/app/modules/system/dashboard/components/graficos/pie-chart/index.ts","./src/app/modules/system/dashboard/components/graficos/pie-chart/pie-chart.component.ts","./src/app/modules/system/dashboard/components/graficos/pie-chart/pie-chart.component.html","./src/app/modules/system/dashboard/components/graficos/radar-chart/index.ts","./src/app/modules/system/dashboard/components/graficos/radar-chart/radar-chart.component.ts","./src/app/modules/system/dashboard/components/graficos/radar-chart/radar-chart.component.html","./src/app/modules/system/dashboard/components/home/home.component.ts","./src/app/modules/system/dashboard/components/home/home.component.html","./src/app/modules/system/dashboard/components/home/index.ts","./src/app/modules/system/dashboard/components/index.ts","./src/app/modules/system/dashboard/dashboard-routing.module.ts","./src/app/modules/system/dashboard/dashboard.module.ts","./src/app/modules/system/dashboard/index.ts","./src/app/modules/system/index.ts","./src/app/modules/system/log/components/index.ts","./src/app/modules/system/log/components/lista-logs/index.ts","./src/app/modules/system/log/components/lista-logs/lista-logs.component.ts","./src/app/modules/system/log/components/lista-logs/lista-logs.component.html","./src/app/modules/system/log/components/log-acesso/index.ts","./src/app/modules/system/log/components/log-acesso/log-acesso.component.ts","./src/app/modules/system/log/components/log-acesso/log-acesso.component.html","./src/app/modules/system/log/components/log.component.ts","./src/app/modules/system/log/index.ts","./src/app/modules/system/log/log.module.ts","./src/app/modules/system/log/router-log.module.ts","./src/app/modules/system/permition/components/cadastrar/cadastrar.component.ts","./src/app/modules/system/permition/components/cadastrar/cadastrar.component.html","./src/app/modules/system/permition/components/cadastrar/index.ts","./src/app/modules/system/permition/components/create-new/create-new.component.ts","./src/app/modules/system/permition/components/create-new/create-new.component.html","./src/app/modules/system/permition/components/create-new/index.ts","./src/app/modules/system/permition/components/index.ts","./src/app/modules/system/permition/components/listar/index.ts","./src/app/modules/system/permition/components/listar/listar.component.ts","./src/app/modules/system/permition/components/listar/listar.component.html","./src/app/modules/system/permition/components/permissao.component.ts","./src/app/modules/system/permition/index.ts","./src/app/modules/system/permition/permition.module.ts","./src/app/modules/system/permition/router-permition.module.ts","./src/app/modules/system/profile/components/atualizar/atualizar.component.ts","./src/app/modules/system/profile/components/atualizar/atualizar.component.html","./src/app/modules/system/profile/components/atualizar/index.ts","./src/app/modules/system/profile/components/cadastrar/cadastrar.component.ts","./src/app/modules/system/profile/components/cadastrar/cadastrar.component.html","./src/app/modules/system/profile/components/cadastrar/index.ts","./src/app/modules/system/profile/components/index.ts","./src/app/modules/system/profile/components/listar/index.ts","./src/app/modules/system/profile/components/listar/listar.component.ts","./src/app/modules/system/profile/components/listar/listar.component.html","./src/app/modules/system/profile/components/perfil.component.ts","./src/app/modules/system/profile/index.ts","./src/app/modules/system/profile/profile.module.ts","./src/app/modules/system/profile/router-profile.module.ts","./src/app/modules/system/user/components/atualizar/atualizar.component.ts","./src/app/modules/system/user/components/atualizar/atualizar.component.html","./src/app/modules/system/user/components/atualizar/index.ts","./src/app/modules/system/user/components/cadastrar/cadastrar.component.ts","./src/app/modules/system/user/components/cadastrar/cadastrar.component.html","./src/app/modules/system/user/components/cadastrar/index.ts","./src/app/modules/system/user/components/index.ts","./src/app/modules/system/user/components/listar/index.ts","./src/app/modules/system/user/components/listar/listar.component.ts","./src/app/modules/system/user/components/listar/listar.component.html","./src/app/modules/system/user/components/perfil-user/index.ts","./src/app/modules/system/user/components/perfil-user/perfil-user.component.ts","./src/app/modules/system/user/components/perfil-user/perfil-user.component.html","./src/app/modules/system/user/components/usuario.component.ts","./src/app/modules/system/user/index.ts","./src/app/modules/system/user/router-user.module.ts","./src/app/modules/system/user/user.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wyC;AACc;AACT;;;AAEvC,MAAM,MAAM,GAAW;IAC5B,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE;IACrD,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,0DAAiB,EAAE;CAC7C,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,WAAW,CAAC;KACrB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,2EAA+B;QAC/B,yEACE;QAAA,yEACI;QAAA,mFACJ;QAAA,4DAAM;QACN,sEACI;QAAA,yEAAQ;QAAA,uEAAY;QAAA,4DAAS;QAAC,yFAClC;QAAA,4DAAM;QACR,4DAAM;;6FDDO,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACM;AAC4B;AACjC;AAEqC;AAChC;AAwB5B;AAEqC;;;AA2CjD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBATT;QACT;YACE,OAAO,EAAE,sEAAiB;YAC1B,QAAQ,EAAE,wDAAe;YACzB,KAAK,EAAE,IAAI;SACZ;KACF,YApCQ;YACP,uEAAa;YACb,oDAAW;YACX,2DAAkB;YAClB,4DAAY;YACZ,wDAAe;YACf,+DAAsB;YACtB,mDAAU;YACV,qDAAY;YACZ,qEAAgB;YAChB,mDAAU;YACV,0DAAiB;YACjB,4FAAuB;YACvB,sDAAa;YACb,6DAAoB;YACpB,wDAAe;YACf,+DAAsB;YACtB,kDAAS;YACT,yDAAgB;YAChB,sDAAa;YACb,4DAAmB;YACnB,2DAAkB;YAClB,kEAAyB;YACzB,2DAAkB;YAClB,kEAAyB;YACzB,qEAAgB;YAEhB,uDAAY,CAAC,OAAO,EAAE;YACtB,oEAAgB;SACjB;mIAUU,SAAS,mBAxCL,2DAAY,aAEzB,uEAAa;QACb,oDAAW;QACX,2DAAkB;QAClB,4DAAY;QACZ,wDAAe;QACf,+DAAsB;QACtB,mDAAU;QACV,qDAAY;QACZ,qEAAgB;QAChB,mDAAU;QACV,0DAAiB;QACjB,4FAAuB;QACvB,sDAAa;QACb,6DAAoB;QACpB,wDAAe;QACf,+DAAsB;QACtB,kDAAS;QACT,yDAAgB;QAChB,sDAAa;QACb,4DAAmB;QACnB,2DAAkB;QAClB,kEAAyB;QACzB,2DAAkB;QAClB,kEAAyB;QACzB,qEAAgB,2DAGhB,oEAAgB;6FAWP,SAAS;cAzCrB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,2DAAY,CAAC;gBAC5B,OAAO,EAAE;oBACP,uEAAa;oBACb,oDAAW;oBACX,2DAAkB;oBAClB,4DAAY;oBACZ,wDAAe;oBACf,+DAAsB;oBACtB,mDAAU;oBACV,qDAAY;oBACZ,qEAAgB;oBAChB,mDAAU;oBACV,0DAAiB;oBACjB,4FAAuB;oBACvB,sDAAa;oBACb,6DAAoB;oBACpB,wDAAe;oBACf,+DAAsB;oBACtB,kDAAS;oBACT,yDAAgB;oBAChB,sDAAa;oBACb,4DAAmB;oBACnB,2DAAkB;oBAClB,kEAAyB;oBACzB,2DAAkB;oBAClB,kEAAyB;oBACzB,qEAAgB;oBAEhB,uDAAY,CAAC,OAAO,EAAE;oBACtB,oEAAgB;iBACjB;gBACD,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,sEAAiB;wBAC1B,QAAQ,EAAE,wDAAe;wBACzB,KAAK,EAAE,IAAI;qBACZ;iBACF;gBACD,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC3ED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwB;;;;;;;;;;;;;ACAxB;AAAA;AAAA;AAAA;AAA0C;;;AAGnC,MAAM,qBAAqB;;0FAArB,qBAAqB;qGAArB,qBAAqB;QADV,2EAA+B;;6FAC1C,qBAAqB;cADjC,uDAAS;eAAC,EAAE,QAAQ,EAAE,iCAAiC,EAAE;;;;;;;;;;;;;;ACF1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;AAgBrC;;;;;;;;;;;ICsBT,2FAME;IAHA,kbAAkD,CAAC,KAAE;IAGrD,uDAEF;IAAA,4DAAmB;;;IAJjB,+EAAmB;IAEnB,0DAEF;IAFE,yFAEF;;;;IAXJ,sEACE;IAAA,qEAAI;IAAA,6HAAkE;IAAA,4DAAK;IAC3E,sFACE;IAAA,6IAME;IAGJ,4DAAkB;IAClB,gEACA;IAAA,6EAA0F;IAAxD,2TAA4B,CAAC,KAAE;IAAyB,uEAAO;IAAA,4DAAS;IAC5G,4DAAM;;;IAXA,0DAA4B;IAA5B,oFAA4B;;;IAYlC,qEAAsB;IAAA,kGAAkC;IAAA,4DAAK;;;;IAOzD,2FAME;IAHA,sbAA2D,CAAC,KAAE;IAG9D,uDACF;IAAA,4DAAmB;;;IAHjB,gFAAmB;IAEnB,0DACF;IADE,0FACF;;;;IAXJ,sEACE;IAAA,qEAAI;IAAA,wFAA6B;IAAA,4DAAK;IAEtC,sFACE;IAAA,6IAME;IAEJ,4DAAkB;IAClB,gEACA;IAAA,6EAA0F;IAAxD,2TAA4B,CAAC,KAAE;IAAyB,uEAAO;IAAA,4DAAS;IAC5G,4DAAM;;;IAVA,0DAAsC;IAAtC,8FAAsC;;;IAW5C,qEAAsB;IAAA,wGAAwC;IAAA,4DAAK;;;;IAInE,6EAAwH;IAAxB,4TAAuB;IAAC,wEAAa;IAAA,4DAAS;;;IAC9I,qEAAsB;IAAA,4HAA4D;IAAA,4DAAK;;AD/ClG,MAAM,eAAe;IAmC1B,YACU,EAAe,EACf,MAAc,EACd,KAAoB,EACpB,YAA0B,EAC1B,WAA2B,EAC3B,OAA0B;QAL1B,OAAE,GAAF,EAAE,CAAa;QACf,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAe;QACpB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAgB;QAC3B,YAAO,GAAP,OAAO,CAAmB;QAtC5B,kBAAa,GAAmB,EAAE,CAAC;QAE3C,YAAO,GAAG,EAAa,CAAC;QAExB,WAAM,GAAG,EAAY,CAAC;QAEtB,cAAS,GAAG,EAAe,CAAC;QAI5B,eAAU,GAAG,KAAK,CAAC;QAEnB,aAAQ,GAAG,IAAI,CAAC;QAEhB,aAAQ,GAAG,KAAK,CAAC;QAEjB,aAAQ,GAAG,KAAK,CAAC;QAEjB,aAAQ,GAAG,KAAK,CAAC;QAEjB,aAAQ,GAA2B,EAAE,CAAC;QAEtC,uBAAkB,GAA2B,EAAE,CAAC;QAEhD,SAAI,GAAG,EAA0B,CAAC;QAElC,kBAAa,GAAG,EAA0B,CAAC;QAE3C,eAAU,GAAG,KAAK,CAAC;QAEnB,yBAAoB,GAAG,KAAK,CAAC;IAS1B,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC;IAC3E,CAAC;IAED,SAAS;QACP,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,KAAK,CAAC,CAAC;SAChC,CAAC,CAAC;IACL,CAAC;IAED,eAAe;QACb,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,iBAAiB,EAAE,uBAAuB,EAAE;gBAC3D,OAAO,EAAE,IAAI;aACd,CAAC,CAAC;YACH,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,OAAO;SACR;QAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAE9B,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,SAAS,CAC1D,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC1B,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,MAAM,KAAK,GAAG,UAAU,CAAC;YACzB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,yCAAyC,EAAE,KAAK,EAAE;gBACjE,OAAO,EAAE,IAAI;aACd,CAAC,CAAC;QACL,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAED,kBAAkB;QAChB,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;QAC7C,MAAM,OAAO,GAAG,EAA0B,CAAC;QAC3C,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;QAClC,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;QACpB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC;IAClC,CAAC;IAED,gBAAgB;QACd,IAAI,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;QAC3D,aAAa,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3C,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;QAC7C,MAAM,OAAO,GAAG,EAA0B,CAAC;QAC3C,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC;QACvC,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC;QAC7B,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC;IAC5C,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;YAC7B,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;YAC1E,MAAM,OAAO,GAAG,EAA0B,CAAC;YAC3C,OAAO,CAAC,MAAM,GAAG,aAAa,CAAC;YAC/B,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC;YAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC7B;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;YAC7B,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;YACvE,MAAM,mBAAmB,GAAG,EAA0B,CAAC;YACvD,mBAAmB,CAAC,MAAM,GAAG,aAAa,CAAC;YAC3C,mBAAmB,CAAC,KAAK,GAAG,CAAC,CAAC;YAC9B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;SACnD;IACH,CAAC;IAED,kBAAkB,CAAC,SAAiB;QAClC,QAAQ,SAAS,EAAE;YACjB,KAAK,CAAC;gBACJ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC;gBACxC,MAAM;YACR,KAAK,CAAC;gBACJ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC;gBACxC,MAAM;YACR,KAAK,CAAC;gBACJ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC;gBACxC,MAAM;YACR,KAAK,CAAC;gBACJ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC;gBACxC,MAAM;YACR;gBACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC;SAC3C;IACH,CAAC;IAED,WAAW;QACT,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,oBAAoB,CAAC,EAAE;YACnD,IAAI,CAAC,KAAK,CAAC,IAAI,CACb,mCAAmC,EACnC,mBAAmB,EACnB;gBACE,OAAO,EAAE,IAAI;aACd,CACF,CAAC;YAEF,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,CAAC,EAAE,IAAI,CAAC,CAAC;YACT,OAAO;SACR;QAED,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAC7C,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,kDAAI,CAAC,IAAI,CACP,gCAAgC,EAChC,4BAA4B,EAC5B,SAAS,CACV,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnC,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC;YAC3B,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;oBAClC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;oBACjB,IAAI,CAAC,KAAK,CAAC,KAAK,CACd,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO,EAAE,EAC5C,CAAC,CAAC,SAAS,EACX;wBACE,OAAO,EAAE,IAAI;qBACd,CACF,CAAC;gBACJ,CAAC,CAAC,CAAC;gBACH,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,OAAO,EAAE,CAAC;gBACjB,CAAC,EAAE,IAAI,CAAC,CAAC;aACV;iBAAM;gBACL,MAAM,KAAK,GAAG,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;gBAC9C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE;oBAC9C,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;gBACH,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,OAAO,EAAE,CAAC;gBACjB,CAAC,EAAE,IAAI,CAAC,CAAC;aACV;QACH,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAED,wBAAwB,CAAC,MAAc,EAAE,IAAY;QACnD,IAAI,IAAI,KAAK,CAAC,EAAE;YACd,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,MAAM,EAAE;gBAC9B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;aACxB;iBAAM;gBACL,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;aACzB;SACF;QAED,IAAI,IAAI,KAAK,CAAC,EAAE;YACd,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,KAAK,MAAM,EAAE;gBACvC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;aAClC;iBAAM;gBACL,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;aACnC;SACF;IACH,CAAC;IAED,OAAO;QACL,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;;8EA5OU,eAAe;+FAAf,eAAe;QC7B5B,iFACE;QAAA,wEAA0B;QAAA,wEAAa;QAAA,4DAAK;QAC9C,4DAAc;QACd,yEACE;QAAA,yEAEE;QAAA,sEACE;QAAA,wEAAsB;QAAA,+DAAI;QAAA,4DAAK;QACjC,4DAAM;QACN,qEAAI;QAAA,oFAAyB;QAAA,4DAAK;QAElC,0EACE;QAAA,0EACE;QAAA,0EACI;QAAA,yEACI;QAAA,yEAAmB;QAAA,yEAA8C;QAAA,6EAAW;QAAA,4DAAI;QAAA,4DAAK;QACrF,0EAAa;QAAA,yEAA6C;QAAA,yEAAQ;QAAA,4DAAI;QAAA,4DAAK;QAC3E,0EAAa;QAAA,yEAA6C;QAAA,wFAAuB;QAAA,4DAAI;QAAA,4DAAK;QAC1F,0EAAa;QAAA,yEAA6C;QAAA,oFAAmB;QAAA,4DAAI;QAAA,4DAAK;QAC1F,4DAAK;QACL,2EACI;QAAA,2EACE;QAAA,4EACE;QAAA,2EACI;QAAA,wEAOF;QAAA,4DAAM;QACR,8EAAgF;QAA1D,wIAAS,qBAAiB,IAAC;QAA+B,wFAAuB;QAAA,4DAAS;QACpH,4DAAO;QACP,4DAAM;QACN,2EACE;QAAA,8GACE;QAeF,4GAAsB;QACxB,4DAAM;QACN,2EACE;QAAA,8GACE;QAeF,4GAAsB;QAExB,4DAAM;QACN,2EACE;QAAA,oHAAwH;QACxH,4GAAsB;QACxB,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,iEACA;QAAA,yEAAiB;QAAA,yEAAO;QAAA,qFAAyB;QAAA,4DAAQ;QAAA,4DAAI;QAC/D,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;QArFO,6EAAoB;QAsBT,2DAAkB;QAAlB,+EAAkB;QAcnB,0DAAgB;QAAhB,8EAAgB;QAgBjB,0DAAiB;QAAjB,+EAAiB;QAGhB,0DAAgB;QAAhB,8EAAgB;QAgBjB,0DAAiB;QAAjB,+EAAiB;QAIb,0DAAgB;QAAhB,8EAAgB;QACpB,0DAAiB;QAAjB,+EAAiB;;6FD/C1B,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AE5BD;AAAA;AAAA;AAAA;AAAmC;;;;;;;;;;;;;ACAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwB;AACC;AACgB;;;;;;;;;;;;;ACFzC;AAAA;AAAA;AAAA;AAAkC;;;;;;;;;;;;;ACAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAMkB;;;;;;;AAoB7D,MAAM,cAAc;IAazB,YACU,EAAe,EACf,MAAc,EACd,YAA0B,EAC1B,cAA8B,EAC9B,eAAgC,EAChC,SAAiC,EACjC,iBAAoC,EACpC,KAAoB,EACpB,OAA0B;QAR1B,OAAE,GAAF,EAAE,CAAa;QACf,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAc;QAC1B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAe,GAAf,eAAe,CAAiB;QAChC,cAAS,GAAT,SAAS,CAAwB;QACjC,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,UAAK,GAAL,KAAK,CAAe;QACpB,YAAO,GAAP,OAAO,CAAmB;QArB5B,kBAAa,GAAmB,EAAE,CAAC;QAE3C,UAAK,GAAG,EAAW,CAAC;QAEpB,cAAS,GAAG,EAAe,CAAC;QAM5B,mBAAc,GAAG,EAAe,CAAC;IAY9B,CAAC;IAEJ,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC;IAC3E,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAED,kBAAkB;QAChB,MAAM,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,CAAC;QAEnD,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;SACtC;IACH,CAAC;IAED,SAAS;QACP,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACpD,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAC5D,CAAC,CAAC;IACL,CAAC;IAED,KAAK;QACH,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,IAAI,CAAC,KAAK,CAAC,KAAK,CACd,+CAA+C,EAC/C,mBAAmB,EACnB,EAAE,OAAO,EAAE,IAAI,EAAE,CAClB,CAAC;YACF,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,OAAO;SACR;QAED,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAC7B,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAC3C,CAAC,IAAI,EAAE,EAAE;YACP,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;YAChD,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACtC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,CAAC;YAC/D,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAClC,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC;YAC3B,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;oBAClC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;oBACjB,IAAI,CAAC,KAAK,CAAC,KAAK,CACd,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO,EAAE,EAC5C,CAAC,CAAC,SAAS,EACX,EAAE,OAAO,EAAE,IAAI,EAAE,CAClB,CAAC;gBACJ,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,MAAM,KAAK,GAAG,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;gBAC9C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE;oBAC9C,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;aACJ;QACH,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAED,wBAAwB;QACtB,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,SAAS,CACrE,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;gBACrB,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;gBACxC,IAAI,CAAC,oCAAoC,EAAE,CAAC;aAC7C;iBAAM;gBACL,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,oBAAoB,EAAE,MAAM,EAAE;oBAC7C,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;aACJ;QACH,CAAC,EAED,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAC1B,CAAC;IACJ,CAAC;IAED,OAAO;QACL,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;IAED,oCAAoC;QAClC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACzC,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACtC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;IACL,CAAC;;4EAzHU,cAAc;8FAAd,cAAc;QC1B3B,iFACE;QAAA,wEACE;QAAA,uEACF;QAAA,4DAAK;QACP,4DAAc;QACd,yEACE;QAAA,yEACE;QAAA,sEACI;QAAA,sEACI;QAAA,wEAAsB;QAAA,+DAAI;QAAA,4DAAK;QACnC,4DAAM;QACN,qEAAI;QAAA,6EAAiB;QAAA,4DAAK;QAE1B,qEAAG;QAAA,mGAAuC;QAAA,4DAAI;QAC9C,2EACI;QAAA,0EACI;QAAA,uEAMF;QAAA,4DAAM;QACR,0EACE;QAAA,uEACF;QAAA,4DAAM;QACN,6EAAqF;QAA/D,uIAAS,WAAO,IAAC;QAA8C,iEAAK;QAAA,4DAAS;QAEnG,yEAAwB;QAAA,yEAAO;QAAA,gFAAoB;QAAA,4DAAQ;QAAA,4DAAI;QACnE,4DAAO;QAIf,4DAAM;QA3BJ,4DACE;QAFJ,4DACE;;QAN0B,4EAAqB;QAcnC,2DAAkB;QAAlB,+EAAkB;;6FDYnB,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEzBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACR;;;;;;;;;;;;;ACD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AAEc;AAMjC;;;AAEf,MAAM,WAAW,GAAW;IACjC;QACE,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,iEAAqB;QAChC,QAAQ,EAAE;YACR,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,0DAAc,EAAE;YACvC,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,2DAAe,EAAE;SAC/C;KACF;CACF,CAAC;AAOK,MAAM,kBAAkB;;iGAAlB,kBAAkB;8JAAlB,kBAAkB,kBAJpB,CAAC,4DAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAEnC,4DAAY;mIAEX,kBAAkB,uFAFnB,4DAAY;6FAEX,kBAAkB;cAL9B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;gBAE7C,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACzBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiE;AAClB;AACA;AACA;AACM;AACI;AACO;AACc;AAKxD;AAEsB;;AAgBrC,MAAM,WAAW;;0FAAX,WAAW;gJAAX,WAAW,kBAZb;YACP,4DAAY;YACZ,kEAAmB;YACnB,oDAAY;YACZ,4DAAgB;YAChB,6EAAiB;YACjB,sEAAc;YACd,2FAAwB;YACxB,4DAAY;SACb;mIAGU,WAAW,mBAbP,0DAAc,EAAE,2DAAe,EAAE,iEAAqB,aAEnE,4DAAY;QACZ,kEAAmB;QACnB,oDAAY;QACZ,4DAAgB;QAChB,6EAAiB;QACjB,sEAAc;QACd,2FAAwB;QACxB,4DAAY;6FAIH,WAAW;cAdvB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,0DAAc,EAAE,2DAAe,EAAE,iEAAqB,CAAC;gBACtE,OAAO,EAAE;oBACP,4DAAY;oBACZ,kEAAmB;oBACnB,oDAAY;oBACZ,4DAAgB;oBAChB,6EAAiB;oBACjB,sEAAc;oBACd,2FAAwB;oBACxB,4DAAY;iBACb;gBACD,OAAO,EAAE,CAAC,oEAAsB,CAAC;aAClC;;;;;;;;;;;;;;AC7BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAEA;AACM;AACN;AAOzB;AACkC;;AAkBjD,MAAM,aAAa;;4FAAb,aAAa;oJAAb,aAAa,kBATf;YACP,4DAAY;YACZ,kEAAmB;YACnB,4DAAY;YACZ,4DAAgB;YAChB,oDAAY;YACZ,kDAAU;SACX;mIAEU,aAAa,mBAdtB,8DAAkB;QAClB,8DAAkB;QAClB,2DAAe;QACf,2DAAe,aAGf,4DAAY;QACZ,kEAAmB;QACnB,4DAAY;QACZ,4DAAgB;QAChB,oDAAY;QACZ,kDAAU;6FAGD,aAAa;cAhBzB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,8DAAkB;oBAClB,8DAAkB;oBAClB,2DAAe;oBACf,2DAAe;iBAChB;gBACD,OAAO,EAAE;oBACP,4DAAY;oBACZ,kEAAmB;oBACnB,4DAAY;oBACZ,4DAAgB;oBAChB,oDAAY;oBACZ,kDAAU;iBACX;aACF;;;;;;;;;;;;;;AC9BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;AAUrC;;;;;;;;;;;;ICuBO,4EAAsH;IAAA,6DAAE;IAAA,4DAAQ;;;IAChI,4EAAqH;IAAA,wFAA6B;IAAA,4DAAQ;;;IAQ5J,4EAAkG;IAAA,6DAAE;IAAA,4DAAQ;;;IAC5G,4EAAiG;IAAA,+EAAoB;IAAA,4DAAQ;;;IAQ7H,4EAAkG;IAAA,6DAAE;IAAA,4DAAQ;;;IAC5G,4EAAiG;IAAA,+EAAoB;IAAA,4DAAQ;;;IAQ7H,4EAAoG;IAAA,6DAAE;IAAA,4DAAQ;;;IAC9G,4EAAmG;IAAA,iFAAsB;IAAA,4DAAQ;;;IAQjI,4EAA0G;IAAA,6DAAE;IAAA,4DAAQ;;;IACpH,4EAAyG;IAAA,mFAAwB;IAAA,4DAAQ;;;IAQvI,4EAAgH;IAAA,6DAAE;IAAA,4DAAQ;;;IAC1H,4EAA+G;IAAA,gGAA2B;IAAA,4DAAQ;;AD7DjL,MAAM,kBAAkB;IAe7B,YACU,EAAe,EACf,OAA0B,EAC1B,KAAqB,EACrB,cAA8B,EAC9B,KAAoB;QAJpB,OAAE,GAAF,EAAE,CAAa;QACf,YAAO,GAAP,OAAO,CAAmB;QAC1B,UAAK,GAAL,KAAK,CAAgB;QACrB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,UAAK,GAAL,KAAK,CAAe;QAnBtB,kBAAa,GAAmB,EAAE,CAAC;QAE3C,cAAS,GAAG,EAAe,CAAC;QAE5B,YAAO,GAAG,EAAa,CAAC;QAExB,YAAO,GAAG,EAAa,CAAC;QAExB,gBAAW,GAAG,EAAa,CAAC;IAYzB,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAC/D,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAC5D,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC5B,CAAC,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAC1B,CACF,CAAC;IACJ,CAAC;IAED,SAAS;QACP,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,cAAc,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACzC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACpD,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACvC,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QAEpB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,iCAAiC,EAAE,OAAO,EAAE;gBAC3D,OAAO,EAAE,IAAI;aACd,CAAC,CAAC;YACH,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAC9B,OAAO;SACR;QAED,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QACnC,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAE7C,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CACpD,CAAC,IAAI,EAAE,EAAE;YACP,MAAM,GAAG,GAAG,iCAAiC,CAAC;YAC9C,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YAEpB,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,SAAS;gBACf,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;YACH,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAC1B,CACF,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,sBAAsB;QACpB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,aAAa,EAAE,CAAC;QAChD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,aAAa,EAAE,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,aAAa,EAAE,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,aAAa,EAAE,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,aAAa,EAAE,CAAC;QAC1C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,aAAa,EAAE,CAAC;IAC/C,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACnB,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc;YAC3C,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI;YACvB,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI;YACvB,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ;YAC/B,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW;YACrC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK;SAC1B,CAAC,CAAC;IACL,CAAC;IAED,OAAO;QACL,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;;oFA/GU,kBAAkB;kGAAlB,kBAAkB;QCnB/B,iFACE;QAAA,wEACE;QAAA,2EACF;QAAA,4DAAK;QACP,4DAAc;QACd,yEACE;QAAA,sEAAqB;QAEnB,yEACE;QAAA,yEACE;QACA,+EAAuC;QACzC,4DAAM;QAEN,yEACI;QAAA,yEACI;QAAA,0EACI;QAAA,0EACI;QAAA,0EACI;QAAA,sEAAI;QAAA,2GAA0C;QAAA,yEAAuB;QAAA,oEAAiC;QAAC,qFAAmB;QAAA,4DAAI;QAAA,4DAAK;QACnI,2EACI;QAAA,yEACI;QAAA,oEAAgC;QACpC,4DAAI;QACR,4DAAM;QACV,4DAAM;QACN,2EAGE;QAAA,4EACE;QAAA,2EAAwB;QAAA,6EAAsC;QAAA,0EAAc;QAAA,oEAA6C;QAAA,4DAAQ;QAC7H,2EACI;QAAA,2EAA6B;QAAA,4EAAgC;QAAA,oEAA2B;QAAA,4DAAO;QAC3F,wEAA8G;QADlH,4DAA6B;QAEzB,qHAAsH;QACtH,qHAAqH;QAC7H,4DAAM;QACV,4DAAM;QAEN,2EAAwB;QAAA,6EAAsC;QAAA,iEAAK;QAAA,oEAA6C;QAAA,4DAAQ;QACtH,2EACI;QAAA,2EAA6B;QAAA,4EAAgC;QAAA,oEAA2B;QAAA,4DAAO;QAC3F,wEAA0F;QAD9F,4DAA6B;QAEzB,qHAAkG;QAClG,qHAAiG;QACzG,4DAAM;QACR,4DAAM;QAEN,2EAAwB;QAAA,6EAAsC;QAAA,iEAAK;QAAA,oEAA6C;QAAA,4DAAQ;QACtH,2EACI;QAAA,2EAA6B;QAAA,4EAAgC;QAAA,oEAA2B;QAAA,4DAAO;QAC3F,wEAAuH;QAD3H,4DAA6B;QAEzB,qHAAkG;QAClG,qHAAiG;QACzG,4DAAM;QACR,4DAAM;QAEN,2EAAwB;QAAA,6EAAsC;QAAA,mEAAO;QAAA,oEAA6C;QAAA,4DAAQ;QACxH,2EACI;QAAA,2EAA6B;QAAA,4EAAgC;QAAA,oEAAwB;QAAA,4DAAO;QACxF,wEAA6F;QADjG,4DAA6B;QAEzB,qHAAoG;QACpG,qHAAmG;QAC3G,4DAAM;QACR,4DAAM;QAEN,2EAAwB;QAAA,6EAAsC;QAAA,qEAAS;QAAA,4DAAQ;QAC7E,2EACI;QAAA,2EAA6B;QAAA,4EAAgC;QAAA,oEAAyB;QAAA,4DAAO;QACzF,wEAA4H;QADhI,4DAA6B;QAEzB,qHAA0G;QAC1G,qHAAyG;QACjH,4DAAM;QACR,4DAAM;QAEN,2EAAwB;QAAA,6EAAsC;QAAA,kFAAY;QAAA,oEAA6C;QAAA,4DAAQ;QAC3H,2EACI;QAAA,2EAA6B;QAAA,4EAAgC;QAAA,oEAA6B;QAAA,4DAAO;QAC7F,2EAAsH;QACtH,qHAAgH;QAChH,qHAA+G;QACnH,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEF,sEAAkC;QAClC,2EACI;QAAA,2EACI;QAAA,8EAAiF;QAAA,oEAA2B;QAAC,mEAAM;QAAA,4DAAS;QAC5H,8EAAoF;QAA9B,2IAAS,uBAAmB,IAAC;QAAC,oEAA2B;QAAC,sEAAS;QAAA,4DAAS;QACtI,4DAAM;QACV,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACR,4DAAM;QACV,4DAAM;;QAnGsB,4EAAqB;QA6BK,2DAAkB;QAAlB,+EAAkB;QAK3B,2DAA8E;QAA9E,gJAA8E;QAC9E,0DAA+E;QAA/E,iJAA+E;QAQjF,2DAA0D;QAA1D,4HAA0D;QAC1D,0DAA2D;QAA3D,6HAA2D;QAQ3D,2DAA0D;QAA1D,4HAA0D;QAC1D,0DAA2D;QAA3D,6HAA2D;QAQ3D,2DAA4D;QAA5D,8HAA4D;QAC5D,0DAA6D;QAA7D,+HAA6D;QAQ7D,0DAAkE;QAAlE,oIAAkE;QAClE,0DAAmE;QAAnE,qIAAmE;QAQjE,2DAAwE;QAAxE,0IAAwE;QACxE,0DAAyE;QAAzE,2IAAyE;;6FD7DzG,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AElBD;AAAA;AAAA;AAAA;AAAsC;;;;;;;;;;;;;ACAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAWkB;AACrC;;;;;;;;;;;ICqBW,4EAAsH;IAAA,6DAAE;IAAA,4DAAQ;;;IAChI,4EAAqH;IAAA,wFAA6B;IAAA,4DAAQ;;;IAQ5J,4EAAkG;IAAA,6DAAE;IAAA,4DAAQ;;;IAC5G,4EAAiG;IAAA,+EAAoB;IAAA,4DAAQ;;;IAYvH,6EAA4D;IAAA,uDAAkB;IAAA,4DAAS;;;IAAhD,2FAAmB;IAAE,0DAAkB;IAAlB,2FAAkB;;;IAEhF,4EAAqG;IAAA,iFAAsB;IAAA,4DAAQ;;;IAKjI,6EAA2D;IAAA,uDAAiB;IAAA,4DAAS;;;IAA9C,2FAAmB;IAAC,0DAAiB;IAAjB,gFAAiB;;;IAEhF,4EAAqG;IAAA,iFAAsB;IAAA,4DAAQ;;;;IALrI,0EACE;IAAA,6EACI;IAD6E,6VAAiD;IAC9H,6EAAkB;IAAA,6EAAkB;IAAA,4DAAS;IAC7C,4HAA2D;IAC/D,4DAAS;IACT,0HAAqG;IAEvG,4DAAM;;;IAJQ,0DAA8B;IAA9B,mFAA8B;IAEnC,0DAA+D;IAA/D,uIAA+D;;;IAKtE,4EAAgG;IAAA,8EAAmB;IAAA,4DAAQ;;;IAF7H,0EACE;IAAA,uEACA;IAAA,0HAAgG;IAClG,4DAAM;;;IADG,0DAAyD;IAAzD,iIAAyD;;;IAIhE,4EAA6G;IAAA,qFAA0B;IAAA,4DAAQ;;;IAFjJ,0EACE;IAAA,uEACA;IAAA,0HAA6G;IAC/G,4DAAM;;;IADG,0DAAuE;IAAvE,+IAAuE;;;IAI9E,4EAAqG;IAAA,iFAAsB;IAAA,4DAAQ;;;IAFrI,0EACE;IAAA,uEACA;IAAA,0HAAqG;IACvG,4DAAM;;;IADG,0DAA+D;IAA/D,uIAA+D;;;IAExE,0EACE;IAAA,uEACF;IAAA,4DAAM;;;IACN,0EACE;IAAA,uEACF;IAAA,4DAAM;;;IAWN,4EAAkG;IAAA,6DAAE;IAAA,4DAAQ;;;IAC5G,4EAAiG;IAAA,+EAAoB;IAAA,4DAAQ;;;IAQ7H,4EAAoG;IAAA,6DAAE;IAAA,4DAAQ;;;IAC9G,4EAAmG;IAAA,iFAAsB;IAAA,4DAAQ;;;IAQjI,4EAA0G;IAAA,6DAAE;IAAA,4DAAQ;;;IACpH,4EAAyG;IAAA,mFAAwB;IAAA,4DAAQ;;;IAQvI,4EAAgH;IAAA,6DAAE;IAAA,4DAAQ;;;IAC1H,4EAA+G;IAAA,gGAA2B;IAAA,4DAAQ;;ADrGrL,MAAM,kBAAkB;IAqB7B,YACU,EAAe,EACf,OAA0B,EAC1B,cAA8B,EAC9B,eAAgC,EAChC,KAAoB;QAJpB,OAAE,GAAF,EAAE,CAAa;QACf,YAAO,GAAP,OAAO,CAAmB;QAC1B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAe,GAAf,eAAe,CAAiB;QAChC,UAAK,GAAL,KAAK,CAAe;QAzBtB,kBAAa,GAAmB,EAAE,CAAC;QAE3C,cAAS,GAAG,EAAe,CAAC;QAE5B,YAAO,GAAG,EAAa,CAAC;QAExB,kBAAa,GAAG,EAAmB,CAAC;QAQpC,kBAAa,GAAG,KAAK,CAAC;QAEtB,oBAAe,GAAG,KAAK,CAAC;QAExB,aAAQ,GAAG,IAAI,CAAC;IAQb,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,SAAS;QACP,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,cAAc,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACzC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACpD,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,MAAM,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjC,MAAM,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjC,GAAG,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9B,UAAU,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,MAAM,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjC,MAAM,EAAE,CAAC,EAAE,CAAC;YACZ,WAAW,EAAE,CAAC,EAAE,CAAC;SAClB,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,WAAW,EAAE,iBAAiB,EAAE,CAAC,CAAC;IAC3D,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,CAAC,SAAS,CAC5C,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAC1B,CACF,CAAC;IACJ,CAAC;IAED,iBAAiB,CAAC,EAAU;QAC1B,IAAI,MAAM,CAAC,EAAE,CAAC,KAAK,GAAG,EAAE;YACtB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,OAAO;SACR;QACD,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAClB,CAAC;IAED,iBAAiB,CAAC,EAAU;QAC1B,IAAI,MAAM,CAAC,EAAE,CAAC,KAAK,GAAG,EAAE;YACtB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,OAAO;SACR;QACD,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;IAC9B,CAAC;IAED,cAAc,CAAC,EAAU;QACvB,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC,SAAS,CACpD,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAC1B,CACF,CAAC;IACJ,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QAEpB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,iCAAiC,EAAE,OAAO,EAAE;gBAC3D,OAAO,EAAE,IAAI;aACd,CAAC,CAAC;YACH,OAAO;SACR;QAED,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QACrC,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC;QAEpE,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CACtD,CAAC,IAAI,EAAE,EAAE;YACP,MAAM,GAAG,GAAG,iCAAiC,CAAC;YAC9C,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,SAAS;gBACf,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;YACH,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAC1B,CACF,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,OAAO;QACL,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;;oFArIU,kBAAkB;kGAAlB,kBAAkB;QCtB/B,iFACE;QAAA,wEACE;QAAA,2EACF;QAAA,4DAAK;QACP,4DAAc;QACd,yEACE;QAAA,sEAAqB;QAEnB,yEACE;QAAA,yEACE;QACA,+EAAuC;QACzC,4DAAM;QAEN,yEACI;QAAA,yEACI;QAAA,0EACI;QAAA,0EACI;QAAA,0EACI;QAAA,sEAAI;QAAA,2GAA0C;QAAA,yEAAuB;QAAA,oEAAiC;QAAC,qFAAmB;QAAA,4DAAI;QAAA,4DAAK;QACnI,2EACI;QAAA,yEACI;QAAA,oEAAgC;QACpC,4DAAI;QACR,4DAAM;QACV,4DAAM;QACN,2EAEI;QAAA,4EACI;QAAA,2EAAwB;QAAA,6EAAsC;QAAA,0EAAc;QAAA,oEAA6C;QAAA,4DAAQ;QAC7H,2EACI;QAAA,2EAA6B;QAAA,4EAAgC;QAAA,oEAA2B;QAAA,4DAAO;QAC3F,wEAA8G;QADlH,4DAA6B;QAEzB,qHAAsH;QACtH,qHAAqH;QAC7H,4DAAM;QACV,4DAAM;QAEN,2EAAwB;QAAA,6EAAsC;QAAA,iEAAK;QAAA,oEAA6C;QAAA,4DAAQ;QACtH,2EACI;QAAA,2EAA6B;QAAA,4EAAgC;QAAA,oEAA2B;QAAA,4DAAO;QAC3F,wEAA0F;QAD9F,4DAA6B;QAEzB,qHAAkG;QAClG,qHAAiG;QACzG,4DAAM;QACR,4DAAM;QAEN,2EAAwB;QAAA,6EAAsC;QAAA,0EAAS;QAAA,oEAA6C;QAAA,4DAAQ;QAE1H,2EACE;QAAA,2EACI;QAAA,uEACE;QAAA,2EACE;QAAA,8EACI;QADyF,mJAAU,0CAAsC,IAAC;QAC1I,8EAAoB;QAAA,8EAAkB;QAAA,4DAAS;QAC/C,uHAA4D;QAChE,4DAAS;QACP,qHAAqG;QACzG,4DAAM;QACN,iHACE;QAOF,iHACE;QAGF,iHACE;QAGF,iHACE;QAGF,iHACE;QAEF,iHACE;QAEN,4DAAM;QACR,4DAAM;QAER,4DAAM;QACR,4DAAM;QAEN,2EAAwB;QAAA,6EAAsC;QAAA,iEAAK;QAAA,oEAA6C;QAAA,4DAAQ;QACtH,2EACI;QAAA,2EAA6B;QAAA,4EAAgC;QAAA,oEAA2B;QAAA,4DAAO;QAC3F,wEAAuH;QAD3H,4DAA6B;QAEzB,qHAAkG;QAClG,qHAAiG;QACzG,4DAAM;QACR,4DAAM;QAEN,2EAAwB;QAAA,6EAAsC;QAAA,mEAAO;QAAA,oEAA6C;QAAA,4DAAQ;QACxH,2EACI;QAAA,2EAA6B;QAAA,4EAAgC;QAAA,oEAAwB;QAAA,4DAAO;QACxF,wEAA6F;QADjG,4DAA6B;QAEzB,qHAAoG;QACpG,qHAAmG;QAC3G,4DAAM;QACR,4DAAM;QAEN,2EAAwB;QAAA,6EAAsC;QAAA,qEAAS;QAAA,4DAAQ;QAC7E,2EACI;QAAA,2EAA6B;QAAA,4EAAgC;QAAA,oEAAyB;QAAA,4DAAO;QACzF,wEAAkG;QADtG,4DAA6B;QAEzB,qHAA0G;QAC1G,qHAAyG;QACjH,4DAAM;QACR,4DAAM;QAEN,2EAAwB;QAAA,6EAAsC;QAAA,kFAAY;QAAA,oEAA6C;QAAA,4DAAQ;QAC3H,4EACI;QAAA,4EAA6B;QAAA,6EAAgC;QAAA,qEAA6B;QAAA,4DAAO;QAC7F,4EAAsH;QACtH,uHAAgH;QAChH,uHAA+G;QACnH,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,uEAAkC;QAClC,4EACI;QAAA,4EACI;QAAA,+EAAiF;QAAA,qEAA2B;QAAC,oEAAM;QAAA,4DAAS;QAC5H,+EAAmF;QAA7B,4IAAS,sBAAkB,IAAC;QAAC,qEAA2B;QAAC,uEAAS;QAAA,4DAAS;QACrI,4DAAM;QACV,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACR,4DAAM;QACV,4DAAM;;QA9IsB,4EAAqB;QA4BO,2DAAkB;QAAlB,+EAAkB;QAKzB,2DAA8E;QAA9E,gJAA8E;QAC9E,0DAA+E;QAA/E,iJAA+E;QAQjF,2DAA0D;QAA1D,4HAA0D;QAC1D,0DAA2D;QAA3D,6HAA2D;QAYpD,2DAA8B;QAA9B,gFAA8B;QAEjC,0DAA+D;QAA/D,iIAA+D;QAEpD,0DAAqB;QAArB,mFAAqB;QAQrB,0DAAuB;QAAvB,qFAAuB;QAIvB,0DAAuB;QAAvB,qFAAuB;QAIvB,0DAAuB;QAAvB,qFAAuB;QAIvB,0DAAuB;QAAvB,qFAAuB;QAGvB,0DAAuB;QAAvB,qFAAuB;QAatC,2DAA0D;QAA1D,4HAA0D;QAC1D,0DAA2D;QAA3D,6HAA2D;QAQ3D,2DAA4D;QAA5D,8HAA4D;QAC5D,0DAA6D;QAA7D,+HAA6D;QAQ7D,0DAAkE;QAAlE,oIAAkE;QAClE,0DAAmE;QAAnE,qIAAmE;QAQjE,2DAAwE;QAAxE,0IAAwE;QACxE,0DAAyE;QAAzE,2IAAyE;;6FDrG7G,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AErBD;AAAA;AAAA;AAAA;AAAsC;;;;;;;;;;;;;ACAtC;AAAA;AAAA;AAAA;AAA0C;;;AAGnC,MAAM,eAAe;;8EAAf,eAAe;+FAAf,eAAe;QADJ,2EAA+B;;6FAC1C,eAAe;cAD3B,uDAAS;eAAC,EAAE,QAAQ,EAAE,iCAAiC,EAAE;;;;;;;;;;;;;;ACF1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4B;AACA;AACH;AACU;;;;;;;;;;;;;ACHnC;AAAA;AAAA;AAAA;AAAmC;;;;;;;;;;;;;ACAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICoDmC,oEAAsC;IAAA,uDAAmG;IAAA,4DAAI;;;IAAvG,0DAAmG;IAAnG,0LAAmG;;;IAA5L,qEAAmD;IAAA,0HAAsC;IAAuG,4DAAK;;;IAA/I,0DAAkC;IAAlC,sFAAkC;;;;IAH1F,yEACE;IAAA,qEAAK;IAAA,uDAA0B;IAAA,4DAAK;IACpC,qEAAK;IAAA,uDAAgB;IAAA,4DAAK;IAC1B,uHAAmD;;;IACnD,qEAAK;IAAA,uDAAgB;IAAA,4DAAK;IAC1B,sEAAK;IAAA,wDAAiB;IAAA,4DAAK;IAC3B,sEAAK;IAAA,wDAAoB;IAAA,4DAAK;IAC9B,sEAAK;IAAA,wDAAuB;IAAA,4DAAK;IACjC,sEACE;IAAA,yEACE;IAAA,8EAAuE;IAAA,kEAAM;IAAA,4DAAS;IACxF,4DAAI;IACN,4DAAK;IACP,4DAAK;;;IAZE,0DAA0B;IAA1B,kGAA0B;IAC1B,0DAAgB;IAAhB,wFAAgB;IACjB,0DAA8C;IAA9C,gSAA8C;IAC7C,0DAAgB;IAAhB,wFAAgB;IAChB,0DAAiB;IAAjB,yFAAiB;IACjB,0DAAoB;IAApB,4FAAoB;IACpB,0DAAuB;IAAvB,+FAAuB;IAEvB,0DAAqC;IAArC,gLAAqC;;;IAxBpD,0EACI;IAAA,4EACE;IAAA,wEACE;IAAA,qEACA;IAAA,qEAAI;IAAA,+EAAe;IAAA,4DAAK;IACxB,qEAAI;IAAA,+DAAI;IAAA,4DAAK;IACb,qEAAI;IAAA,wEAAQ;IAAA,4DAAK;IACjB,sEAAI;IAAA,gEAAI;IAAA,4DAAK;IACb,sEAAI;IAAA,kEAAM;IAAA,4DAAK;IACf,sEAAI;IAAA,oEAAQ;IAAA,4DAAK;IACjB,sEAAI;IAAA,iFAAW;IAAA,4DAAK;IACpB,sEAAI;IAAA,0EAAI;IAAA,4DAAK;IACb,4DAAK;IACP,4DAAQ;IACR,yEACE;IAAA,qHACE;IAaJ,4DAAQ;IACV,4DAAQ;IACZ,4DAAM;;;IAhBqB,2DAAsC;IAAtC,6FAAsC;;;IAiBjE,qEACE;IAAA,sFAA0B;IAAA,gEAC1B;IAAA,wEACE;IAAA,6EAAsE;IAAA,iFAAsB;IAAA,4DAAS;IACvG,4DAAI;IACN,4DAAK;;AD9DtB,MAAM,eAAe;IAO1B,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAN1C,kBAAa,GAAmB,EAAE,CAAC;QAE3C,aAAQ,GAAc,EAAE,CAAC;QAEzB,sBAAiB,GAAc,EAAE,CAAC;IAEmB,CAAC;IAEtD,QAAQ;QACN,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC;IAC3E,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,SAAS,CACpC,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,QAAQ,CAAC;QACzC,CAAC,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAC1B,CACF,CAAC;IACJ,CAAC;IAED,qBAAqB,CAAC,IAAY;QAChC,IAAI,CAAC,IAAI,EAAE;YACT,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,QAAQ,CAAC;SACxC;aAAM;YACL,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAClD,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,CAChE,CAAC;SACH;IACH,CAAC;;8EArCU,eAAe;+FAAf,eAAe;;QCT5B,yEACE;QAAA,sEAAqB;QAEnB,yEACE;QAAA,yEACE;QACA,+EAAuC;QACzC,4DAAM;QAEN,yEACE;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,sEAAI;QAAA,2GAA+C;QAAA,4DAAK;QACxD,0EACI;QAAA,wEACI;QAAA,oEAAgC;QACpC,4DAAI;QACR,4DAAM;QAEV,4DAAM;QACN,2EACE;QAAA,iFAQF;QAFM,oRAAS,oCAA0C,IAAC;QANxD,4DAQF;QAAA,4DAAM;QACN,2EAEI;QAAA,+GACI;QA+BJ,4GACE;QAKN,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,4DAAM;QACV,4DAAM;;QA7CgD,2DAAgC;QAAhC,yFAAgC;QAgC1D,0DAAiC;QAAjC,0FAAiC;;6FDzDhD,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiC;AACM;;;;;;;;;;;;;ACDvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AAEc;AAMjC;AACgD;;;AAE/D,MAAM,YAAY,GAAW;IAClC;QACE,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,2DAAe;QAC1B,WAAW,EAAE,CAAC,wDAAgB,CAAC;QAE/B,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,2DAAe;gBAC1B,WAAW,EAAE,CAAC,4DAAoB,CAAC;aACpC;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,8DAAkB;gBAC7B,WAAW,EAAE,CAAC,4DAAoB,CAAC;aACpC;YACD;gBACE,IAAI,EAAE,sBAAsB;gBAC5B,SAAS,EAAE,8DAAkB;aAC9B;SACF;KACF;CACF,CAAC;AAOK,MAAM,mBAAmB;;kGAAnB,mBAAmB;gKAAnB,mBAAmB,kBAJrB,CAAC,4DAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;QAEpC,4DAAY;mIAEX,mBAAmB,uFAFpB,4DAAY;6FAEX,mBAAmB;cAL/B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;gBAE9C,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACxCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAUkB;AAErC;;;;;;;;;;ICeO,4EAAoH;IAAA,6DAAE;IAAA,4DAAQ;;;IAC9H,4EAAmH;IAAA,0FAA0B;IAAA,4DAAQ;;;IAOrJ,4EAAgH;IAAA,6DAAE;IAAA,4DAAQ;;;IAC1H,4EAA+G;IAAA,kGAA6B;IAAA,4DAAQ;;;IAUtJ,4EAAoH;IAAA,6DAAE;IAAA,4DAAQ;;;IAC9H,4EAAmH;IAAA,8FAA8B;IAAA,4DAAQ;;;IASrJ,6EAAwE;IAAA,uDAAe;IAAA,4DAAS;;;IAA9C,yFAAqB;IAAC,0DAAe;IAAf,8EAAe;;;IAEzF,4EAAgI;IAAA,6DAAE;IAAA,4DAAQ;;;IAC1I,4EAA+H;IAAA,gGAAqC;IAAA,4DAAQ;;;IAUlL,4EAAgH;IAAA,6DAAE;IAAA,4DAAQ;;;IAC1H,4EAA+G;IAAA,6GAAmC;IAAA,4DAAQ;;ADlDnL,MAAM,kBAAkB;IAiB7B,YACU,UAAsC,EACtC,KAAoB,EACpB,KAAqB,EACrB,EAAe,EACf,mBAAwC;QAJxC,eAAU,GAAV,UAAU,CAA4B;QACtC,UAAK,GAAL,KAAK,CAAe;QACpB,UAAK,GAAL,KAAK,CAAgB;QACrB,OAAE,GAAF,EAAE,CAAa;QACf,wBAAmB,GAAnB,mBAAmB,CAAqB;QArB1C,kBAAa,GAAmB,EAAE,CAAC;QAE3C,yBAAoB,GAA0B,EAAE,CAAC;QAEjD,wBAAmB,GAAG,EAAyB,CAAC;QAEhD,cAAS,GAAG,EAAe,CAAC;QAE5B,YAAO,GAAG,EAAa,CAAC;IAcrB,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAC/D,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,wBAAwB,EAAE,CAAC;IAClC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC;IAC3E,CAAC;IAED,SAAS;QACP,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,aAAa,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxC,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,aAAa,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxC,mBAAmB,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACvC,CAAC,CAAC;IACL,CAAC;IAED,wBAAwB;QACtB,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,SAAS,CACtE,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC5B,CAAC,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAC1B,CACF,CAAC;IACJ,CAAC;IAED,eAAe;QACb,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,SAAS,CAChC,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACnC,CAAC,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAC1B,CACF,CAAC;IACJ,CAAC;IAED,qBAAqB;QACnB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,iCAAiC,EAAE,OAAO,EAAE;gBAC3D,OAAO,EAAE,IAAI;aACd,CAAC,CAAC;YACH,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAC9B,OAAO;SACR;QAED,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QACpC,MAAM,qBAAqB,GAAG,MAAM,CAClC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,KAAK,CAC3C,CAAC;QAEF,IAAI,CAAC,YAAY,CAAC,mBAAmB,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CACpE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,qBAAqB,CACtC,CAAC;QACF,IAAI,CAAC,YAAY,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACnD,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAC1D,CAAC,IAAI,EAAE,EAAE;YACP,MAAM,GAAG,GAAG,0CAA0C,CAAC;YAEvD,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,SAAS;gBACf,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;YACH,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAC1B,CACF,CAAC;IACJ,CAAC;IAED,sBAAsB;QACpB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,aAAa,EAAE,CAAC;QAC/C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,aAAa,EAAE,CAAC;QAC7C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,aAAa,EAAE,CAAC;QAC/C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,aAAa,EAAE,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,aAAa,EAAE,CAAC;IAC3C,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACnB,aAAa,EAAE,IAAI,CAAC,YAAY,CAAC,aAAa;YAC9C,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,WAAW;YAC1C,aAAa,EAAE,IAAI,CAAC,YAAY,CAAC,aAAa;YAC9C,mBAAmB,EAAE,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,EAAE;SAC9D,CAAC,CAAC;IACL,CAAC;IAED,OAAO;QACL,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;;oFA9HU,kBAAkB;kGAAlB,kBAAkB;QCpB/B,yEACE;QAAA,sEAAqB;QAEnB,yEACE;QAAA,yEACE;QACA,+EAAuC;QACzC,4DAAM;QACJ,yEACE;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,sEAAI;QAAA,2GAA0C;QAAA,wEAAuB;QAAA,mEAAiC;QAAC,qFAAmB;QAAA,4DAAI;QAAA,4DAAK;QACnI,2EACI;QAAA,yEACI;QAAA,oEAAgC;QACpC,4DAAI;QACR,4DAAM;QACV,4DAAM;QACN,2EAEE;QAAA,4EACE;QAAA,2EAAwB;QAAA,6EAAsC;QAAA,4EAAW;QAAA,oEAA6C;QAAA,4DAAQ;QAC1H,2EACI;QAAA,2EAA6B;QAAA,4EAAgC;QAAA,oEAA2B;QAAA,4DAAO;QAC3F,wEAA4G;QADhH,4DAA6B;QAEzB,qHAAoH;QACpH,qHAAmH;QAC3H,4DAAM;QACV,4DAAM;QACN,2EAAwB;QAAA,6EAAsC;QAAA,oFAAc;QAAA,oEAA6C;QAAA,4DAAQ;QAC7H,2EACI;QAAA,2EAA6B;QAAA,4EAAgC;QAAA,oEAA6B;QAAA,4DAAO;QAC7F,wEAAwG;QAD5G,4DAA6B;QAEzB,qHAAgH;QAChH,qHAA+G;QACvH,4DAAM;QACV,4DAAM;QAEN,2EAAoC;QAAA,6EAAsC;QAAA,gFAAe;QAAA,oEAA6C;QAAA,4DAAQ;QAC1I,2EACI;QAAA,2EACI;QAAA,4EAAgC;QAAA,oEAA4B;QAAA,4DAAO;QACnE,wEACJ;QAAA,4DAAM;QACJ,qHAAoH;QACpH,qHAAmH;QAEzH,4DAAM;QACV,4DAAM;QAEN,2EAAwB;QAAA,6EAAsC;QAAA,+EAAmB;QAAA,oEAA6C;QAAA,4DAAQ;QAClI,2EACI;QAAA,2EACI;QAAA,8EACE;QAAA,uHAAwE;QAC1E,4DAAS;QACT,qHAAgI;QAChI,qHAA+H;QACnI,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EAAwB;QAAA,6EAAsC;QAAA,8EAAa;QAAA,oEAA6C;QAAA,4DAAQ;QAC9H,2EACE;QAAA,2EACI;QAAA,4EAAgC;QAAA,oEAA2B;QAAA,4DAAO;QAClE,wEACJ;QAAA,4DAAM;QACJ,qHAAgH;QAChH,qHAA+G;QACnH,4DAAM;QACR,4DAAM;QACN,sEAAkC;QAC9B,2EACI;QAAA,2EACI;QAAA,8EAAqD;QAAA,oEAA2B;QAAC,mEAAM;QAAA,4DAAS;QAChG,8EAAmH;QAA7D,2IAAS,2BAAuB,IAAC;QAA4B,oEAA2B;QAAC,sEAAS;QAAA,4DAAS;QACrK,4DAAM;QACV,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACR,4DAAM;QACV,4DAAM;;QAjEgD,2DAAkB;QAAlB,+EAAkB;QAK3B,2DAA4E;QAA5E,8IAA4E;QAC5E,0DAA6E;QAA7E,+IAA6E;QAO7E,2DAAwE;QAAxE,0IAAwE;QACxE,0DAAyE;QAAzE,2IAAyE;QAU3E,2DAA4E;QAA5E,8IAA4E;QAC5E,0DAA6E;QAA7E,+IAA6E;QASxE,0DAAyC;QAAzC,6FAAyC;QAE5C,0DAAwF;QAAxF,0JAAwF;QACxF,0DAAyF;QAAzF,2JAAyF;QAU/F,2DAAwE;QAAxE,0IAAwE;QACxE,0DAAyE;QAAzE,2IAAyE;;6FDlDnG,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEnBD;AAAA;AAAA;AAAA;AAAsC;;;;;;;;;;;;;ACAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAWnB;AAEqC;;;;;;;;;ICc1B,4EAAoH;IAAA,6DAAE;IAAA,4DAAQ;;;IAC9H,4EAAmH;IAAA,0FAA0B;IAAA,4DAAQ;;;IAOrJ,4EAAgH;IAAA,6DAAE;IAAA,4DAAQ;;;IAC1H,4EAA+G;IAAA,kGAA6B;IAAA,4DAAQ;;;IAUtJ,4EAAoH;IAAA,6DAAE;IAAA,4DAAQ;;;IAC9H,4EAAmH;IAAA,8FAA8B;IAAA,4DAAQ;;;IAU7J,4EAAgH;IAAA,6DAAE;IAAA,4DAAQ;;;IAC1H,4EAA+G;IAAA,6GAAmC;IAAA,4DAAQ;;;IAOlJ,6EAAwE;IAAA,uDAAe;IAAA,4DAAS;;;IAA9C,yFAAqB;IAAC,0DAAe;IAAf,8EAAe;;;IAEzF,4EAAgI;IAAA,6DAAE;IAAA,4DAAQ;;;IAC1I,4EAA+H;IAAA,gGAAqC;IAAA,4DAAQ;;;IAS5K,6EAAqE;IAAA,uDAAoB;IAAA,4DAAS;;;IAAnD,yFAAqB;IAAC,0DAAoB;IAApB,mFAAoB;;;IAE3F,4EAA0H;IAAA,6DAAE;IAAA,4DAAQ;;;IACpI,4EAAyH;IAAA,6FAAkC;IAAA,4DAAQ;;AD3DpM,MAAM,kBAAkB;IAmB7B,YACU,UAAsC,EACtC,UAAmC,EACnC,KAAoB,EACpB,EAAe,EACf,mBAAwC;QAJxC,eAAU,GAAV,UAAU,CAA4B;QACtC,eAAU,GAAV,UAAU,CAAyB;QACnC,UAAK,GAAL,KAAK,CAAe;QACpB,OAAE,GAAF,EAAE,CAAa;QACf,wBAAmB,GAAnB,mBAAmB,CAAqB;QAvB1C,kBAAa,GAAmB,EAAE,CAAC;QAE3C,yBAAoB,GAA0B,EAAE,CAAC;QAEjD,wBAAmB,GAAG,EAAyB,CAAC;QAEhD,sBAAiB,GAAuB,EAAE,CAAC;QAE3C,qBAAgB,GAAG,EAAsB,CAAC;QAE1C,cAAS,GAAG,EAAe,CAAC;QAE5B,YAAO,GAAG,EAAa,CAAC;IAYrB,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC;IAC3E,CAAC;IAED,SAAS;QACP,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,aAAa,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxC,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,aAAa,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxC,mBAAmB,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,gBAAgB,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC5C,CAAC,CAAC;IACL,CAAC;IAED,eAAe;QACb,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,SAAS,CAChC,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACnC,CAAC,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAC1B,CACF,CAAC;IACJ,CAAC;IAED,eAAe;QACb,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,SAAS,CAChC,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAChC,CAAC,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAC1B,CACF,CAAC;IACJ,CAAC;IAED,qBAAqB;QACnB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,iCAAiC,EAAE,OAAO,EAAE;gBAC3D,OAAO,EAAE,IAAI;aACd,CAAC,CAAC;YACH,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAC9B,OAAO;SACR;QAED,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QACpC,MAAM,qBAAqB,GAAG,MAAM,CAClC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,KAAK,CAC3C,CAAC;QACF,MAAM,kBAAkB,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC,CAAC;QAE3E,IAAI,CAAC,YAAY,CAAC,mBAAmB,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CACpE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,qBAAqB,CACtC,CAAC;QAEF,IAAI,CAAC,YAAY,CAAC,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAC9D,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,kBAAkB,CACnC,CAAC;QAEF,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAC1D,CAAC,IAAI,EAAE,EAAE;YACP,MAAM,GAAG,GAAG,0CAA0C,CAAC;YAEvD,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,SAAS;gBACf,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;YACH,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAC1B,CACF,CAAC;IACJ,CAAC;IAED,sBAAsB;QACpB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,aAAa,EAAE,CAAC;QAC/C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,aAAa,EAAE,CAAC;QAC7C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,aAAa,EAAE,CAAC;QAC/C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,aAAa,EAAE,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,aAAa,EAAE,CAAC;QAClD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,aAAa,EAAE,CAAC;IAC/C,CAAC;IAED,OAAO;QACL,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;;oFA5HU,kBAAkB;kGAAlB,kBAAkB;QCrB/B,yEACE;QAAA,sEAAqB;QAEnB,yEACE;QAAA,yEACE;QACA,+EAAuC;QACzC,4DAAM;QACJ,yEACE;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,sEAAI;QAAA,2GAA0C;QAAA,wEAAuB;QAAA,mEAAiC;QAAC,qFAAmB;QAAA,4DAAI;QAAA,4DAAK;QACnI,2EACI;QAAA,yEACI;QAAA,oEAAgC;QACpC,4DAAI;QACR,4DAAM;QACV,4DAAM;QACN,2EAEI;QAAA,4EACI;QAAA,2EAAwB;QAAA,6EAAsC;QAAA,4EAAW;QAAA,oEAA6C;QAAA,4DAAQ;QAC1H,2EACI;QAAA,2EAA6B;QAAA,4EAAgC;QAAA,oEAA2B;QAAA,4DAAO;QAC3F,wEAA4G;QADhH,4DAA6B;QAEzB,qHAAoH;QACpH,qHAAmH;QAC3H,4DAAM;QACV,4DAAM;QACN,2EAAwB;QAAA,6EAAsC;QAAA,oFAAc;QAAA,oEAA6C;QAAA,4DAAQ;QAC7H,2EACI;QAAA,2EAA6B;QAAA,4EAAgC;QAAA,oEAA6B;QAAA,4DAAO;QAC7F,wEAAwG;QAD5G,4DAA6B;QAEzB,qHAAgH;QAChH,qHAA+G;QACvH,4DAAM;QACV,4DAAM;QAEN,2EAAoC;QAAA,6EAAsC;QAAA,gFAAe;QAAA,oEAA6C;QAAA,4DAAQ;QAC1I,2EACI;QAAA,2EACI;QAAA,4EAAgC;QAAA,oEAA4B;QAAA,4DAAO;QACnE,wEACJ;QAAA,4DAAM;QACJ,qHAAoH;QACpH,qHAAmH;QAEzH,4DAAM;QACV,4DAAM;QACN,2EAAwB;QAAA,6EAAsC;QAAA,8EAAa;QAAA,oEAA6C;QAAA,4DAAQ;QAC9H,2EACE;QAAA,2EACI;QAAA,4EAAgC;QAAA,oEAA2B;QAAA,4DAAO;QAClE,wEACJ;QAAA,4DAAM;QACJ,qHAAgH;QAChH,qHAA+G;QACnH,4DAAM;QACR,4DAAM;QACN,2EAAwB;QAAA,6EAAsC;QAAA,+EAAmB;QAAA,oEAA6C;QAAA,4DAAQ;QAClI,2EACI;QAAA,2EACI;QAAA,8EACE;QAAA,uHAAwE;QAC1E,4DAAS;QACT,qHAAgI;QAChI,qHAA+H;QACnI,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,2EAAwB;QAAA,6EAAsC;QAAA,4EAAgB;QAAA,oEAA6C;QAAA,4DAAQ;QACjI,2EACI;QAAA,2EACI;QAAA,8EACE;QAAA,uHAAqE;QACvE,4DAAS;QACT,qHAA0H;QAC1H,qHAAyH;QAC7H,4DAAM;QACV,4DAAM;QACV,4DAAM;QACJ,sEAAkC;QAClC,2EACI;QAAA,2EACI;QAAA,8EAAqD;QAAA,oEAA2B;QAAC,mEAAM;QAAA,4DAAS;QAChG,8EAAmH;QAA7D,2IAAS,2BAAuB,IAAC;QAA4B,oEAA2B;QAAC,sEAAS;QAAA,4DAAS;QACrK,4DAAM;QACV,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACR,4DAAM;QACV,4DAAM;;QA5EkD,2DAAkB;QAAlB,+EAAkB;QAKzB,2DAA4E;QAA5E,8IAA4E;QAC5E,0DAA6E;QAA7E,+IAA6E;QAO7E,2DAAwE;QAAxE,0IAAwE;QACxE,0DAAyE;QAAzE,2IAAyE;QAU3E,2DAA4E;QAA5E,8IAA4E;QAC5E,0DAA6E;QAA7E,+IAA6E;QAUjF,2DAAwE;QAAxE,0IAAwE;QACxE,0DAAyE;QAAzE,2IAAyE;QAOhE,0DAAyC;QAAzC,6FAAyC;QAE5C,0DAAwF;QAAxF,0JAAwF;QACxF,0DAAyF;QAAzF,2JAAyF;QASxF,0DAAsC;QAAtC,0FAAsC;QAEzC,0DAAkF;QAAlF,oJAAkF;QAClF,0DAAmF;QAAnF,qJAAmF;;6FD3DrH,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEpBD;AAAA;AAAA;AAAA;AAAsC;;;;;;;;;;;;;ACAtC;AAAA;AAAA;AAAA;AAA0C;;;AAGnC,MAAM,qBAAqB;;0FAArB,qBAAqB;qGAArB,qBAAqB;QADV,2EAA+B;;6FAC1C,qBAAqB;cADjC,uDAAS;eAAC,EAAE,QAAQ,EAAE,iCAAiC,EAAE;;;;;;;;;;;;;;ACF1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4B;AACA;AACH;AACW;AACH;AACS;;;;;;;;;;;;;ACL1C;AAAA;AAAA;AAAA;AAA8C;;;;;;;;;;;;;ACA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICyClB,yEACE;IAAA,qEAAK;IAAA,uDAAc;IAAA,4DAAK;IACxB,qEAAK;IAAA,uDAAqB;IAAA,4DAAK;IACjC,4DAAK;;;IAFE,0DAAc;IAAd,sFAAc;IACd,0DAAqB;IAArB,6FAAqB;;AD/BrD,MAAM,wBAAwB;IAKnC,YAAoB,uBAAgD;QAAhD,4BAAuB,GAAvB,uBAAuB,CAAyB;QAJ5D,kBAAa,GAAmB,EAAE,CAAC;QAE3C,sBAAiB,GAAuB,EAAE,CAAC;IAE4B,CAAC;IAExE,QAAQ;QACN,IAAI,CAAC,6BAA6B,EAAE,CAAC;IACvC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC;IAC3E,CAAC;IAED,6BAA6B;QAC3B,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,uBAAuB,CAAC,MAAM,EAAE,CAAC,SAAS,CAC7C,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAChC,CAAC,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAC1B,CACF,CAAC;IACJ,CAAC;;gGAxBU,wBAAwB;wGAAxB,wBAAwB;QCZrC,yEACE;QAAA,sEAAqB;QAEnB,yEACE;QAAA,yEACE;QACA,+EAAuC;QACzC,4DAAM;QAEN,yEACE;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,sEAAI;QAAA,2GAA+C;QAAA,4DAAK;QACxD,0EACI;QAAA,wEACI;QAAA,oEAAgC;QACpC,4DAAI;QACR,4DAAM;QAEV,4DAAM;QASN,2EAEI;QAAA,2EACI;QAAA,6EACE;QAAA,yEACE;QAAA,sEACE;QAAA,sEAAI;QAAA,uEAAM;QAAA,4DAAK;QACf,sEAAI;QAAA,+EAAS;QAAA,4DAAK;QACpB,4DAAK;QACP,4DAAQ;QACR,yEACE;QAAA,qHACE;QAGJ,4DAAQ;QACV,4DAAQ;QACZ,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,4DAAM;QACV,4DAAM;;QAd6C,2DAAsC;QAAtC,0FAAsC;;6FD7B5E,wBAAwB;cALpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,uBAAuB;gBACjC,WAAW,EAAE,oCAAoC;gBACjD,SAAS,EAAE,CAAC,mCAAmC,CAAC;aACjD;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAA2C;;;;;;;;;;;;;ACA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICyClB,qEACE;IAAA,qEAAI;IAAA,uDAAa;IAAA,4DAAK;IACtB,qEAAI;IAAA,uDAAe;IAAA,4DAAK;IAC1B,4DAAK;;;IAFC,0DAAa;IAAb,2EAAa;IACb,0DAAe;IAAf,6EAAe;;AD/B9C,MAAM,sBAAsB;IAKjC,YAAoB,UAAsC;QAAtC,eAAU,GAAV,UAAU,CAA4B;QAJlD,kBAAa,GAAmB,EAAE,CAAC;QAE3C,wBAAmB,GAA0B,EAAE,CAAC;IAEa,CAAC;IAE9D,QAAQ;QACN,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC;IAC3E,CAAC;IAEM,UAAU,CAAC,GAAW;QAC3B,MAAM,IAAI,GAAmB,QAAQ,CAAC,IAAI,CAAC;QAC3C,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAChD,MAAM,CAAC,SAAS,GAAG,EAAE,CAAC;QACtB,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;QACjB,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAC3B,CAAC;IAED,eAAe;QACb,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,SAAS,CAChC,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAClC,CAAC,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAC1B,CACF,CAAC;IACJ,CAAC;;4FAlCU,sBAAsB;sGAAtB,sBAAsB;QCZnC,yEACE;QAAA,sEAAqB;QAEnB,yEACE;QAAA,yEACE;QACA,+EAAuC;QACzC,4DAAM;QAEN,yEACE;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,sEAAI;QAAA,6GAA4C;QAAA,4DAAK;QACrD,0EACI;QAAA,wEACI;QAAA,oEAAgC;QACpC,4DAAI;QACR,4DAAM;QAEV,4DAAM;QASN,2EAEI;QAAA,2EACI;QAAA,6EACE;QAAA,yEACE;QAAA,sEACE;QAAA,sEAAI;QAAA,uEAAM;QAAA,4DAAK;QACf,sEAAI;QAAA,gEAAI;QAAA,4DAAK;QACf,4DAAK;QACP,4DAAQ;QACR,yEACE;QAAA,mHACE;QAGJ,4DAAQ;QACV,4DAAQ;QACZ,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,4DAAM;QACV,4DAAM;;QAd8B,2DAAwC;QAAxC,4FAAwC;;6FD7B/D,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAmC;;;;;;;;;;;;;ACAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;IC6ClB,yEACE;IAAA,qEAAK;IAAA,uDAAyB;IAAA,4DAAK;IACnC,qEAAK;IAAA,uDAAuB;IAAA,4DAAK;IACjC,qEAAK;IAAA,uDAAyB;IAAA,4DAAK;IACnC,qEAAK;IAAA,uDAAqC;IAAA,4DAAK;IAC/C,qEAAK;IAAA,wDAAsC;IAAA,4DAAK;IAEhD,sEACE;IAAA,yEACE;IAAA,8EAAuE;IAAA,kEAAM;IAAA,4DAAS;IACxF,4DAAI;IACN,4DAAK;IACP,4DAAK;;;IAXE,0DAAyB;IAAzB,iGAAyB;IACzB,0DAAuB;IAAvB,+FAAuB;IACvB,0DAAyB;IAAzB,iGAAyB;IACzB,0DAAqC;IAArC,yJAAqC;IACrC,0DAAsC;IAAtC,8GAAsC;IAGtC,0DAA2C;IAA3C,sLAA2C;;AD5C3E,MAAM,eAAe;IAK1B,YAAoB,mBAAwC;QAAxC,wBAAmB,GAAnB,mBAAmB,CAAqB;QAJpD,kBAAa,GAAmB,EAAE,CAAC;QAE3C,kBAAa,GAAmB,EAAE,CAAC;IAE4B,CAAC;IAEhE,QAAQ;QACN,IAAI,CAAC,yBAAyB,EAAE,CAAC;IACnC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC;IAC3E,CAAC;IAED,yBAAyB;QACvB,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,SAAS,CACzC,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAClC,CAAC,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAC1B,CACF,CAAC;IACJ,CAAC;;8EAzBU,eAAe;+FAAf,eAAe;QCT5B,yEACE;QAAA,sEAAqB;QAEnB,yEACE;QAAA,yEACE;QACA,+EAAuC;QACzC,4DAAM;QAEN,yEACE;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,sEAAI;QAAA,2GAA+C;QAAA,4DAAK;QACxD,0EACI;QAAA,wEACI;QAAA,oEAAgC;QACpC,4DAAI;QACR,4DAAM;QAEV,4DAAM;QASN,2EAEI;QAAA,2EACI;QAAA,6EACE;QAAA,yEACE;QAAA,sEACE;QAAA,sEAAI;QAAA,2EAAU;QAAA,4DAAK;QACnB,sEAAI;QAAA,mFAAa;QAAA,4DAAK;QACtB,sEAAI;QAAA,+EAAc;QAAA,4DAAK;QACvB,sEAAI;QAAA,sFAAqB;QAAA,4DAAK;QAC9B,sEAAI;QAAA,8EAAkB;QAAA,4DAAK;QAC3B,sEAAI;QAAA,0EAAI;QAAA,4DAAK;QACf,4DAAK;QACP,4DAAQ;QACR,yEACE;QAAA,6GACE;QAYJ,4DAAQ;QACV,4DAAQ;QACZ,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,4DAAM;QACV,4DAAM;;QAvB6C,2DAAkC;QAAlC,sFAAkC;;6FDpCxE,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACA;AACM;AAEkB;AAQjD;AAMA;;AAuBf,MAAM,kBAAkB;;iGAAlB,kBAAkB;8JAAlB,kBAAkB,mBALlB;QACT,EAAE,OAAO,EAAE,kEAAW,EAAE,QAAQ,EAAE,sDAAc,EAAE;QAClD,EAAE,OAAO,EAAE,uEAAgB,EAAE,QAAQ,EAAE,wDAAgB,EAAE;KAC1D,YAVQ;YACP,4DAAY;YACZ,4DAAY;YACZ,oDAAY;YACZ,kDAAU;YACV,kEAAmB;SACpB;mIAMU,kBAAkB,mBAnB3B,iEAAqB;QACrB,8DAAkB;QAClB,8DAAkB;QAClB,2DAAe;QACf,oEAAwB;QACxB,kEAAsB,aAGtB,4DAAY;QACZ,4DAAY;QACZ,oDAAY;QACZ,kDAAU;QACV,kEAAmB;6FAOV,kBAAkB;cArB9B,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,iEAAqB;oBACrB,8DAAkB;oBAClB,8DAAkB;oBAClB,2DAAe;oBACf,oEAAwB;oBACxB,kEAAsB;iBACvB;gBACD,OAAO,EAAE;oBACP,4DAAY;oBACZ,4DAAY;oBACZ,oDAAY;oBACZ,kDAAU;oBACV,kEAAmB;iBACpB;gBACD,SAAS,EAAE;oBACT,EAAE,OAAO,EAAE,kEAAW,EAAE,QAAQ,EAAE,sDAAc,EAAE;oBAClD,EAAE,OAAO,EAAE,uEAAgB,EAAE,QAAQ,EAAE,wDAAgB,EAAE;iBAC1D;aACF;;;;;;;;;;;;;;ACzCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACO;;;;;;;;;;;;;ACD9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AAEc;AASjC;AACgD;;;AAE/D,MAAM,kBAAkB,GAAW;IACxC;QACE,IAAI,EAAE,eAAe;QACrB,SAAS,EAAE,iEAAqB;QAChC,WAAW,EAAE,CAAC,wDAAgB,CAAC;QAE/B,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,2DAAe;gBAC1B,WAAW,EAAE,CAAC,4DAAoB,CAAC;aACpC;YACD;gBACE,IAAI,EAAE,mBAAmB;gBACzB,SAAS,EAAE,kEAAsB;gBACjC,WAAW,EAAE,CAAC,4DAAoB,CAAC;aACpC;YACD;gBACE,IAAI,EAAE,sBAAsB;gBAC5B,SAAS,EAAE,oEAAwB;gBACnC,WAAW,EAAE,CAAC,4DAAoB,CAAC;aACpC;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,8DAAkB;gBAC7B,WAAW,EAAE,CAAC,4DAAoB,CAAC;aACpC;YACD,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,8DAAkB,EAAE;SAC3D;KACF;CACF,CAAC;AAOK,MAAM,yBAAyB;;wGAAzB,yBAAyB;4KAAzB,yBAAyB,kBAJ3B,CAAC,4DAAY,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;QAE1C,4DAAY;mIAEX,yBAAyB,uFAF1B,4DAAY;6FAEX,yBAAyB;cALrC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;gBAEpD,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AClDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyB;AACO;AACA;;;;;;;;;;;;;ACFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;AAkBrC;;;;;;;;;;;;ICkBK,yEACE;IAAA,wEACI;IADD,mXAA0C;IACzC,uDACJ;IAAA,4DAAI;IACN,4DAAK;;;IAFC,0DACJ;IADI,yFACJ;;;IAJJ,yEACE;IAAA,mHACE;IAIJ,4DAAK;;;IALyB,0DAAqC;IAArC,4FAAqC;;;IAe3D,oEACE;IAAA,uDACA;IAAA,gEACA;IAAA,uDACA;IAAA,gEACA;IAAA,uDACA;IAAA,gEAAK;IAAA,uDACP;IAAA,4DAAI;;;IANF,0DACA;IADA,8HACA;IACA,0DACA;IADA,gGACA;IACA,0DACA;IADA,yIACA;IAAK,0DACP;IADO,iGACP;;;IAdV,0EAEE;IAAA,0EACI;IAAA,qEAAI;IAAA,yEAAQ;IAAA,uDAAkB;IAAA,4DAAS;IAAA,4DAAK;IAE5C,0EACI;IAAA,yEAAQ;IAAA,uDAA0C;IAAA,4DAAS;IAC3D,kHACE;IAOF,4EAAqB;IAAA,iEAAK;IAAA,4DAAQ;IAAC,wDACvC;IAAA,4DAAU;IACd,4DAAM;IACR,4DAAM;;;IAfY,0DAAkB;IAAlB,oFAAkB;IAGlB,0DAA0C;IAA1C,qHAA0C;IAC/C,0DAA0C;IAA1C,6FAA0C;IAQV,0DACvC;IADuC,mGACvC;;;IAIN,4EAAwG;IAAA,6DAAE;IAAA,4DAAQ;;;IAClH,4EAAuG;IAAA,kFAAuB;IAAA,4DAAQ;;;;IAoBlI,yEACE;IAAA,wEACI;IADD,wXAA+C;IAC9C,uDACJ;IAAA,4DAAI;IACN,4DAAK;;;IAFC,0DACJ;IADI,kGACJ;;;IAJJ,yEACE;IAAA,mHACE;IAIJ,4DAAK;;;IALyB,0DAA2C;IAA3C,kGAA2C;;;IAMzE,4EAAsH;IAAA,6DAAE;IAAA,4DAAQ;;;IAChI,4EAAqH;IAAA,wFAA6B;IAAA,4DAAQ;;;IAS1I,4EAA4I;IAAA,6DAAE;IAAA,4DAAQ;;;IACtJ,4EAA2I;IAAA,0FAA0B;IAAA,4DAAQ;;;IAO7K,4EAAwI;IAAA,6DAAE;IAAA,4DAAQ;;;IAClJ,4EAAuI;IAAA,kGAA6B;IAAA,4DAAQ;;;IAU9K,4EAA4I;IAAA,6DAAE;IAAA,4DAAQ;;;IACtJ,4EAA2I;IAAA,8FAA8B;IAAA,4DAAQ;;;IAQjL,4EAAsI;IAAA,6DAAE;IAAA,4DAAQ;;;IAChJ,4EAAqI;IAAA,+EAAoB;IAAA,4DAAQ;;;IASrK,4EAAwI;IAAA,6DAAE;IAAA,4DAAQ;;;IAClJ,4EAAuI;IAAA,6GAAmC;IAAA,4DAAQ;;;IAO1K,6EAAwE;IAAA,uDAAe;IAAA,4DAAS;;;IAA9C,yFAAqB;IAAC,0DAAe;IAAf,8EAAe;;;IAEzF,4EAAwJ;IAAA,6DAAE;IAAA,4DAAQ;;;IAClK,4EAAuJ;IAAA,gGAAqC;IAAA,4DAAQ;;;IASpM,6EAAqE;IAAA,uDAAoB;IAAA,4DAAS;;;IAAnD,yFAAqB;IAAC,0DAAoB;IAApB,mFAAoB;;;IAE3F,4EAAkJ;IAAA,6DAAE;IAAA,4DAAQ;;;IAC5J,4EAAiJ;IAAA,6FAAkC;IAAA,4DAAQ;;;IAnE3M,0EACE;IAAA,2EACI;IAAA,0EAAwB;IAAA,4EAAsC;IAAA,2EAAW;IAAA,mEAA6C;IAAA,4DAAQ;IAC1H,0EACI;IAAA,0EAA6B;IAAA,2EAAgC;IAAA,mEAA2B;IAAA,4DAAO;IAC3F,wEAA4G;IADhH,4DAA6B;IAEzB,4HAA4I;IAC5I,4HAA2I;IACnJ,4DAAM;IACV,4DAAM;IACN,2EAAwB;IAAA,6EAAsC;IAAA,oFAAc;IAAA,oEAA6C;IAAA,4DAAQ;IAC7H,2EACI;IAAA,2EAA6B;IAAA,4EAAgC;IAAA,oEAA6B;IAAA,4DAAO;IAC7F,wEAAwG;IAD5G,4DAA6B;IAEzB,4HAAwI;IACxI,4HAAuI;IAC/I,4DAAM;IACV,4DAAM;IAEN,2EAAoC;IAAA,6EAAsC;IAAA,gFAAe;IAAA,oEAA6C;IAAA,4DAAQ;IAC1I,2EACI;IAAA,2EACI;IAAA,4EAAgC;IAAA,oEAA4B;IAAA,4DAAO;IACnE,wEACJ;IAAA,4DAAM;IACJ,4HAA4I;IAC5I,4HAA2I;IAEjJ,4DAAM;IACV,4DAAM;IACN,2EAAwB;IAAA,6EAAsC;IAAA,uEAAW;IAAA,oEAA6C;IAAA,4DAAQ;IAC5H,2EACI;IAAA,2EAA6B;IAAA,4EAAgC;IAAA,oEAA2B;IAAA,4DAAO;IAC3F,wEAAsG;IAD1G,4DAA6B;IAEzB,4HAAsI;IACtI,4HAAqI;IAC7I,4DAAM;IACR,4DAAM;IACN,2EAAwB;IAAA,6EAAsC;IAAA,8EAAa;IAAA,oEAA6C;IAAA,4DAAQ;IAC9H,2EACE;IAAA,2EACI;IAAA,4EAAgC;IAAA,oEAA2B;IAAA,4DAAO;IAClE,wEACJ;IAAA,4DAAM;IACJ,4HAAwI;IACxI,4HAAuI;IAC3I,4DAAM;IACR,4DAAM;IACN,2EAAwB;IAAA,6EAAsC;IAAA,+EAAmB;IAAA,oEAA6C;IAAA,4DAAQ;IAClI,2EACI;IAAA,2EACI;IAAA,8EACE;IAAA,8HAAwE;IAC1E,4DAAS;IACT,4HAAwJ;IACxJ,4HAAuJ;IAC3J,4DAAM;IACV,4DAAM;IACV,4DAAM;IAEN,2EAAwB;IAAA,6EAAsC;IAAA,4EAAgB;IAAA,oEAA6C;IAAA,4DAAQ;IACjI,2EACI;IAAA,2EACI;IAAA,8EACE;IAAA,8HAAqE;IACvE,4DAAS;IACT,4HAAkJ;IAClJ,4HAAiJ;IACrJ,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,sEAAkC;IACpC,4DAAO;IACT,4DAAM;;;IAxEoD,0DAA8B;IAA9B,8FAA8B;IAK/D,2DAAoG;IAApG,4KAAoG;IACpG,0DAAqG;IAArG,6KAAqG;IAOrG,2DAAgG;IAAhG,wKAAgG;IAChG,0DAAiG;IAAjG,yKAAiG;IAUnG,2DAAoG;IAApG,4KAAoG;IACpG,0DAAqG;IAArG,6KAAqG;IAQrG,2DAA8F;IAA9F,sKAA8F;IAC9F,0DAA+F;IAA/F,uKAA+F;IASnG,2DAAgG;IAAhG,wKAAgG;IAChG,0DAAiG;IAAjG,yKAAiG;IAOxF,0DAAyC;IAAzC,gGAAyC;IAE5C,0DAAgH;IAAhH,wLAAgH;IAChH,0DAAiH;IAAjH,yLAAiH;IAShH,0DAAsC;IAAtC,6FAAsC;IAEzC,0DAA0G;IAA1G,kLAA0G;IAC1G,0DAA2G;IAA3G,mLAA2G;;;IAkB5H,4EAAkG;IAAA,6DAAE;IAAA,4DAAQ;;;IAC5G,4EAAiG;IAAA,+EAAoB;IAAA,4DAAQ;;;;IAmC/I,yEACE;IAAA,qEAAK;IAAA,uDAAyB;IAAA,4DAAK;IACnC,qEAAK;IAAA,uDAAuB;IAAA,4DAAK;IACjC,qEAAK;IAAA,uDAA+C;;IAAA,4DAAK;IACzD,qEAAK;IAAA,uDAAsB;IAAA,4DAAK;IAChC,sEAAK;IAAA,wDAAqC;IAAA,4DAAK;IAC/C,sEAAK;IAAA,wDAAsC;IAAA,4DAAK;IAEhD,sEACI;IAAA,8EAA6I;IAAlG,8ZAAqE;IAA6B,mEAAO;IAAA,4DAAS;IACjK,4DAAK;IACP,4DAAK;;;IAVE,0DAAyB;IAAzB,kGAAyB;IACzB,0DAAuB;IAAvB,gGAAuB;IACvB,0DAA+C;IAA/C,gLAA+C;IAC/C,0DAAsB;IAAtB,+FAAsB;IACtB,0DAAqC;IAArC,2JAAqC;IACrC,0DAAsC;IAAtC,+GAAsC;;;;IAtBvD,0EACE;IAAA,qEAAI;IAAA,oFAAoB;IAAA,4DAAK;IAC7B,0EACI;IAAA,4EACE;IAAA,wEACE;IAAA,qEACE;IAAA,qEAAI;IAAA,0EAAU;IAAA,4DAAK;IACnB,qEAAI;IAAA,mFAAa;IAAA,4DAAK;IACtB,sEAAI;IAAA,+EAAc;IAAA,4DAAK;IACvB,sEAAI;IAAA,sEAAU;IAAA,4DAAK;IACnB,sEAAI;IAAA,sFAAqB;IAAA,4DAAK;IAC9B,sEAAI;IAAA,8EAAkB;IAAA,4DAAK;IAC3B,sEAAI;IAAA,0EAAI;IAAA,4DAAK;IACf,4DAAK;IACP,4DAAQ;IACR,yEACE;IAAA,wHACE;IAWF,sEACE;IAAA,iEAAS;IACT,iEAAS;IACT,iEAAS;IACT,iEAAS;IACT,iEAAS;IACT,sEAAI;IAAA,iEAAK;IAAA,4DAAK;IACd,sEAAI;IAAA,wDAAyC;;IAAA,4DAAK;IAEpD,4DAAK;IACP,4DAAQ;IACV,4DAAQ;IACV,4DAAM;IACN,sEAAkC;IAClC,8EAA6J;IAApF,yUAAmC;IAAiD,oEAA2B;IAAC,4FAA0B;IAAA,4DAAS;IAC5N,iEAAI;IAAA,iEACR;IAAA,4DAAM;;;IA5BuB,2DAAwD;IAAxD,gHAAwD;IAmBrE,2DAAyC;IAAzC,qKAAyC;;AD/M5D,MAAM,kBAAkB;IAyD7B,YACU,KAAqB,EACrB,cAA8B,EAC9B,mBAAwC,EACxC,UAAsC,EACtC,UAAmC,EACnC,KAAoB,EACpB,MAAc,EACd,EAAe,EACf,mBAAwC,EACxC,+BAAgE;QAThE,UAAK,GAAL,KAAK,CAAgB;QACrB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,eAAU,GAAV,UAAU,CAA4B;QACtC,eAAU,GAAV,UAAU,CAAyB;QACnC,UAAK,GAAL,KAAK,CAAe;QACpB,WAAM,GAAN,MAAM,CAAQ;QACd,OAAE,GAAF,EAAE,CAAa;QACf,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,oCAA+B,GAA/B,+BAA+B,CAAiC;QAlE1E,6BAA6B;QAE7B,cAAS,GAAG,EAAe,CAAC;QAE5B,YAAO,GAAG,EAAa,CAAC;QAExB,cAAS,GAAG,IAAI,IAAI,EAAE,CAAC;QAEf,kBAAa,GAAmB,EAAE,CAAC;QAE3C,iBAAY,GAAG,EAAkB,CAAC;QAElC,2BAAsB,GAAG,EAAkB,CAAC;QAE5C,6BAAwB,GAAG,EAAiC,CAAC;QAI7D,oBAAoB;QAEpB,uBAAkB,GAAG,KAAK,CAAC;QAE3B,iBAAY,GAAG,KAAK,CAAC;QAErB,aAAQ,GAAc,EAAE,CAAC;QAEzB,YAAO,GAAG,EAAa,CAAC;QAExB,qBAAgB,GAAc,EAAE,CAAC;QAEjC,6BAA6B;QAE7B,4BAAuB,GAAG,KAAK,CAAC;QAEhC,sBAAiB,GAAG,KAAK,CAAC;QAE1B,kBAAa,GAAmB,EAAE,CAAC;QAEnC,2BAAsB,GAAmB,EAAE,CAAC;QAE5C,iBAAY,GAAG,EAAkB,CAAC;QAIlC,yBAAoB,GAA0B,EAAE,CAAC;QAEjD,wBAAmB,GAAG,EAAyB,CAAC;QAEhD,sBAAiB,GAAuB,EAAE,CAAC;QAE3C,qBAAgB,GAAG,EAAsB,CAAC;QAE1C,kBAAa,GAAG,CAAC,CAAC;IAef,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;QACvE,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC;IAC3E,CAAC;IAED,SAAS;QACP,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,cAAc,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACzC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnC,CAAC,CAAC;IACL,CAAC;IAED,qBAAqB;QACnB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE;YACtD,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,iCAAiC,EAAE,OAAO,EAAE;gBAC3D,OAAO,EAAE,IAAI;aACd,CAAC,CAAC;YACH,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAC9B,OAAO;SACR;QAED,IAAI,CAAC,YAAY,CAAC,cAAc,GAAG,MAAM,CACvC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,KAAK,CACtC,CAAC;QACF,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;QACrD,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QACzC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;QAE7B,IAAI,IAAI,CAAC,sBAAsB,CAAC,EAAE,EAAE;YAClC,IAAI,CAAC,6BAA6B,EAAE,CAAC;SACtC;aAAM;YACL,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAC1D,CAAC,IAAI,EAAE,EAAE;gBACP,MAAM,GAAG,GAAG,0CAA0C,CAAC;gBACvD,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;gBACnC,kDAAI,CAAC,IAAI,CAAC;oBACR,KAAK,EAAE,GAAG;oBACV,IAAI,EAAE,SAAS;oBACf,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACZ,CAAC,CAAC;gBACH,IAAI,CAAC,6BAA6B,EAAE,CAAC;YACvC,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;gBACN,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtB,kDAAI,CAAC,IAAI,CAAC;oBACR,KAAK,EAAE,GAAG;oBACV,IAAI,EAAE,OAAO;oBACb,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACZ,CAAC,CAAC;YACL,CAAC,CACF,CACF,CAAC;SACH;IACH,CAAC;IAED,sBAAsB;QACpB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,aAAa,EAAE,CAAC;QAChD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,aAAa,EAAE,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,aAAa,EAAE,CAAC;IAC3C,CAAC;IAED,OAAO;QACL,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;IAED,qCAAqC;IAErC,qBAAqB,CAAC,IAAY;QAChC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,IAAI,EAAE;YACT,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC;SACvC;aAAM;YACL,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CACjD,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,CAChE,CAAC;SACH;IACH,CAAC;IAED,uBAAuB,CAAC,EAAU;QAChC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QAEtD,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,MAAM,GAAG,GAAG,0BAA0B,CAAC;YACvC,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACjC,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;IAClC,CAAC;IAED,yBAAyB;QACvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACnB,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI;YAC1B,IAAI,EAAE,IAAI,CAAC,sBAAsB,CAAC,IAAI;SACvC,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,SAAS,CACpC,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC9B,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC;YACtB,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;QACL,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAED,8CAA8C;IAE9C,qBAAqB;QACnB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACpC,aAAa,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxC,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,aAAa,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxC,UAAU,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,mBAAmB,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,gBAAgB,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC5C,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACnB,cAAc,EAAE,IAAI;SACrB,CAAC,CAAC;IACL,CAAC;IAED,6BAA6B,CAAC,MAAc;QAC1C,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;QACpC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,MAAM,EAAE;YACX,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,aAAa,CAAC;SAClD;aAAM;YACL,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAC5D,CAAC,CAAC,aAAa;iBACZ,QAAQ,EAAE;iBACV,IAAI,EAAE;iBACN,WAAW,EAAE;iBACb,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC,CACzC,CAAC;SACH;IACH,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,SAAS,CACzC,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC5B,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC;YACtB,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;QACL,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAED,4BAA4B,CAAC,EAAU;QACrC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QAChE,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACtB,MAAM,GAAG,GAAG,0BAA0B,CAAC;YACvC,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;SACJ;QACD,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAChC,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC;IACvC,CAAC;IAED,wBAAwB;QACtB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACnB,cAAc,EAAE,IAAI,CAAC,YAAY,CAAC,aAAa;SAChD,CAAC,CAAC;QAEH,IAAI,CAAC,+BAA+B,EAAE,CAAC;IACzC,CAAC;IAED,+BAA+B;QAC7B,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC;YAC/B,aAAa,EAAE,IAAI,CAAC,YAAY,CAAC,aAAa;YAC9C,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,WAAW;YAC1C,aAAa,EAAE,IAAI,CAAC,YAAY,CAAC,aAAa;YAC9C,UAAU,EAAE,CAAC;YACb,mBAAmB,EAAE,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,EAAE;YAC7D,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,WAAW;YAC1C,gBAAgB,EAAE,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,EAAE;SACxD,CAAC,CAAC;IACL,CAAC;IAED,eAAe;QACb,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,SAAS,CAChC,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACnC,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC;YACtB,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;QACL,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAED,eAAe;QACb,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,SAAS,CAChC,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAChC,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC;YACtB,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;QACL,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAED,6BAA6B;QAC3B,IAAI,CAAC,wBAAwB,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;QACpE,IAAI,CAAC,wBAAwB,CAAC,cAAc,GAAG,IAAI,CAAC,sBAAsB,CAAC,EAAE,CAAC;QAC9E,IAAI,CAAC,wBAAwB,CAAC,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAClE,YAAY,CACb,CAAC,KAAK,CAAC;QACR,IAAI,CAAC,wBAAwB,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC;QAEtE,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,+BAA+B;aACjC,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC;aACrC,SAAS,CACR,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,oBAAoB,EAAE,EACrC,CAAC,GAAG,EAAE,EAAE;YACN,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC;YACtB,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;QACL,CAAC,CACF,CACJ,CAAC;IACJ,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CAC9D,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;YACnC,IAAI,IAAI,CAAC,sBAAsB,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC5C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;oBACnB,6BAA6B,IAAI,CAAC,sBAAsB,CAAC,EAAE,EAAE;iBAC9D,CAAC,CAAC;aACJ;YACD,IAAI,CAAC,yBAAyB,EAAE,CAAC;YACjC,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACvE,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC;YACtB,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;QACL,CAAC,CACF,CACF,CAAC;QACF,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,yBAAyB;QACvB,MAAM,IAAI,GAAG,IAAI,CAAC,sBAAsB,CAAC,EAAE,CAAC;QAC5C,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QAEvB,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;YACrD,IAAI,CAAC,+BAA+B,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CACjE,CAAC,IAAI,EAAE,EAAE;gBACP,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;gBAC/B,CAAC,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC;gBAC7B,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC;gBACnD,OAAO,CAAC,CAAC;YACX,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;gBACN,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtB,kDAAI,CAAC,IAAI,CAAC;oBACR,KAAK,EAAE,GAAG;oBACV,IAAI,EAAE,OAAO;oBACb,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACZ,CAAC,CAAC;YACL,CAAC,CACF,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uBAAuB;QACrB,IAAI,CAAC,sBAAsB,CAAC,MAAM,GAAG,CAAC,CAAC;QACvC,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,SAAS,CACpE,CAAC,IAAI,EAAE,EAAE;YACP,MAAM,GAAG,GAAG,sCAAsC,CAAC;YACnD,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,SAAS;gBACf,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;YAEH,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC;YACtB,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;QACL,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAED,uBAAuB,CAAC,IAAY,EAAE,IAAY;QAChD,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,+BAA+B,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,SAAS,CAC/D,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,oBAAoB,EAAE,EACrC,CAAC,GAAG,EAAE,EAAE;YACN,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC;YACtB,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;QACL,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAED,qBAAqB;QACnB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,iCAAiC,EAAE,OAAO,EAAE;gBAC3D,OAAO,EAAE,IAAI;aACd,CAAC,CAAC;YACH,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAC9B,OAAO;SACR;QAED,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QACpC,MAAM,qBAAqB,GAAG,MAAM,CAClC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,KAAK,CAC3C,CAAC;QACF,MAAM,kBAAkB,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC,CAAC;QAE3E,IAAI,CAAC,YAAY,CAAC,mBAAmB,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CACpE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,qBAAqB,CACtC,CAAC;QAEF,IAAI,CAAC,YAAY,CAAC,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAC9D,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,kBAAkB,CACnC,CAAC;QAEF,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAC1D,CAAC,IAAI,EAAE,EAAE;YACP,MAAM,GAAG,GAAG,0CAA0C,CAAC;YAEvD,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,SAAS;gBACf,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;QACL,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC;YACtB,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;QACL,CAAC,CACF,CACF,CAAC;IACJ,CAAC;;oFA3fU,kBAAkB;kGAAlB,kBAAkB;;QC7B/B,yEACE;QAAA,sEAAqB;QAEnB,yEACE;QAAA,yEACE;QACA,+EAAuC;QACzC,4DAAM;QACJ,yEACE;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,sEAAI;QAAA,6HAAuD;QAAA,wEAAuB;QAAA,mEAAiC;QAAC,qFAAmB;QAAA,4DAAI;QAAA,4DAAK;QAChJ,2EACI;QAAA,yEACI;QAAA,oEAAgC;QACpC,4DAAI;QACR,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,4EACE;QAAA,2EAAwB;QAAA,6EAAsC;QAAA,oEAAQ;QAAA,oEAA6C;QAAA,4DAAQ;QACzH,2EACE;QAAA,2EACE;QAAA,iFAWA;QAFE,wRAAS,oCAA0C,IAAC;QATtD,4DAWA;QAAA,+GACE;QAMJ,4DAAM;QACN,iEACA;QAAA,kHAEE;QAkBF,qHAAwG;QACxG,qHAAuG;QACzG,4DAAM;QACR,4DAAM;QAEN,2EAAwB;QAAA,6EAAsC;QAAA,0EAAc;QAAA,oEAA6C;QAAA,4DAAQ;QAC/H,2EACE;QAAA,2EACE;QAAA,iFAYA;QAFE,wRAAS,4CAAyD,IAAC;QAVrE,4DAYA;QAAA,+GACE;QAMF,qHAAsH;QACtH,qHAAqH;QACvH,4DAAM;QACN,iEACA;QAAA,mHACE;QAyEJ,4DAAM;QACR,4DAAM;QAEN,2EAAwB;QAAA,6EAAsC;QAAA,iEAAK;QAAA,oEAA6C;QAAA,4DAAQ;QACtH,2EACI;QAAA,2EACI;QAAA,4EACE;QAAA,wFAAwE;QAC1E,4DAAO;QACP,wEACA;QAAA,qFAAgF;QAChF,qHAAkG;QAClG,qHAAiG;QACrG,4DAAM;QACV,4DAAM;QACR,4DAAM;QAGN,sEAAkC;QAClC,2EACI;QAAA,2EACI;QAAA,8EAAqD;QAAA,oEAA2B;QAAC,mEAAM;QAAA,4DAAS;QAChG,8EAAmH;QAA7D,2IAAS,2BAAuB,IAAC;QAA4B,oEAA2B;QAAC,mFAAiB;QAAA,4DAAS;QAC7K,4DAAM;QACV,4DAAM;QACR,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,kHACE;QA4CN,4DAAM;QACR,4DAAM;QACV,4DAAM;;;QAnOkD,2DAAkB;QAAlB,+EAAkB;QAeiD,0DAA0B;QAA1B,wFAA0B;QAS9F,0DAAoB;QAApB,kFAAoB;QAoBpC,0DAAgE;QAAhE,kIAAgE;QAChE,0DAAiE;QAAjE,mIAAiE;QAmBmB,0DAA+B;QAA/B,6FAA+B;QAOjH,0DAA8E;QAA9E,gJAA8E;QAC9E,0DAA+E;QAA/E,iJAA+E;QAGjE,0DAAwC;QAAxC,sGAAwC;QAiFtB,0DAAc;QAAd,qEAAc;QAEjC,0DAAwB;QAAxB,+EAAwB;QACC,0DAAqB;QAArB,kFAAqB;QACvD,0DAA0D;QAA1D,4HAA0D;QAC1D,0DAA2D;QAA3D,6HAA2D;QAmBpE,2DAAiC;QAAjC,+FAAiC;;6FD5KxD,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AE5BD;AAAA;AAAA;AAAA;AAAsC;;;;;;;;;;;;;ACAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAkBkB;AACrC;;;;;;;;;;;ICkBK,yEACE;IAAA,wEACI;IADD,mXAA0C;IACzC,uDACJ;IAAA,4DAAI;IACN,4DAAK;;;IAFC,0DACJ;IADI,yFACJ;;;IAJJ,yEACE;IAAA,mHACE;IAIJ,4DAAK;;;IALyB,0DAAqC;IAArC,4FAAqC;;;IAe3D,oEACE;IAAA,uDACA;IAAA,gEACA;IAAA,uDACA;IAAA,gEACA;IAAA,uDACA;IAAA,gEAAK;IAAA,uDACP;IAAA,4DAAI;;;IANF,0DACA;IADA,8HACA;IACA,0DACA;IADA,gGACA;IACA,0DACA;IADA,yIACA;IAAK,0DACP;IADO,iGACP;;;IAdV,0EAEE;IAAA,0EACI;IAAA,qEAAI;IAAA,yEAAQ;IAAA,uDAAkB;IAAA,4DAAS;IAAA,4DAAK;IAE5C,0EACI;IAAA,yEAAQ;IAAA,uDAA0C;IAAA,4DAAS;IAC3D,kHACE;IAOF,4EAAqB;IAAA,iEAAK;IAAA,4DAAQ;IAAC,wDACvC;IAAA,4DAAU;IACd,4DAAM;IACR,4DAAM;;;IAfY,0DAAkB;IAAlB,oFAAkB;IAGlB,0DAA0C;IAA1C,qHAA0C;IAC/C,0DAA0C;IAA1C,6FAA0C;IAQV,0DACvC;IADuC,mGACvC;;;IAIN,4EAAwG;IAAA,6DAAE;IAAA,4DAAQ;;;IAClH,4EAAuG;IAAA,kFAAuB;IAAA,4DAAQ;;;;IAoBlI,yEACE;IAAA,wEACI;IADD,wXAA+C;IAC9C,uDACJ;IAAA,4DAAI;IACN,4DAAK;;;IAFC,0DACJ;IADI,kGACJ;;;IAJJ,yEACE;IAAA,mHACE;IAIJ,4DAAK;;;IALyB,0DAA2C;IAA3C,kGAA2C;;;IAMzE,4EAAsH;IAAA,6DAAE;IAAA,4DAAQ;;;IAChI,4EAAqH;IAAA,wFAA6B;IAAA,4DAAQ;;;IAS1I,4EAA4I;IAAA,6DAAE;IAAA,4DAAQ;;;IACtJ,4EAA2I;IAAA,0FAA0B;IAAA,4DAAQ;;;IAO7K,4EAAwI;IAAA,6DAAE;IAAA,4DAAQ;;;IAClJ,4EAAuI;IAAA,kGAA6B;IAAA,4DAAQ;;;IAU9K,4EAA4I;IAAA,6DAAE;IAAA,4DAAQ;;;IACtJ,4EAA2I;IAAA,8FAA8B;IAAA,4DAAQ;;;IAQjL,4EAAsI;IAAA,6DAAE;IAAA,4DAAQ;;;IAChJ,4EAAqI;IAAA,+EAAoB;IAAA,4DAAQ;;;IASrK,4EAAwI;IAAA,6DAAE;IAAA,4DAAQ;;;IAClJ,4EAAuI;IAAA,6GAAmC;IAAA,4DAAQ;;;IAO1K,6EAAwE;IAAA,uDAAe;IAAA,4DAAS;;;IAA9C,yFAAqB;IAAC,0DAAe;IAAf,8EAAe;;;IAEzF,4EAAwJ;IAAA,6DAAE;IAAA,4DAAQ;;;IAClK,4EAAuJ;IAAA,gGAAqC;IAAA,4DAAQ;;;IASpM,6EAAqE;IAAA,uDAAoB;IAAA,4DAAS;;;IAAnD,yFAAqB;IAAC,0DAAoB;IAApB,mFAAoB;;;IAE3F,4EAAkJ;IAAA,6DAAE;IAAA,4DAAQ;;;IAC5J,4EAAiJ;IAAA,6FAAkC;IAAA,4DAAQ;;;IAnE3M,0EACE;IAAA,2EACI;IAAA,0EAAwB;IAAA,4EAAsC;IAAA,2EAAW;IAAA,mEAA6C;IAAA,4DAAQ;IAC1H,0EACI;IAAA,0EAA6B;IAAA,2EAAgC;IAAA,mEAA2B;IAAA,4DAAO;IAC3F,wEAA4G;IADhH,4DAA6B;IAEzB,4HAA4I;IAC5I,4HAA2I;IACnJ,4DAAM;IACV,4DAAM;IACN,2EAAwB;IAAA,6EAAsC;IAAA,oFAAc;IAAA,oEAA6C;IAAA,4DAAQ;IAC7H,2EACI;IAAA,2EAA6B;IAAA,4EAAgC;IAAA,oEAA6B;IAAA,4DAAO;IAC7F,wEAAwG;IAD5G,4DAA6B;IAEzB,4HAAwI;IACxI,4HAAuI;IAC/I,4DAAM;IACV,4DAAM;IAEN,2EAAoC;IAAA,6EAAsC;IAAA,gFAAe;IAAA,oEAA6C;IAAA,4DAAQ;IAC1I,2EACI;IAAA,2EACI;IAAA,4EAAgC;IAAA,oEAA4B;IAAA,4DAAO;IACnE,wEACJ;IAAA,4DAAM;IACJ,4HAA4I;IAC5I,4HAA2I;IAEjJ,4DAAM;IACV,4DAAM;IACN,2EAAwB;IAAA,6EAAsC;IAAA,uEAAW;IAAA,oEAA6C;IAAA,4DAAQ;IAC5H,2EACI;IAAA,2EAA6B;IAAA,4EAAgC;IAAA,oEAA2B;IAAA,4DAAO;IAC3F,wEAAsG;IAD1G,4DAA6B;IAEzB,4HAAsI;IACtI,4HAAqI;IAC7I,4DAAM;IACR,4DAAM;IACN,2EAAwB;IAAA,6EAAsC;IAAA,8EAAa;IAAA,oEAA6C;IAAA,4DAAQ;IAC9H,2EACE;IAAA,2EACI;IAAA,4EAAgC;IAAA,oEAA2B;IAAA,4DAAO;IAClE,wEACJ;IAAA,4DAAM;IACJ,4HAAwI;IACxI,4HAAuI;IAC3I,4DAAM;IACR,4DAAM;IACN,2EAAwB;IAAA,6EAAsC;IAAA,+EAAmB;IAAA,oEAA6C;IAAA,4DAAQ;IAClI,2EACI;IAAA,2EACI;IAAA,8EACE;IAAA,8HAAwE;IAC1E,4DAAS;IACT,4HAAwJ;IACxJ,4HAAuJ;IAC3J,4DAAM;IACV,4DAAM;IACV,4DAAM;IAEN,2EAAwB;IAAA,6EAAsC;IAAA,4EAAgB;IAAA,oEAA6C;IAAA,4DAAQ;IACjI,2EACI;IAAA,2EACI;IAAA,8EACE;IAAA,8HAAqE;IACvE,4DAAS;IACT,4HAAkJ;IAClJ,4HAAiJ;IACrJ,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,sEAAkC;IACpC,4DAAO;IACT,4DAAM;;;IAxEoD,0DAA8B;IAA9B,8FAA8B;IAK/D,2DAAoG;IAApG,4KAAoG;IACpG,0DAAqG;IAArG,6KAAqG;IAOrG,2DAAgG;IAAhG,wKAAgG;IAChG,0DAAiG;IAAjG,yKAAiG;IAUnG,2DAAoG;IAApG,4KAAoG;IACpG,0DAAqG;IAArG,6KAAqG;IAQrG,2DAA8F;IAA9F,sKAA8F;IAC9F,0DAA+F;IAA/F,uKAA+F;IASnG,2DAAgG;IAAhG,wKAAgG;IAChG,0DAAiG;IAAjG,yKAAiG;IAOxF,0DAAyC;IAAzC,gGAAyC;IAE5C,0DAAgH;IAAhH,wLAAgH;IAChH,0DAAiH;IAAjH,yLAAiH;IAShH,0DAAsC;IAAtC,6FAAsC;IAEzC,0DAA0G;IAA1G,kLAA0G;IAC1G,0DAA2G;IAA3G,mLAA2G;;;IAkB5H,4EAAkG;IAAA,6DAAE;IAAA,4DAAQ;;;IAC5G,4EAAiG;IAAA,+EAAoB;IAAA,4DAAQ;;;;IAoC/I,yEACE;IAAA,qEAAK;IAAA,uDAAyB;IAAA,4DAAK;IACnC,qEAAK;IAAA,uDAAuB;IAAA,4DAAK;IACjC,qEAAK;IAAA,uDAAqC;IAAA,4DAAK;IAC/C,qEAAK;IAAA,uDAAsC;IAAA,4DAAK;IAChD,qEAAK;IAAA,wDAAsB;IAAA,4DAAK;IAChC,sEAAK;IAAA,wDAA+C;;IAAA,4DAAK;IACzD,sEAAK;IAAA,wDAA0C;;IAAA,4DAAK;IAEpD,sEACI;IAAA,8EAA6I;IAAlG,8ZAAqE;IAA6B,mEAAO;IAAA,4DAAS;IACjK,4DAAK;IACP,4DAAK;;;IAXE,0DAAyB;IAAzB,kGAAyB;IACzB,0DAAuB;IAAvB,gGAAuB;IACvB,0DAAqC;IAArC,2JAAqC;IACrC,0DAAsC;IAAtC,+GAAsC;IACtC,0DAAsB;IAAtB,+FAAsB;IACtB,0DAA+C;IAA/C,iLAA+C;IAC/C,0DAA0C;IAA1C,6KAA0C;;;;IAxB3D,0EACE;IAAA,qEAAI;IAAA,oFAAoB;IAAA,4DAAK;IAC7B,0EACI;IAAA,4EACE;IAAA,wEACE;IAAA,qEACE;IAAA,qEAAI;IAAA,0EAAU;IAAA,4DAAK;IACnB,qEAAI;IAAA,mFAAa;IAAA,4DAAK;IACtB,sEAAI;IAAA,sFAAqB;IAAA,4DAAK;IAC9B,sEAAI;IAAA,8EAAkB;IAAA,4DAAK;IAC3B,sEAAI;IAAA,sEAAU;IAAA,4DAAK;IACnB,sEAAI;IAAA,+EAAc;IAAA,4DAAK;IACvB,sEAAI;IAAA,qEAAS;IAAA,4DAAK;IAClB,sEAAI;IAAA,0EAAI;IAAA,4DAAK;IACf,4DAAK;IACP,4DAAQ;IACR,yEACE;IAAA,wHACE;IAYF,sEACE;IAAA,iEAAS;IACT,iEAAS;IACT,iEAAS;IACT,iEAAS;IACT,iEAAS;IACT,sEAAI;IAAA,iEAAK;IAAA,4DAAK;IACd,sEAAI;IAAA,wDAAyC;;IAAA,4DAAK;IAClD,iEAAS;IAEX,4DAAK;IACP,4DAAQ;IACV,4DAAQ;IACV,4DAAM;IACN,sEAAkC;IAClC,8EAA6J;IAApF,yUAAmC;IAAiD,oEAA2B;IAAC,4FAA0B;IAAA,4DAAS;IAC5N,iEAAI;IAAA,iEACR;IAAA,4DAAM;;;IA9BuB,2DAAwD;IAAxD,gHAAwD;IAoBrE,2DAAyC;IAAzC,qKAAyC;;ADlN5D,MAAM,kBAAkB;IAuD7B,YACU,cAA8B,EAC9B,mBAAwC,EACxC,UAAsC,EACtC,UAAmC,EACnC,KAAoB,EACpB,EAAe,EACf,mBAAwC,EACxC,+BAAgE;QAPhE,mBAAc,GAAd,cAAc,CAAgB;QAC9B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,eAAU,GAAV,UAAU,CAA4B;QACtC,eAAU,GAAV,UAAU,CAAyB;QACnC,UAAK,GAAL,KAAK,CAAe;QACpB,OAAE,GAAF,EAAE,CAAa;QACf,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,oCAA+B,GAA/B,+BAA+B,CAAiC;QA9D1E,6BAA6B;QAE7B,cAAS,GAAG,EAAe,CAAC;QAE5B,YAAO,GAAG,EAAa,CAAC;QAExB,cAAS,GAAG,IAAI,IAAI,EAAE,CAAC;QAEf,kBAAa,GAAmB,EAAE,CAAC;QAE3C,iBAAY,GAAG,EAAkB,CAAC;QAElC,2BAAsB,GAAG,EAAkB,CAAC;QAE5C,6BAAwB,GAAG,EAAiC,CAAC;QAI7D,oBAAoB;QAEpB,uBAAkB,GAAG,KAAK,CAAC;QAE3B,iBAAY,GAAG,KAAK,CAAC;QAErB,aAAQ,GAAc,EAAE,CAAC;QAEzB,YAAO,GAAG,EAAa,CAAC;QAExB,qBAAgB,GAAc,EAAE,CAAC;QAEjC,6BAA6B;QAE7B,4BAAuB,GAAG,KAAK,CAAC;QAEhC,sBAAiB,GAAG,KAAK,CAAC;QAE1B,kBAAa,GAAmB,EAAE,CAAC;QAEnC,2BAAsB,GAAmB,EAAE,CAAC;QAE5C,iBAAY,GAAG,EAAkB,CAAC;QAIlC,yBAAoB,GAA0B,EAAE,CAAC;QAEjD,wBAAmB,GAAG,EAAyB,CAAC;QAEhD,sBAAiB,GAAuB,EAAE,CAAC;QAE3C,qBAAgB,GAAG,EAAsB,CAAC;QAE1C,kBAAa,GAAG,CAAC,CAAC;IAWf,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC;IAC3E,CAAC;IAED,SAAS;QACP,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,cAAc,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACzC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnC,CAAC,CAAC;IACL,CAAC;IAED,qBAAqB;QACnB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE;YACtD,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,iCAAiC,EAAE,OAAO,EAAE;gBAC3D,OAAO,EAAE,IAAI;aACd,CAAC,CAAC;YACH,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAC9B,OAAO;SACR;QAED,IAAI,CAAC,YAAY,CAAC,cAAc,GAAG,MAAM,CACvC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,KAAK,CACtC,CAAC;QACF,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;QACrD,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QACzC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;QAE7B,IAAI,IAAI,CAAC,sBAAsB,CAAC,EAAE,EAAE;YAClC,IAAI,CAAC,6BAA6B,EAAE,CAAC;SACtC;aAAM;YACL,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAC1D,CAAC,IAAI,EAAE,EAAE;gBACP,MAAM,GAAG,GAAG,0CAA0C,CAAC;gBACvD,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;gBACnC,kDAAI,CAAC,IAAI,CAAC;oBACR,KAAK,EAAE,GAAG;oBACV,IAAI,EAAE,SAAS;oBACf,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACZ,CAAC,CAAC;gBACH,IAAI,CAAC,6BAA6B,EAAE,CAAC;YACvC,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;gBACN,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtB,kDAAI,CAAC,IAAI,CAAC;oBACR,KAAK,EAAE,GAAG;oBACV,IAAI,EAAE,OAAO;oBACb,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACZ,CAAC,CAAC;YACL,CAAC,CACF,CACF,CAAC;SACH;IACH,CAAC;IAED,sBAAsB;QACpB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,aAAa,EAAE,CAAC;QAChD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,aAAa,EAAE,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,aAAa,EAAE,CAAC;IAC3C,CAAC;IAED,OAAO;QACL,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;IAED,qCAAqC;IAErC,qBAAqB,CAAC,IAAY;QAChC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,IAAI,EAAE;YACT,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC;SACvC;aAAM;YACL,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CACjD,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,CAChE,CAAC;SACH;IACH,CAAC;IAED,uBAAuB,CAAC,EAAU;QAChC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QACtD,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,MAAM,GAAG,GAAG,0BAA0B,CAAC;YACvC,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACjC,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;IAClC,CAAC;IAED,yBAAyB;QACvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACnB,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI;SAC3B,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,SAAS,CACpC,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC;YACtB,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;QACL,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAED,8CAA8C;IAE9C,qBAAqB;QACnB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACpC,aAAa,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxC,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,aAAa,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxC,UAAU,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,mBAAmB,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,gBAAgB,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC5C,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACnB,cAAc,EAAE,IAAI;SACrB,CAAC,CAAC;IACL,CAAC;IAED,6BAA6B,CAAC,MAAc;QAC1C,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;QACpC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,MAAM,EAAE;YACX,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,aAAa,CAAC;SAClD;aAAM;YACL,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAC5D,CAAC,CAAC,aAAa;iBACZ,QAAQ,EAAE;iBACV,IAAI,EAAE;iBACN,WAAW,EAAE;iBACb,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC,CACzC,CAAC;SACH;IACH,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,SAAS,CACzC,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC5B,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC;YACtB,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;QACL,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAED,4BAA4B,CAAC,EAAU;QACrC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QAChE,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACtB,MAAM,GAAG,GAAG,0BAA0B,CAAC;YACvC,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;SACJ;QACD,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAChC,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC;IACvC,CAAC;IAED,wBAAwB;QACtB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACnB,cAAc,EAAE,IAAI,CAAC,YAAY,CAAC,aAAa;SAChD,CAAC,CAAC;QAEH,IAAI,CAAC,+BAA+B,EAAE,CAAC;IACzC,CAAC;IAED,+BAA+B;QAC7B,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC;YAC/B,aAAa,EAAE,IAAI,CAAC,YAAY,CAAC,aAAa;YAC9C,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,WAAW;YAC1C,aAAa,EAAE,IAAI,CAAC,YAAY,CAAC,aAAa;YAC9C,UAAU,EAAE,CAAC;YACb,mBAAmB,EAAE,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,EAAE;YAC7D,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,WAAW;YAC1C,gBAAgB,EAAE,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,EAAE;SACxD,CAAC,CAAC;IACL,CAAC;IAED,eAAe;QACb,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,SAAS,CAChC,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACnC,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC;YACtB,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;QACL,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAED,eAAe;QACb,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,SAAS,CAChC,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAChC,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC;YACtB,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;QACL,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAED,6BAA6B;QAC3B,IAAI,CAAC,wBAAwB,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;QACpE,IAAI,CAAC,wBAAwB,CAAC,cAAc,GAAG,IAAI,CAAC,sBAAsB,CAAC,EAAE,CAAC;QAC9E,IAAI,CAAC,wBAAwB,CAAC,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAClE,YAAY,CACb,CAAC,KAAK,CAAC;QACR,IAAI,CAAC,wBAAwB,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC;QAEtE,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,+BAA+B;aACjC,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC;aACrC,SAAS,CACR,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,oBAAoB,EAAE,EACrC,CAAC,GAAG,EAAE,EAAE;YACN,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC;YACtB,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;QACL,CAAC,CACF,CACJ,CAAC;IACJ,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,mBAAmB;aACrB,QAAQ,CAAC,IAAI,CAAC,sBAAsB,CAAC,EAAE,CAAC;aACxC,SAAS,CACR,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;YACnC,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACnC,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC;YACtB,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;QACL,CAAC,CACF,CACJ,CAAC;QACF,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,yBAAyB;QACvB,MAAM,IAAI,GAAG,IAAI,CAAC,sBAAsB,CAAC,EAAE,CAAC;QAC5C,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QAEvB,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;YACrD,IAAI,CAAC,+BAA+B,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CACjE,CAAC,IAAI,EAAE,EAAE;gBACP,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;gBAC/B,CAAC,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC;gBAC7B,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC;gBACnD,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC;gBAC1C,OAAO,CAAC,CAAC;YACX,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;gBACN,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtB,kDAAI,CAAC,IAAI,CAAC;oBACR,KAAK,EAAE,GAAG;oBACV,IAAI,EAAE,OAAO;oBACb,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACZ,CAAC,CAAC;YACL,CAAC,CACF,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uBAAuB;QACrB,IAAI,CAAC,sBAAsB,CAAC,MAAM,GAAG,CAAC,CAAC;QACvC,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,SAAS,CACpE,CAAC,IAAI,EAAE,EAAE;YACP,MAAM,GAAG,GAAG,sCAAsC,CAAC;YACnD,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,SAAS;gBACf,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;YAEH,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC;YACtB,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;QACL,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAED,uBAAuB,CAAC,IAAY,EAAE,IAAY;QAChD,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,+BAA+B,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,SAAS,CAC/D,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,oBAAoB,EAAE,EACrC,CAAC,GAAG,EAAE,EAAE;YACN,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC;YACtB,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;QACL,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAED,qBAAqB;QACnB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,iCAAiC,EAAE,OAAO,EAAE;gBAC3D,OAAO,EAAE,IAAI;aACd,CAAC,CAAC;YACH,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAC9B,OAAO;SACR;QAED,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QACpC,MAAM,qBAAqB,GAAG,MAAM,CAClC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,KAAK,CAC3C,CAAC;QACF,MAAM,kBAAkB,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC,CAAC;QAE3E,IAAI,CAAC,YAAY,CAAC,mBAAmB,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CACpE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,qBAAqB,CACtC,CAAC;QAEF,IAAI,CAAC,YAAY,CAAC,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAC9D,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,kBAAkB,CACnC,CAAC;QAEF,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAC1D,CAAC,IAAI,EAAE,EAAE;YACP,MAAM,GAAG,GAAG,0CAA0C,CAAC;YAEvD,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,SAAS;gBACf,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;QACL,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC;YACtB,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;QACL,CAAC,CACF,CACF,CAAC;IACJ,CAAC;;oFAhfU,kBAAkB;kGAAlB,kBAAkB;;QC5B/B,yEACE;QAAA,sEAAqB;QAEnB,yEACE;QAAA,yEACE;QACA,+EAAuC;QACzC,4DAAM;QACJ,yEACE;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,sEAAI;QAAA,6HAAuD;QAAA,wEAAuB;QAAA,mEAAiC;QAAC,qFAAmB;QAAA,4DAAI;QAAA,4DAAK;QAChJ,2EACI;QAAA,yEACI;QAAA,oEAAgC;QACpC,4DAAI;QACR,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,4EACE;QAAA,2EAAwB;QAAA,6EAAsC;QAAA,oEAAQ;QAAA,oEAA6C;QAAA,4DAAQ;QACzH,2EACE;QAAA,2EACE;QAAA,iFAWA;QAFE,wRAAS,oCAA0C,IAAC;QATtD,4DAWA;QAAA,+GACE;QAMJ,4DAAM;QACN,iEACA;QAAA,kHAEE;QAkBF,qHAAwG;QACxG,qHAAuG;QACzG,4DAAM;QACR,4DAAM;QAEN,2EAAwB;QAAA,6EAAsC;QAAA,qEAAS;QAAA,oEAA6C;QAAA,4DAAQ;QAC1H,2EACE;QAAA,2EACE;QAAA,iFAYA;QAFE,wRAAS,4CAAyD,IAAC;QAVrE,4DAYA;QAAA,+GACE;QAMF,qHAAsH;QACtH,qHAAqH;QACvH,4DAAM;QACN,iEACA;QAAA,mHACE;QAyEJ,4DAAM;QACR,4DAAM;QAEN,2EAAwB;QAAA,6EAAsC;QAAA,iEAAK;QAAA,oEAA6C;QAAA,4DAAQ;QACtH,2EACI;QAAA,2EACI;QAAA,4EACE;QAAA,wFAAwE;QAC1E,4DAAO;QACP,wEACA;QAAA,qFAAgF;QAChF,qHAAkG;QAClG,qHAAiG;QACrG,4DAAM;QACV,4DAAM;QACR,4DAAM;QAGN,sEAAkC;QAClC,2EACI;QAAA,2EACI;QAAA,8EAAqD;QAAA,oEAA2B;QAAC,mEAAM;QAAA,4DAAS;QAChG,8EAAmH;QAA7D,2IAAS,2BAAuB,IAAC;QAA4B,oEAA2B;QAAC,mFAAiB;QAAA,4DAAS;QAC7K,4DAAM;QACV,4DAAM;QACR,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,kHACE;QA+CN,4DAAM;QACR,4DAAM;QACV,4DAAM;;;QAtOkD,2DAAkB;QAAlB,+EAAkB;QAeiD,0DAA0B;QAA1B,wFAA0B;QAS9F,0DAAoB;QAApB,kFAAoB;QAoBpC,0DAAgE;QAAhE,kIAAgE;QAChE,0DAAiE;QAAjE,mIAAiE;QAmBmB,0DAA+B;QAA/B,6FAA+B;QAOjH,0DAA8E;QAA9E,gJAA8E;QAC9E,0DAA+E;QAA/E,iJAA+E;QAGjE,0DAAwC;QAAxC,sGAAwC;QAiFtB,0DAAc;QAAd,qEAAc;QAEjC,0DAAwB;QAAxB,+EAAwB;QACC,0DAAqB;QAArB,kFAAqB;QACvD,0DAA0D;QAA1D,4HAA0D;QAC1D,0DAA2D;QAA3D,6HAA2D;QAmBpE,2DAAiC;QAAjC,+FAAiC;;6FD7KxD,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AE3BD;AAAA;AAAA;AAAA;AAAsC;;;;;;;;;;;;;ACAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4B;AACA;AACH;AACI;AACa;;;;;;;;;;;;;ACJ1C;AAAA;AAAA;AAAA;AAAmC;;;;;;;;;;;;;ACAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AASkB;AAC5B;AACT;;;;;;;;;;ICcT,6EAA8G;IAArB,sTAAoB;IAAC,iFAAsB;IAAA,4DAAS;;;IASnI,4EAAoH;IAAA,6DAAE;IAAA,4DAAQ;;;IAC9H,4EAAmH;IAAA,0FAA0B;IAAA,4DAAQ;;;IAajJ,4EAA8G;IAAA,6DAAE;IAAA,4DAAQ;;;IACxH,4EAA6G;IAAA,+EAAoB;IAAA,4DAAQ;;;IAazI,4EAAwG;IAAA,6DAAE;IAAA,4DAAQ;;;IAClH,4EAAuG;IAAA,+EAAoB;IAAA,4DAAQ;;;;IApCnJ,0EACE;IAAA,0EACE;IAAA,2EACE;IAAA,0EAAwB;IAAA,4EAAsC;IAAA,0EAAe;IAAA,mEAA6C;IAAA,4DAAQ;IAChI,0EACE;IAAA,0EACE;IAAA,uEACA;IAAA,yHAAoH;IACpH,yHAAmH;IACrH,4DAAM;IACR,4DAAM;IACR,4DAAM;IAEN,2EAAwB;IAAA,6EAAsC;IAAA,uEAAW;IAAA,oEAA6C;IAAA,4DAAQ;IAC5H,2EACI;IAAA,2EACI;IAAA,4EACE;IAAA,wFAA4E;IAC9E,4DAAO;IACP,wEACA;IAAA,qFAAoF;IACpF,yHAA8G;IAC9G,yHAA6G;IACjH,4DAAM;IACV,4DAAM;IACR,4DAAM;IAEN,2EAAwB;IAAA,6EAAsC;IAAA,oEAAQ;IAAA,oEAA6C;IAAA,4DAAQ;IACzH,2EACI;IAAA,2EACI;IAAA,4EACE;IAAA,wFAAyE;IAC3E,4DAAO;IACP,wEACA;IAAA,qFAAiF;IACjF,yHAAwG;IACxG,yHAAuG;IAC3G,4DAAM;IACV,4DAAM;IACR,4DAAM;IACN,sEAAkC;IAChC,2EACI;IAAA,2EACI;IAAA,8EAAoG;IAA9C,gVAA6C;IAAC,oEAA2B;IAAC,qEAAQ;IAAA,4DAAS;IACjJ,8EAA4G;IAAtD,6TAA0B;IAA4B,oEAA2B;IAAC,4EAAe;IAAA,4DAAS;IACpK,4DAAM;IACV,4DAAM;IACV,4DAAO;IACT,4DAAM;IACR,4DAAM;;;;;IA/C4B,0DAAkB;IAAlB,kFAAkB;IAKjC,0DAA4E;IAA5E,oJAA4E;IAC5E,0DAA6E;IAA7E,qJAA6E;IAS7C,0DAAkB;IAAlB,oEAAkB;IAErC,0DAA4B;IAA5B,8EAA4B;IACC,0DAAqB;IAArB,qFAAqB;IAC3D,0DAAsE;IAAtE,8IAAsE;IACtE,0DAAuE;IAAvE,+IAAuE;IAS3C,0DAAe;IAAf,qEAAe;IAElC,0DAAyB;IAAzB,+EAAyB;IACC,0DAAqB;IAArB,qFAAqB;IACxD,0DAAgE;IAAhE,wIAAgE;IAChE,0DAAiE;IAAjE,yIAAiE;;;IAwC5E,qEACE;IAAA,uDACF;IAAA,4DAAK;;;IADH,0DACF;IADE,sIACF;;;IANF,qEACE;IAAA,qEAAI;IAAA,4DAAC;IAAA,4DAAK;IACV,qEAAI;IAAA,uDAAiC;;IAAA,4DAAK;IAC1C,qEAAI;IAAA,uDAAwB;IAAA,4DAAK;IACjC,uHACE;IAEF,qEAAI;IAAA,wDAA8C;;IAAA,4DAAK;IACvD,sEAAI;IAAA,8DAAE;IAAA,4DAAK;IACb,4DAAK;;;IAPC,0DAAiC;IAAjC,0JAAiC;IACjC,0DAAwB;IAAxB,wHAAwB;IACxB,0DAA6C;IAA7C,iIAA6C;IAG7C,0DAA8C;IAA9C,+LAA8C;;;IA7B9D,0EACE;IAAA,qEAAI;IAAA,wFAAwB;IAAA,4DAAK;IACjC,gEACA;IAAA,8EACE;IAAA,sEACE;IAAA,qEACA;IAAA,qEACF;IAAA,4DAAM;IACN,qEAAI;IAAA,wDAAwD;IAAA,4DAAK;IACjE,2EACE;IAAA,6EACE;IAAA,yEACE;IAAA,sEACE;IAAA,sEAAI;IAAA,+DAAG;IAAA,4DAAK;IACZ,sEAAI;IAAA,+DAAG;IAAA,4DAAK;IACZ,sEAAI;IAAA,mEAAO;IAAA,4DAAK;IAChB,sEAAI;IAAA,qEAAS;IAAA,4DAAK;IAClB,sEAAI;IAAA,iEAAK;IAAA,4DAAK;IACd,sEAAI;IAAA,+DAAG;IAAA,4DAAK;IACd,4DAAK;IACP,4DAAQ;IACR,yEACE;IAAA,qHACE;IASJ,4DAAQ;IACR,yEACE;IAAA,sEACE;IAAA,iEAAS;IACT,iEAAS;IACT,iEAAS;IACT,sEAAI;IAAA,iEAAK;IAAA,4DAAK;IACd,sEAAI;IAAA,wDAAsC;;IAAA,4DAAK;IAC/C,iEAAS;IACX,4DAAK;IACP,4DAAQ;IACV,4DAAQ;IACV,4DAAM;IACN,iEACA;IAAA,sEAAkC;IAClC,iEAEF;IAAA,4DAAM;IACR,4DAAM;;;IA1CE,2DAAwD;IAAxD,6IAAwD;IAclD,2DAA2C;IAA3C,kGAA2C;IAiBzC,0DAAsC;IAAtC,iKAAsC;;;IAalD,qEACE;IAAA,+FAAmC;IAAA,gEACnC;IAAA,wEACE;IAAA,6EAAsE;IAAA,+FAA+B;IAAA,4DAAS;IAChH,4DAAI;IACN,4DAAK;;;IAqBS,6EAAiG;IAAA,iEAAM;IAAA,4DAAS;;;IAChH,6EAAiG;IAAA,mEAAQ;IAAA,4DAAS;;;IARxH,yEACE;IAAA,qEAAK;IAAA,uDAA0B;IAAA,4DAAK;IACpC,qEAAK;IAAA,uDAAiC;;IAAA,4DAAK;IAC3C,qEAAK;IAAA,uDAAuB;IAAA,4DAAK;IACjC,qEAAK;IAAA,uDAA8C;IAAA,4DAAK;IACxD,sEACE;IAAA,yEACE;IAAA,uIAAiG;IACjG,uIAAiG;IACnG,4DAAI;IACN,4DAAK;IACP,4DAAK;;;IAVE,0DAA0B;IAA1B,mGAA0B;IAC1B,0DAAiC;IAAjC,oKAAiC;IACjC,0DAAuB;IAAvB,gGAAuB;IACvB,0DAA8C;IAA9C,uHAA8C;IAE9C,0DAAsF;IAAtF,sOAAsF;IAC/E,0DAAyB;IAAzB,uFAAyB;IACzB,0DAAyB;IAAzB,uFAAyB;;;IApB/C,0EACI;IAAA,4EACE;IAAA,wEACE;IAAA,qEACA;IAAA,qEAAI;IAAA,+EAAe;IAAA,4DAAK;IACxB,qEAAI;IAAA,+DAAI;IAAA,4DAAK;IACb,qEAAI;IAAA,kEAAO;IAAA,4DAAK;IAChB,sEAAI;IAAA,kEAAM;IAAA,4DAAK;IACf,sEAAI;IAAA,0EAAI;IAAA,4DAAK;IACb,4DAAK;IACP,4DAAQ;IACR,yEACE;IAAA,2HACE;IAWJ,4DAAQ;IACV,4DAAQ;IACZ,4DAAM;;;IAdqB,2DAAkC;IAAlC,0FAAkC;;;IApBjE,0EACI;IAAA,iHACE;IAMF,oHACI;IA0BR,4DAAM;;;IAlCE,0DAAiC;IAAjC,kGAAiC;IAOP,0DAAgC;IAAhC,iGAAgC;;ADtH/E,MAAM,eAAe;IAyB1B,YACU,mBAAwC,EACxC,EAAe,EACf,+BAAgE;QAFhE,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,OAAE,GAAF,EAAE,CAAa;QACf,oCAA+B,GAA/B,+BAA+B,CAAiC;QA3BlE,kBAAa,GAAmB,EAAE,CAAC;QAE3C,kBAAa,GAAmB,EAAE,CAAC;QAEnC,2BAAsB,GAAmB,EAAE,CAAC;QAE5C,8BAAyB,GAAkC,EAAE,CAAC;QAE9D,SAAI,GAAG,EAAiC,CAAC;QAEzC,cAAS,GAAG,IAAI,IAAI,EAAE,CAAC;QAEvB,8BAAyB,GAAG,KAAK,CAAC;QAIlC,wBAAmB,GAAG,KAAK,CAAC;QAE5B,eAAU,GAAG,CAAC,CAAC;QAEf,mBAAc,GAAG,EAAoB,CAAC;IAQnC,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACjC,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC;IAC3E,CAAC;IAED,SAAS;QACP,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,aAAa,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxC,UAAU,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnC,CAAC,CAAC;IACL,CAAC;IAED,yBAAyB;QACvB,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,SAAS,CACzC,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC5B,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC;YACtB,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;QACL,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAED,iCAAiC;QAC/B,IAAI,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC;QACrD,IAAI,CAAC,yBAAyB,GAAG,KAAK,CAAC;IACzC,CAAC;IAED,cAAc;QACZ,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,OAAO;SACR;QAED,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QACtC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC;QAEvD,IAAI,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;YAChE,MAAM,GAAG,GAAG,8CAA8C,CAAC;YAC3D,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;YACH,OAAO;SACR;QACD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;YAC/B,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC;YACnB,CAAC,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAE1B,IACE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,cAAc,CAAC,UAAU;gBACxC,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,EACrC;gBACA,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE;oBAC5B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;wBACvD,OAAO,CACL,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE;4BACjC,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,CACjC,CAAC;oBACJ,CAAC,CAAC,CAAC;oBAEH,IAAI,IAAI,CAAC,IAAI,EAAE;wBACb,CAAC,CAAC,YAAY,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;qBAC1D;gBACH,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC,YAAY,CAAC;gBAClC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACrC;QACH,CAAC,CAAC,CAAC;QAEH,MAAM,GAAG,GAAG,+BAA+B,CAAC;QAC5C,kDAAI,CAAC,IAAI,CAAC;YACR,KAAK,EAAE,GAAG;YACV,IAAI,EAAE,SAAS;YACf,iBAAiB,EAAE,KAAK;YACxB,KAAK,EAAE,IAAI;SACZ,CAAC,CAAC;QAEH,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC;IACxC,CAAC;IAED,QAAQ;QACN,MAAM,OAAO,GAAY,QAAQ,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC;QAEpE,MAAM,OAAO,GAAG;YACd,MAAM,EAAE,CAAC;YACT,QAAQ,EAAE,GAAG,IAAI,CAAC,aAAa,MAAM;YACrC,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;YACvB,WAAW,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE;YACzB,KAAK,EAAE,EAAE,WAAW,EAAE,UAAU,EAAE;SACnC,CAAC;QAEF,wCAAQ,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;IAC/C,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,+BAA+B,CAAC,MAAM,EAAE,CAAC,SAAS,CACrD,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC;QACxC,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC;YACtB,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;QACL,CAAC,CACF,CACF,CAAC;IACJ,CAAC;;8EAhKU,eAAe;+FAAf,eAAe;QClB5B,yEACE;QAAA,sEAAqB;QAEnB,yEACE;QAAA,yEACE;QACA,+EAAuC;QACzC,4DAAM;QAEN,yEACE;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,sEAAI;QAAA,8FAAkC;QAAA,4DAAK;QAC3C,0EACI;QAAA,wEACI;QAAA,oEAAgC;QACpC,4DAAI;QACR,4DAAM;QAEV,4DAAM;QAEN,2EACE;QAAA,8EAA0F;QAA9C,wIAAS,uCAAmC,IAAC;QAAC,2EAAe;QAAA,4DAAS;QAClH,oHAA8G;QAChH,4DAAM;QACN,gHACE;QAiDF,+GACE;QAkDF,8GACI;QAmCR,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,4DAAM;QACV,4DAAM;;QAjJuE,2DAAiC;QAAjC,+FAAiC;QAEhE,0DAA2B;QAA3B,yFAA2B;QAkD3B,0DAAiC;QAAjC,+FAAiC;QAmDjC,0DAA4B;QAA5B,0FAA4B;;6FD9G7D,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEjBD;AAAA;AAAA;AAAA;AAA0C;;;AAGnC,MAAM,qBAAqB;;0FAArB,qBAAqB;qGAArB,qBAAqB;QADV,2EAA+B;;6FAC1C,qBAAqB;cADjC,uDAAS;eAAC,EAAE,QAAQ,EAAE,iCAAiC,EAAE;;;;;;;;;;;;;;ACF1D;AAAA;AAAA;AAAA;AAAuC;;;;;;;;;;;;;ACAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEV;AAOT;;;;;;;;ICYrB,oEACE;IAAA,uDACA;IAAA,gEACA;IAAA,uDACA;IAAA,gEACA;IAAA,uDACA;IAAA,gEAAK;IAAA,uDACP;IAAA,4DAAI;;;IANF,0DACA;IADA,4HACA;IACA,0DACA;IADA,+FACA;IACA,0DACA;IADA,uIACA;IAAK,0DACP;IADO,gGACP;;;IAkBI,yEACE;IAAA,qEAAK;IAAA,uDAAyB;IAAA,4DAAK;IACnC,qEAAK;IAAA,uDAAuB;IAAA,4DAAK;IACjC,qEAAK;IAAA,uDAAqC;IAAA,4DAAK;IAC/C,qEAAK;IAAA,uDAAsC;IAAA,4DAAK;IAChD,qEAAK;IAAA,wDAAsB;IAAA,4DAAK;IAChC,sEAAK;IAAA,wDAA+C;;IAAA,4DAAK;IACzD,sEAAK;IAAA,wDAA0C;;IAAA,4DAAK;IACtD,4DAAK;;;IAPE,0DAAyB;IAAzB,iGAAyB;IACzB,0DAAuB;IAAvB,+FAAuB;IACvB,0DAAqC;IAArC,yJAAqC;IACrC,0DAAsC;IAAtC,8GAAsC;IACtC,0DAAsB;IAAtB,8FAAsB;IACtB,0DAA+C;IAA/C,gLAA+C;IAC/C,0DAA0C;IAA1C,4KAA0C;;ADrCxD,MAAM,mBAAmB;IAW9B,YACU,KAAqB,EACrB,mBAAwC,EACxC,+BAAgE;QAFhE,UAAK,GAAL,KAAK,CAAgB;QACrB,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,oCAA+B,GAA/B,+BAA+B,CAAiC;QAblE,kBAAa,GAAmB,EAAE,CAAC;QAI3C,iBAAY,GAAG,EAAkB,CAAC;QAElC,cAAS,GAAG,gBAAgB,CAAC;IAQ1B,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;QACvE,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC;IAC3E,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CAC9D,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACnC,CAAC,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAC5B,CACF,CAAC;IACJ,CAAC;IAED,yBAAyB;QACvB,MAAM,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC;QACjC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QAEvB,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;YAC3C,IAAI,CAAC,+BAA+B,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CACjE,CAAC,IAAI,EAAE,EAAE;gBACP,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;gBAC/B,CAAC,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC;gBAC7B,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC;gBACnD,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC;gBACf,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC;gBAC1C,OAAO,CAAC,CAAC;YACX,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;gBACN,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtB,kDAAI,CAAC,IAAI,CAAC;oBACR,KAAK,EAAE,GAAG;oBACV,IAAI,EAAE,OAAO;oBACb,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;iBACZ,CAAC,CAAC;YACL,CAAC,CACF,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,MAAM,OAAO,GAAG;YACd,QAAQ,EAAE,GAAG,IAAI,CAAC,SAAS,MAAM;YACjC,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;YACvB,WAAW,EAAE,EAAE;YACf,KAAK,EAAE,EAAE,WAAW,EAAE,UAAU,EAAE;SACnC,CAAC;QAEF,MAAM,OAAO,GAAY,QAAQ,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC;QAErE,wCAAQ,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;IAC/C,CAAC;;sFA5EU,mBAAmB;mGAAnB,mBAAmB;QChBhC,yEACE;QAAA,sEAAqB;QAErB,yEACI;QAAA,yEACE;QACA,+EAAuC;QACzC,4DAAM;QACN,sEACE;QAAA,qEAAI;QAAA,iFAAiB;QAAA,4DAAK;QAC1B,4EAAuG;QAArB,2IAAS,cAAU,IAAC;QAAC,+EAAoB;QAAA,4DAAS;QACtI,4DAAM;QACN,0EACE;QAAA,uEACE;QAAA,qEACA;QAAA,qEACF;QAAA,4DAAM;QACN,sEAAI;QAAA,mFAAkB;QAAA,4DAAK;QAC3B,sEAAI;QAAA,wDAA8B;QAAA,4DAAK;QACvC,2EACE;QAAA,0EAAQ;QAAA,wDAAwD;QAAA,4DAAS;QACzE,6GACE;QAOF,4EAAqB;QAAA,iEAAK;QAAA,4DAAQ;QAAC,wDACrC;QAAA,4DAAU;QACV,qEAAkC;QAClC,2EACE;QAAA,6EACE;QAAA,yEACE;QAAA,sEACE;QAAA,sEAAI;QAAA,2EAAU;QAAA,4DAAK;QACnB,sEAAI;QAAA,mFAAa;QAAA,4DAAK;QACtB,sEAAI;QAAA,sFAAqB;QAAA,4DAAK;QAC9B,sEAAI;QAAA,8EAAkB;QAAA,4DAAK;QAC3B,sEAAI;QAAA,sEAAU;QAAA,4DAAK;QACnB,sEAAI;QAAA,+EAAc;QAAA,4DAAK;QACvB,sEAAI;QAAA,qEAAS;QAAA,4DAAK;QACpB,4DAAK;QACP,4DAAQ;QACR,yEACE;QAAA,kHACE;QAQF,sEACE;QAAA,iEAAS;QACT,iEAAS;QACT,iEAAS;QACT,iEAAS;QACT,iEAAS;QACT,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QACd,sEAAI;QAAA,wDAAyC;;QAAA,4DAAK;QACpD,4DAAK;QACP,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QACN,qEAAkC;QACpC,4DAAM;QAER,8EAAiF;QAAA,kEAAM;QAAA,4DAAS;QAChG,iEACA;QAAA,qEAAkC;QAClC,iEACF;QAAA,4DAAM;QACR,4DAAM;;QAzDM,2DAA8B;QAA9B,wIAA8B;QAExB,0DAAwD;QAAxD,yKAAwD;QAC7D,0DAAwD;QAAxD,iJAAwD;QAQxB,0DACrC;QADqC,uJACrC;QAgByB,2DAA8C;QAA9C,kGAA8C;QAgB3D,2DAAyC;QAAzC,iKAAyC;;6FD9ChD,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEfD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACO;;;;;;;;;;;;;ACD9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAEA;AACoB;AAEd;AACkB;AAOjD;AAMA;;AAuBf,MAAM,kBAAkB;;iGAAlB,kBAAkB;8JAAlB,kBAAkB,mBALlB;QACT,EAAE,OAAO,EAAE,kEAAW,EAAE,QAAQ,EAAE,sDAAc,EAAE;QAClD,EAAE,OAAO,EAAE,uEAAgB,EAAE,QAAQ,EAAE,wDAAgB,EAAE;KAC1D,YAXQ;YACP,4DAAY;YACZ,4DAAY;YACZ,kEAAmB;YACnB,oDAAY;YACZ,kDAAU;YACV,gFAAmB;SACpB;mIAMU,kBAAkB,mBAnB3B,iEAAqB;QACrB,8DAAkB;QAClB,8DAAkB;QAClB,2DAAe;QACf,+DAAmB,aAGnB,4DAAY;QACZ,4DAAY;QACZ,kEAAmB;QACnB,oDAAY;QACZ,kDAAU;QACV,gFAAmB;6FAOV,kBAAkB;cArB9B,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,iEAAqB;oBACrB,8DAAkB;oBAClB,8DAAkB;oBAClB,2DAAe;oBACf,+DAAmB;iBACpB;gBACD,OAAO,EAAE;oBACP,4DAAY;oBACZ,4DAAY;oBACZ,kEAAmB;oBACnB,oDAAY;oBACZ,kDAAU;oBACV,gFAAmB;iBACpB;gBACD,SAAS,EAAE;oBACT,EAAE,OAAO,EAAE,kEAAW,EAAE,QAAQ,EAAE,sDAAc,EAAE;oBAClD,EAAE,OAAO,EAAE,uEAAgB,EAAE,QAAQ,EAAE,wDAAgB,EAAE;iBAC1D;aACF;;;;;;;;;;;;;;AC1CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AAEc;AAQjC;AACgD;;;AAE/D,MAAM,kBAAkB,GAAW;IACxC;QACE,IAAI,EAAE,eAAe;QACrB,SAAS,EAAE,iEAAqB;QAChC,WAAW,EAAE,CAAC,wDAAgB,CAAC;QAE/B,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,2DAAe;gBAC1B,WAAW,EAAE,CAAC,4DAAoB,CAAC;aACpC;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,8DAAkB;gBAC7B,WAAW,EAAE,CAAC,4DAAoB,CAAC;aACpC;YACD,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,8DAAkB,EAAE;YAC1D,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,+DAAmB,EAAE;SAC7D;KACF;CACF,CAAC;AAOK,MAAM,yBAAyB;;wGAAzB,yBAAyB;4KAAzB,yBAAyB,kBAJ3B,CAAC,4DAAY,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;QAE1C,4DAAY;mIAEX,yBAAyB,uFAF1B,4DAAY;6FAEX,yBAAyB;cALrC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;gBAEpD,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACxgC;AACP;AACA;AACF;;;;;;;;;;;;;ACHvB;AAAA;AAAA;AAAkD;;AAO3C,MAAM,oBAAoB;IAC/B,gBAAe,CAAC;IAEhB,QAAQ,KAAU,CAAC;IAEnB,MAAM;QACJ,YAAY,CAAC,KAAK,EAAE,CAAC;IACvB,CAAC;;wFAPU,oBAAoB;oGAApB,oBAAoB;QCPjC,yEACE;QAAA,yEACI;QAAA,uEAAyE;QAAA,kEAA0B;QAAC,4DAAI;QAC5G,4DAAM;QACJ,wEACI;QAAA,qEACI;QAAA,0EAAgD;QAAA,+FAA+B;QAAA,4DAAO;QAC1F,4DAAK;QAkGL,qEACI;QAAA,uEACI;QADa,uIAAS,YAAQ,IAAC;QAC/B,mEAA8B;QAAC,kEACnC;QAAA,4DAAI;QACR,4DAAK;QAET,4DAAK;QACT,4DAAM;;6FDzGO,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAA0C;;;;;;;;;;;;;ACA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuB;AACS;AACJ;;;;;;;;;;;;;ACF5B;AAAA;AAAA;AAAA;AAA8B;;;;;;;;;;;;;ACA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAIR;;;;;ICGpB,qEACA;;;IADiE,oMAAuD;;;IACxH,qEACC;;;IAoBT,sEAAkG;;;IAHpG,wEACE;IAAA,+DAAuD;IACvD,2EAAwB;IAAA,uDAAoB;IAAA,4DAAO;IACnD,sHAA2F;IAC7F,4DAAI;;;;IAJ0B,qJAAqB;IAC9C,0DAA+C;IAA/C,0HAA+C;IAC1B,0DAAoB;IAApB,kFAAoB;IACrB,0DAAmE;IAAnE,iIAAmE;;;IAIxF,wEAAoE;IAAA,uDAAqB;IAAA,4DAAI;;;IAAhD,sJAAsB;IAAC,0DAAqB;IAArB,mFAAqB;;;IAD3F,qEACE;IAAA,sHAAoE;IACtE,4DAAK;;;;IADA,0DAAyC;IAAzC,iJAAyC;;;IAFhD,yEACE;IAAA,mHACE;IAEJ,4DAAK;;;IAHC,0DAAyC;IAAzC,+FAAyC;;;IAPjD,qEACE;IAAA,4GACE;IAIF,8GACE;IAIJ,4DAAK;;;IAVA,0DAA0B;IAA1B,uFAA0B;IAKI,0DAAmE;IAAnE,iIAAmE;;ADpBzG,MAAM,aAAa;IAaxB,YACU,QAAyB,EACzB,sBAA8C;QAD9C,aAAQ,GAAR,QAAQ,CAAiB;QACzB,2BAAsB,GAAtB,sBAAsB,CAAwB;QAdxD,YAAO,GAAG,EAAa,CAAC;QAExB,oBAAe,GAAG,kDAAU,CAAC,OAAO,CAAC;QAM7B,kBAAa,GAAmB,EAAE,CAAC;QAE3C,uBAAkB,GAAG,EAAwB,CAAC;IAK3C,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;QAC5C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC;QACjD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,UAAU,CAAC;QAC3C,IAAI,CAAC,uBAAuB,EAAE,CAAC;IACjC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC;IAC3E,CAAC;IAED,MAAM;QACJ,YAAY,CAAC,KAAK,EAAE,CAAC;IACvB,CAAC;IAED,uBAAuB;QACrB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;YAC5B,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,sBAAsB;iBACxB,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC;iBACnC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBAClB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;gBAC/B,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,KAAK,CAAC,EAAE;oBACxC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CACxD,CAAC,CAAC,EAAE,EAAE;wBACJ,OAAO,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC;oBACvB,CAAC,CACF,CAAC;oBACF,OAAO,IAAI,CAAC;iBACb;gBACD,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CACL,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED,YAAY,CAAC,SAAiB;QAC5B,QAAQ,SAAS,EAAE;YACjB,KAAK,SAAS;gBACZ,OAAO,MAAM,CAAC;YAChB,KAAK,QAAQ;gBACX,OAAO,OAAO,CAAC;YACjB,KAAK,WAAW;gBACd,OAAO,MAAM,CAAC;YAChB,KAAK,WAAW;gBACd,OAAO,WAAW,CAAC;YACrB,KAAK,MAAM;gBACT,OAAO,MAAM,CAAC;YAChB,KAAK,KAAK;gBACR,OAAO,MAAM,CAAC;YAChB,KAAK,SAAS;gBACZ,OAAO,UAAU,CAAC;YACpB,KAAK,kBAAkB;gBACrB,OAAO,OAAO,CAAC;YACjB,KAAK,kBAAkB;gBACrB,OAAO,MAAM,CAAC;YAChB;gBACE,OAAO,QAAQ,CAAC;SACnB;IACH,CAAC;;0EA7EU,aAAa;6FAAb,aAAa;QCX1B,yEACE;QAAA,yEACI;QAAA,wEAEE;QACA,wEACM;QAAA,yEAAuC;QAAA,uEAC/B;QAAA,yGACA;QAAA,yGACC;QAAA,4DAAO;QACZ,uEACI;QAAA,0EAAqB;QAAA,2EAA4B;QAAA,8EAA0B;QAAA,wDAAkB;QAAA,4DAAS;QACrG,4DAAO;QAAC,4EAAuC;QAAA,wDAA2B;QAAA,oEAAqB;QAAA,4DAAO;QAAC,4DAAO;QAAC,4DAAI;QACxH,0EACI;QAAA,sEAAI;QAAA,yEAA0B;QAAA,mEAAO;QAAA,4DAAI;QAAA,4DAAK;QAC9C,qEAAyB;QACzB,sEAAI;QAAA,yEAAoC;QAAnB,iIAAS,YAAQ,IAAC;QAAC,kEAAM;QAAA,4DAAI;QAAA,4DAAK;QAC3D,4DAAK;QACT,4DAAM;QACN,2EACI;QAAA,kEACJ;QAAA,4DAAM;QACV,4DAAK;QAGL,0GACE;QAWJ,4DAAK;QACX,4DAAM;QACR,4DAAM;;QAhCqB,0DAA4B;QAA5B,0FAA4B;QAC5B,0DAA6B;QAA7B,2FAA6B;QAGyC,0DAAkB;QAAlB,iFAAkB;QAC7C,0DAA2B;QAA3B,sIAA2B;QAanF,2DAAwC;QAAxC,4FAAwC;;6FDdzC,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACA;AACE;;AAO1C,MAAM,UAAU;;yFAAV,UAAU;8IAAV,UAAU,kBAHZ,CAAC,4DAAY,EAAE,4DAAY,CAAC;mIAG1B,UAAU,mBAJN,6DAAa,aAClB,4DAAY,EAAE,4DAAY,aAC1B,6DAAa;6FAEZ,UAAU;cALtB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,6DAAa,CAAC;gBAC7B,OAAO,EAAE,CAAC,4DAAY,EAAE,4DAAY,CAAC;gBACrC,OAAO,EAAE,CAAC,6DAAa,CAAC;aACzB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAsC;;;;;;;;;;;;;ACAtC;AAAA;AAAA;AAAkD;;AAO3C,MAAM,iBAAiB;IAC5B,gBAAe,CAAC;IAEhB,QAAQ,KAAU,CAAC;;kFAHR,iBAAiB;iGAAjB,iBAAiB;QCP9B,yEACE;QAAA,qEAAI;QAAA,8DAAG;QAAA,4DAAK;QACZ,wEAAsB;QAAA,0FAAqB;QAAA,4DAAK;QAEhD,yEACE;QAAA,qEACE;QAAA,qYAEF;QAAA,4DAAK;QACH,0EACI;QAAA,4EAAuE;QAAA,kEAAM;QAAA,4DAAS;QAC1F,4DAAO;QACX,4DAAM;QACR,4DAAM;;6FDNO,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEND;AAAA;AAAO,MAAM,UAAU,GAAG;IACxB,OAAO,EAAE,uBAAuB;CAEjC,CAAC;;;;;;;;;;;;;ACHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6B;AACS;;;;;;;;;;;;;ACDtC;AAAA;AAAO,MAAM,YAAY,GAAG;IAC1B,SAAS,EAAE,iBAAiB;IAC5B,SAAS,EAAE,gBAAgB;IAC3B,aAAa,EAAE,mBAAmB;IAClC,aAAa,EAAE,mBAAmB;IAClC,eAAe,EAAE,sBAAsB;IACvC,YAAY,EAAE,4BAA4B;IAC1C,aAAa,EAAE,0BAA0B;CAC1C,CAAC;;;;;;;;;;;;;ACRF;AAAA;AAAA;AAAA;AAAoC;;;;;;;;;;;;;ACApC;AAAA;AAAA;AAAA;AAA2E;AACF;;AAYlE,MAAM,gBAAgB;IAO3B,YAAoB,EAAc;QAAd,OAAE,GAAF,EAAE,CAAY;IAAG,CAAC;IAEtC,UAAU,CAAC,KAAU;QACnB,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;SAC1D;IACH,CAAC;IAED,gBAAgB,CAAC,EAAO;QACtB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IAED,iBAAiB,CAAC,EAAO;QACvB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,CAAC;IAGD,OAAO,CAAC,MAAW;QACjB,MAAM,KAAK,GAAW,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QAE7D,qCAAqC;QACrC,IAAI,MAAM,CAAC,OAAO,KAAK,CAAC,EAAE;YACxB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACrB,OAAO;SACR;QAED,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAC/D,IAAI,KAAK,CAAC,MAAM,IAAI,GAAG,CAAC,MAAM,EAAE;YAC9B,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SACtB;QAED,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IACnD,CAAC;IAGD,MAAM,CAAC,MAAW;QAChB,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,KAAK,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YACtD,OAAO;SACR;QACD,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAClB,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;IAC3B,CAAC;IAED,cAAc,CAAC,KAAa;QAC1B,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QACjC,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAC/D,MAAM,SAAS,GAAG,KAAK,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;QACtE,IAAI,YAAY,GAAG,CAAC,CAAC;QAErB,KAAK,GAAG,EAAE,CAAC;QACX,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5C,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;gBAC3C,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aACjC;iBAAM;gBACL,KAAK,IAAI,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;aACpC;SACF;QAED,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;YAC3B,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;SAC7C;QAED,OAAO,KAAK,CAAC;IACf,CAAC;;gFAtEU,gBAAgB;gGAAhB,gBAAgB;8IAAhB,mBAAe,gFAAf,kBAAc;qHARd;YACT;gBACE,OAAO,EAAE,gEAAiB;gBAC1B,WAAW,EAAE,gBAAgB;gBAC7B,KAAK,EAAE,IAAI;aACZ;SACF;6FAEU,gBAAgB;cAV5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,gEAAiB;wBAC1B,WAAW,EAAE,gBAAgB;wBAC7B,KAAK,EAAE,IAAI;qBACZ;iBACF;aACF;;kBAME,mDAAK;mBAAC,SAAS;;kBAkBf,0DAAY;mBAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;;kBAkBhC,0DAAY;mBAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;;;;;;;;;;;;;;ACtDlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgC;AACH;AAEF;AACK;AACH;AACN;AACQ;;;;;;;;;;;;;ACP/B;AAAA;AAAA;AAAA;AAAA;AAA2C;AAQO;;;AAK3C,MAAM,eAAe;IAC1B,YAAmB,OAAwB;QAAxB,YAAO,GAAP,OAAO,CAAiB;IAAG,CAAC;IAE/C,SAAS,CACP,GAAqB,EACrB,IAAiB;QAEjB,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC;QAEnD,MAAM,CAAC,GAAG,6DAAU,CAAC,OAAO,CAAC,MAAM,CAAC;QACpC,MAAM,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,6DAAU,CAAC,OAAO,CAAC;QAEpE,IAAI,SAAS,IAAI,YAAY,EAAE;YAC7B,MAAM,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC;gBACxB,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,UAAU,SAAS,CAAC,KAAK,EAAE,CAAC;aACvE,CAAC,CAAC;YAEH,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SAC7B;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAC1B,CAAC;;8EApBU,eAAe;kGAAf,eAAe,WAAf,eAAe;6FAAf,eAAe;cAD3B,wDAAU;;;;;;;;;;;;;;ACZX;AAAA;AAAA;AAAA;AAAmC;;;;;;;;;;;;;ACAnC;AAAA;AAAA;AAAA;;;GAGG;AAEiD;;AAK7C,MAAM,OAAO;IAClB;;;;;;OAMG;IACH,SAAS,CAAC,GAAW;QACnB,IAAI,CAAC,GAAG,EAAE;YACR,OAAO,EAAE,CAAC;SACX;QAED,MAAM,QAAQ,GAAG,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QAExC,IAAI,QAAQ,CAAC,MAAM,KAAK,EAAE,EAAE;YAC1B,OAAO,GAAG,CAAC;SACZ;QAED,MAAM,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,gCAAgC,CAAC,CAAC;QAElE,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;YACrC,GAAG,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;SACrE;QAED,OAAO,GAAG,CAAC;IACb,CAAC;;8DA1BU,OAAO;oGAAP,OAAO;6FAAP,OAAO;cAHnB,kDAAI;eAAC;gBACJ,IAAI,EAAE,SAAS;aAChB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAA2B;;;;;;;;;;;;;ACA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgC;AACM;;;;;;;;;;;;;ACDtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGW;AAEZ;;;;AAInC,MAAM,YAAY;IAKvB,YACU,IAAgB,EAChB,oBAAqC;QADrC,SAAI,GAAJ,IAAI,CAAY;QAChB,yBAAoB,GAApB,oBAAoB,CAAiB;QAN9B,SAAI,GAAW,OAAO,CAAC;QAExC,WAAM,GAAG,IAAI,mEAAgB,EAAE,CAAC;IAK7B,CAAC;IAEJ,KAAK,CAAC,KAAY;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,kDAAU,CAAC,OAAO,QAAQ,EAAE,KAAK,EAAE;YAC1D,OAAO,EAAE,UAAU;YACnB,YAAY,EAAE,MAAM;SACrB,CAAC,CAAC;IACL,CAAC;IAED,YAAY,CAAC,kBAA0B;QACrC,MAAM,GAAG,GAAG,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAE5C,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QAC7C,MAAM,SAAS,GAAc;YAC3B,KAAK,EAAE,GAAG;YACV,KAAK,EAAE,GAAG;SACX,CAAC;QAEF,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;IACzD,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;IACpD,CAAC;IAED,MAAM,CAAC,KAAa;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,SAAS,EAAE,KAAK,CAAC,CAAC;IAC3E,CAAC;;wEAnCU,YAAY;+FAAZ,YAAY,WAAZ,YAAY;6FAAZ,YAAY;cADxB,wDAAU;;;;;;;;;;;;;;ACRX;AAAA;AAAA;AAAA;AAA2C;;;AAMpC,MAAM,iBAAiB;IAC5B,YAAoB,QAAyB;QAAzB,aAAQ,GAAR,QAAQ,CAAiB;IAAG,CAAC;IAEjD,UAAU;QACR,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;QAC/C,OAAO,CAAC,CAAC,SAAS,CAAC;IACrB,CAAC;;kFANU,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB,mBAFhB,MAAM;6FAEP,iBAAiB;cAH7B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAID;;;AAKnC,MAAM,cAAc;IAGzB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFnB,SAAI,GAAW,WAAW,CAAC;IAEL,CAAC;IAExC,MAAM;QACJ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;IAClE,CAAC;IAED,MAAM,CAAC,UAAyB;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;IACpE,CAAC;IAED,MAAM,CAAC,OAAgB;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,IAAI,OAAO,CAAC,EAAE,EAAE,EACjD,OAAO,CACR,CAAC;IACJ,CAAC;IAED,QAAQ,CAAC,EAAU;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,GAAG,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,CAAC;IAC3E,CAAC;;4EAtBU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA,yCAAyC;AACE;;;AAQpC,MAAM,kBAAkB;IAG7B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFnB,SAAI,GAAW,2BAA2B,CAAC;IAErB,CAAC;IAExC,WAAW,CAAC,GAAW;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,OAAO,CAAC,CAAC;IAC5D,CAAC;;oFAPU,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;6FAEP,kBAAkB;cAH9B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAID;;;AAKnC,MAAM,eAAe;IAG1B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFnB,WAAM,GAAW,UAAU,CAAC;IAEN,CAAC;IAExC,aAAa;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;IACnE,CAAC;IAED,mBAAmB,CAAC,QAAgB;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,IAAI,QAAQ,UAAU,CAC1D,CAAC;IACJ,CAAC;;8EAbU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;6FAEP,eAAe;cAH3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAID;;;AAKnC,MAAM,mBAAmB;IAG9B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFnB,SAAI,GAAW,gBAAgB,CAAC;IAEV,CAAC;IAExC,MAAM;QACJ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;IACvE,CAAC;IAED,MAAM,CAAC,YAA0B;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IACtE,CAAC;IAED,QAAQ,CAAC,EAAU;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE,EAAE,CAC1C,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,YAA0B;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,IAAI,YAAY,CAAC,EAAE,EAAE,EACtD,YAAY,CACb,CAAC;IACJ,CAAC;;sFAxBU,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM;6FAEP,mBAAmB;cAH/B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACH;AACX;AACM;AACA;AACF;AACH;AACmB;;;;;;;;;;;;;ACPtD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAOD;;;AAKnC,MAAM,+BAA+B;IAG1C,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFnB,SAAI,GAAW,2BAA2B,CAAC;IAErB,CAAC;IAExC,MAAM;QACJ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAC/B,CAAC;IACJ,CAAC;IAED,QAAQ,CACN,IAAY,EACZ,IAAY;QAEZ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,CACpD,CAAC;IACJ,CAAC;IAED,MAAM,CACJ,2BAAwD;QAExD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,EAC9B,2BAA2B,CAC5B,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,IAAY,EAAE,IAAY;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CACrB,GAAG,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,CACpD,CAAC;IACJ,CAAC;;8GAjCU,+BAA+B;kHAA/B,+BAA+B,WAA/B,+BAA+B,mBAF9B,MAAM;6FAEP,+BAA+B;cAH3C,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAID;;;AAKnC,MAAM,mBAAmB;IAG9B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFnB,SAAI,GAAW,gBAAgB,CAAC;IAEV,CAAC;IAExC,MAAM;QACJ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;IACvE,CAAC;IAED,MAAM,CAAC,YAA0B;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IACtE,CAAC;IAED,QAAQ,CAAC,EAAU;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE,EAAE,CAC1C,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,YAA0B;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,IAAI,YAAY,CAAC,EAAE,EAAE,EACtD,YAAY,CACb,CAAC;IACJ,CAAC;;sFAxBU,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM;6FAEP,mBAAmB;cAH/B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAID;;;AAKnC,MAAM,uBAAuB;IAGlC,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFnB,SAAI,GAAW,oBAAoB,CAAC;IAEd,CAAC;IAExC,MAAM;QACJ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAqB,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3E,CAAC;;8FAPU,uBAAuB;0GAAvB,uBAAuB,WAAvB,uBAAuB,mBAFtB,MAAM;6FAEP,uBAAuB;cAHnC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAID;;;AAKnC,MAAM,0BAA0B;IAGrC,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFnB,SAAI,GAAW,uBAAuB,CAAC;IAEjB,CAAC;IAExC,MAAM;QACJ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAwB,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9E,CAAC;;oGAPU,0BAA0B;6GAA1B,0BAA0B,WAA1B,0BAA0B,mBAFzB,MAAM;6FAEP,0BAA0B;cAHtC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;AAUpC,MAAM,oBAAoB;IAC/B,YACU,MAAc,EACd,cAA+B;QAD/B,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAiB;IACtC,CAAC;IAEJ,WAAW,CACT,KAA6B,EAC7B,KAA0B;;QAE1B,MAAM,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;QAEtD,MAAM,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC;QAE5C,IAAI,CAAC,EAAE,EAAE;YACP,YAAY,CAAC,KAAK,EAAE,CAAC;YACrB,OAAO,KAAK,CAAC;SACd;QAED,MAAM,EAAE,GAAG,EAAE,GAAG,KAAK,CAAC;QAEtB,MAAM,SAAS,eAAG,UAAU,CAAC,MAAM,0CAAE,UAAU,0CAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;QAE5E,IAAI,SAAS,EAAE;YACb,MAAM,eAAe,GAAG,EAAE,CAAC,IAAI,CAC7B,CAAC,CAAC,EAAE,EAAE;;gBACJ,QAAC,CAAC,QAAQ,YAAK,UAAU,CAAC,MAAM,0CAAE,EAAE;oBACpC,CAAC,CAAC,WAAW,KAAK,SAAS,CAAC,EAAE;aAAA,CACjC,CAAC;YAEF,IAAI,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;gBAChC,OAAO,IAAI,CAAC;aACb;SACF;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAChC,OAAO,KAAK,CAAC;IACf,CAAC;;wFApCU,oBAAoB;uGAApB,oBAAoB,WAApB,oBAAoB;6FAApB,oBAAoB;cADhC,wDAAU;;;;;;;;;;;;;;ACTX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;AACE;AACO;;;;;;;;;;;;;ACF9C;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;AAKpC,MAAM,gBAAgB;IAC3B,YACU,MAAc,EACd,cAA+B;QAD/B,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAiB;IACtC,CAAC;IAEJ,WAAW;QACT,MAAM,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;QACtD,IAAI,UAAU,EAAE;YACd,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC3B,OAAO,IAAI,CAAC;aACb;SACF;QAED,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACjC,OAAO,KAAK,CAAC;IACf,CAAC;;gFAjBU,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB;6FAAhB,gBAAgB;cAD5B,wDAAU;;;;;;;;;;;;;;ACJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;;AAMpC,MAAM,gBAAgB;IAC3B,YACU,MAAc,EACd,cAA8B,EAC9B,cAA+B;QAF/B,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,mBAAc,GAAd,cAAc,CAAiB;IACtC,CAAC;IAEJ,WAAW;QACT,MAAM,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;QAEtD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACjC,OAAO,KAAK,CAAC;IACf,CAAC;;gFAZU,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB;6FAAhB,gBAAgB;cAD5B,wDAAU;;;;;;;;;;;;;;ACLX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;AACN;AACU;AACX;AACD;;;;;;;;;;;;;ACJvB;AAAA;AAAA;AAAA;AAA2C;AAQF;;AAGlC,MAAM,eAAe;IAC1B,YAAY;QACV,MAAM,GAAG,GAAG,YAAY,CAAC,OAAO,CAAC,oDAAY,CAAC,SAAS,CAAC,CAAC;QAEzD,IAAI,GAAG,IAAI,IAAI,EAAE;YACf,OAAO,IAAI,CAAC;SACb;QAED,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC;IAED,YAAY,CAAC,GAAY;QACvB,IAAI,GAAG,IAAI,IAAI,EAAE;YACf,YAAY,CAAC,UAAU,CAAC,oDAAY,CAAC,SAAS,CAAC,CAAC;YAChD,OAAO;SACR;QAED,YAAY,CAAC,OAAO,CAAC,oDAAY,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,iBAAiB;QACf,MAAM,GAAG,GAAG,YAAY,CAAC,OAAO,CAAC,oDAAY,CAAC,SAAS,CAAC,CAAC;QAEzD,IAAI,GAAG,IAAI,IAAI,EAAE;YACf,OAAO,IAAI,CAAC;SACb;QAED,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC;IAED,iBAAiB,CAAC,GAAc;QAC9B,IAAI,GAAG,IAAI,IAAI,EAAE;YACf,YAAY,CAAC,UAAU,CAAC,oDAAY,CAAC,SAAS,CAAC,CAAC;YAChD,OAAO;SACR;QAED,YAAY,CAAC,OAAO,CAAC,oDAAY,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,eAAe;QACb,MAAM,GAAG,GAAG,YAAY,CAAC,OAAO,CAAC,oDAAY,CAAC,aAAa,CAAC,CAAC;QAE7D,IAAI,GAAG,IAAI,IAAI,EAAE;YACf,OAAO,IAAI,CAAC;SACb;QAED,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC;IAED,eAAe,CAAC,GAAa;QAC3B,IAAI,GAAG,IAAI,IAAI,EAAE;YACf,YAAY,CAAC,UAAU,CAAC,oDAAY,CAAC,aAAa,CAAC,CAAC;YACpD,OAAO;SACR;QAED,YAAY,CAAC,OAAO,CAAC,oDAAY,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;IACxE,CAAC;IAED,iBAAiB;QACf,MAAM,GAAG,GAAG,YAAY,CAAC,OAAO,CAAC,oDAAY,CAAC,eAAe,CAAC,CAAC;QAE/D,IAAI,GAAG,IAAI,IAAI,EAAE;YACf,OAAO,IAAI,CAAC;SACb;QAED,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC;IAED,iBAAiB,CAAC,GAAiB;QACjC,IAAI,GAAG,IAAI,IAAI,EAAE;YACf,YAAY,CAAC,UAAU,CAAC,oDAAY,CAAC,eAAe,CAAC,CAAC;YACtD,OAAO;SACR;QAED,YAAY,CAAC,OAAO,CAAC,oDAAY,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;IAC1E,CAAC;IAED,UAAU;QACR,MAAM,GAAG,GAAG,YAAY,CAAC,OAAO,CAAC,oDAAY,CAAC,YAAY,CAAC,CAAC;QAE5D,IAAI,GAAG,IAAI,IAAI,EAAE;YACf,OAAO,IAAI,CAAC;SACb;QAED,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC;IAED,UAAU,CAAC,GAAyB;QAClC,IAAI,GAAG,IAAI,IAAI,EAAE;YACf,YAAY,CAAC,UAAU,CAAC,oDAAY,CAAC,YAAY,CAAC,CAAC;YACnD,OAAO;SACR;QAED,YAAY,CAAC,OAAO,CAAC,oDAAY,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;IACvE,CAAC;;8EA9FU,eAAe;kGAAf,eAAe,WAAf,eAAe;6FAAf,eAAe;cAD3B,wDAAU;;;;;;;;;;;;;;ACVX;AAAA;AAAA;AAAA;AAAA;AAA2C;AAID;;;AAKnC,MAAM,sBAAsB;IAGjC,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFnB,SAAI,GAAW,kBAAkB,CAAC;IAEZ,CAAC;IAExC,mBAAmB;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAuB,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7E,CAAC;IAED,6BAA6B,CAC3B,SAAS,GAAG,KAAK,EACjB,YAAY,GAAG,EAAE,EACjB,OAAO,GAAG,YAAY,EACtB,IAAI,GAAG,CAAC;QAER,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GACE,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAC5B,mBAAmB,SAAS,iBAAiB,YAAY,YAAY,OAAO,SAAS,IAAI,EAAE,CAC5F,CAAC;IACJ,CAAC;;4FApBU,sBAAsB;yGAAtB,sBAAsB,WAAtB,sBAAsB,mBAFrB,MAAM;6FAEP,sBAAsB;cAHlC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACT;AACD;AACG;AACM;;;;;;;;;;;;;ACJ1C;AAAA;AAAA;AAAA;AAAA;AAA2C;AAID;;;AAKnC,MAAM,sBAAsB;IAGjC,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFnB,SAAI,GAAW,kBAAkB,CAAC;IAEZ,CAAC;IAExC,MAAM;QACJ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAuB,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7E,CAAC;IAED,KAAK,CAAC,QAAgB,EAAE,WAAmB;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,IAAI,QAAQ,IAAI,WAAW,EAAE,CAC/D,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,eAAmC;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,IAAI,eAAe,CAAC,QAAQ,IAC3D,eAAe,CAAC,WAClB,EAAE,EACF,eAAe,CAChB,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,eAAmC;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;IACzE,CAAC;;4FA1BU,sBAAsB;yGAAtB,sBAAsB,WAAtB,sBAAsB,mBAFrB,MAAM;6FAEP,sBAAsB;cAHlC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAID;;;AAKnC,MAAM,aAAa;IAGxB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFnB,SAAI,GAAW,UAAU,CAAC;IAEJ,CAAC;IAExC,MAAM;QACJ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;IACpE,CAAC;IAED,KAAK,CAAC,QAAgB;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,IAAI,QAAQ,EAAE,CAChD,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,MAAiB;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAChE,CAAC;IAED,MAAM,CAAC,EAAU,EAAE,MAAiB;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC;IAC1E,CAAC;;0EArBU,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAFZ,MAAM;6FAEP,aAAa;cAHzB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAID;;;AAKnC,MAAM,gBAAgB;IAG3B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFnB,SAAI,GAAW,aAAa,CAAC;IAEP,CAAC;IAExC,MAAM;QACJ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;IACrE,CAAC;IAED,MAAM,CAAC,SAAuB;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IACnE,CAAC;;gFAXU,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;6FAEP,gBAAgB;cAH5B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAID;;;AAKnC,MAAM,cAAc;IAGzB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFnB,SAAI,GAAW,WAAW,CAAC;IAEL,CAAC;IAExC,MAAM;QACJ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAsB,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5E,CAAC;IAED,WAAW,CAAC,EAAU;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,GAAG,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,CAAC;IAC3E,CAAC;IAED,cAAc,CAAC,KAAa;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,gBAAgB,KAAK,EAAE,CACzD,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,OAAsB;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACjE,CAAC;IAED,UAAU,CAAC,OAA0B;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,IAAI,OAAO,CAAC,EAAE,EAAE,EACjD,OAAO,CACR,CAAC;IACJ,CAAC;IAED,WAAW,CAAC,IAAc,EAAE,EAAU;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,GAAG,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,YAAY,EAAE,EAAE,EACjD,IAAI,CACL,CAAC;IACJ,CAAC;IAED,YAAY,CAAC,OAA0B;QACrC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CACpB,GAAG,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,WAAW,OAAO,CAAC,EAAE,EAAE,EACxD,OAAO,CACR,CAAC;IACJ,CAAC;IAED,WAAW,CAAC,OAA0B;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CACpB,GAAG,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,UAAU,OAAO,CAAC,EAAE,EAAE,EACvD,OAAO,CACR,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,OAA0B;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,kDAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,IAAI,OAAO,CAAC,EAAE,EAAE,EACjD,OAAO,CACR,CAAC;IACJ,CAAC;;4EAxDU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAsB3B;AAKE;AAC0B;AACf;;AAiC1B,MAAM,YAAY;;2FAAZ,YAAY;kJAAZ,YAAY,mBAvBZ;QACT,sDAAY;QACZ,yDAAe;QACf,gEAAsB;QACtB,wDAAc;QACd,uDAAa;QACb,0DAAgB;QAChB,2DAAiB;QACjB,0DAAgB;QAChB,0DAAgB;QAChB,8DAAoB;QACpB,gEAAsB;QACtB,oEAA0B;QAC1B,wDAAc;QACd,6DAAmB;QACnB,yEAA+B;QAC/B,6DAAmB;QACnB,iEAAuB;QACvB,4DAAkB;QAClB,yDAAe;KAChB,YArBQ,CAAC,4DAAY,EAAE,sDAAU,CAAC;mIAwBxB,YAAY,mBA7BrB,gEAAoB;QACpB,6DAAiB;QACjB,4DAAgB;QAChB,6CAAO,aAEC,4DAAY,EAAE,sDAAU,aAsBxB,gEAAoB,EAAE,6DAAiB,EAAE,4DAAgB,EAAE,6CAAO;6FAEjE,YAAY;cA/BxB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,gEAAoB;oBACpB,6DAAiB;oBACjB,4DAAgB;oBAChB,6CAAO;iBACR;gBACD,OAAO,EAAE,CAAC,4DAAY,EAAE,sDAAU,CAAC;gBACnC,SAAS,EAAE;oBACT,sDAAY;oBACZ,yDAAe;oBACf,gEAAsB;oBACtB,wDAAc;oBACd,uDAAa;oBACb,0DAAgB;oBAChB,2DAAiB;oBACjB,0DAAgB;oBAChB,0DAAgB;oBAChB,8DAAoB;oBACpB,gEAAsB;oBACtB,oEAA0B;oBAC1B,wDAAc;oBACd,6DAAmB;oBACnB,yEAA+B;oBAC/B,6DAAmB;oBACnB,iEAAuB;oBACvB,4DAAkB;oBAClB,yDAAe;iBAChB;gBACD,OAAO,EAAE,CAAC,gEAAoB,EAAE,6DAAiB,EAAE,4DAAgB,EAAE,6CAAO,CAAC;aAC9E;;;;;;;;;;;;;;AC9DD;AAAA;AAAA;AAAA;AAA2E;AAEpE,MAAM,cAAe,SAAQ,wEAAiB;IACnD,MAAM,CAAC,IAAU,EAAE,aAAqB;QACtC,IAAI,aAAa,KAAK,OAAO,EAAE;YAC7B,IAAI,GAAG,GAAW,IAAI,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC;YAC5C,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;YAClC,IAAI,KAAK,GAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;YACrD,KAAK,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;YAC1C,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;YAChC,OAAO,GAAG,GAAG,IAAI,KAAK,IAAI,IAAI,EAAE,CAAC;SAClC;QACD,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC;IAC7B,CAAC;CACF;AACM,MAAM,gBAAgB,GAAmB;IAC9C,KAAK,EAAE;QACL,SAAS,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,EAAE;KAC/D;IACD,OAAO,EAAE;QACP,SAAS,EAAE,OAAO;QAClB,cAAc,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE;QACrD,aAAa,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE;QACjE,kBAAkB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE;KACvD;CACF,CAAC;;;;;;;;;;;;;ACzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoC;;;;;;;;;;;;;ACMpC;AAAA;AAAO,MAAM,YAAY;IACvB,MAAM,CAAC,QAAQ,CAAC,OAAwB;QACtC,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACjC,OAAO,IAAI,CAAC;SACb;QACD,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;IACvB,CAAC;IAED,MAAM,CAAC,SAAS,CAAC,GAAQ;QACvB,GAAG,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QACrC,MAAM,aAAa,GAAG,6DAA6D,CAAC;QAEpF,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,MAAM,KAAK,EAAE,IAAI,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YACxD,OAAO,KAAK,CAAC;SACd;QAED,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;QACvB,IAAI,WAAW,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,CAAC,GAAG,EAAE,CAAC;QAEX,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;YAC3C,WAAW,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;YACtC,CAAC,IAAI,WAAW,GAAG,CAAC,CAAC;YACrB,CAAC,IAAI,CAAC,CAAC;YACP,CAAC,IAAI,WAAW,CAAC;SAClB;QAED,IAAI,OAAO,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;QAC5B,IAAI,OAAO,KAAK,EAAE,IAAI,OAAO,KAAK,EAAE,EAAE;YACpC,OAAO,GAAG,CAAC,CAAC;SACb;QAED,MAAM,YAAY,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC;QAChE,CAAC,GAAG,EAAE,CAAC;QACP,CAAC,GAAG,CAAC,CAAC;QACN,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;YAC3C,CAAC,IAAI,YAAY,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YAC1C,CAAC,IAAI,CAAC,CAAC;SACR;QAED,IAAI,cAAc,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;QACnC,IAAI,cAAc,KAAK,EAAE,IAAI,cAAc,KAAK,EAAE,EAAE;YAClD,cAAc,GAAG,CAAC,CAAC;SACpB;QAED,OAAO,CACL,GAAG,OAAO,GAAG,cAAc,EAAE;YAC7B,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAC1C,CAAC;IACJ,CAAC;CACF;;;;;;;;;;;;;ACzDD;AAAA;AAAA;AAAA;AAAgC;;;;;;;;;;;;;ACAhC;AAAA;AAAA;AAAA;AAA0C;;;AAGnC,MAAM,kBAAkB;;oFAAlB,kBAAkB;kGAAlB,kBAAkB;QADP,2EAA+B;;6FAC1C,kBAAkB;cAD9B,uDAAS;eAAC,EAAE,QAAQ,EAAE,iCAAiC,EAAE;;;;;;;;;;;;;;ACF1D;AAAA;AAAA;AAAA;AAA0C;;;AASnC,MAAM,iBAAiB;IAL9B;QAME,oBAAe,GAAiB;YAC9B,UAAU,EAAE,IAAI;SACjB,CAAC;QAEF,mBAAc,GAAY;YACxB,OAAO;YACP,QAAQ;YACR,WAAW;YACX,WAAW;YACX,QAAQ;YACR,QAAQ;SACT,CAAC;QAEF,iBAAY,GAAc,KAAK,CAAC;QAEhC,mBAAc,GAAG,IAAI,CAAC;QAEtB,oBAAe,GAAG,EAAE,CAAC;QAErB,iBAAY,GAAoB;YAC9B,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,aAAa,EAAE;SACzD,CAAC;KACH;;kFAvBY,iBAAiB;iGAAjB,iBAAiB;QCT9B,yEACE;QAAA,uEAOS;QACX,4DAAM;;QAPF,0DAAyB;QAAzB,sFAAyB;;6FDOhB,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAsC;;;;;;;;;;;;;ACAtC;AAAA;AAAA;AAAA;AAAkD;;;AAS3C,MAAM,oBAAoB;IALjC;QAMS,uBAAkB,GAAiB;YACxC,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE;gBACN,KAAK,EAAE;oBACL;wBACE,KAAK,EAAE;4BACL,GAAG,EAAE,CAAC;4BACN,GAAG,EAAE,EAAE;yBACR;qBACF;iBACF;gBACD,KAAK,EAAE;oBACL;wBACE,KAAK,EAAE;4BACL,GAAG,EAAE,CAAC;4BACN,GAAG,EAAE,EAAE;yBACR;qBACF;iBACF;aACF;SACF,CAAC;QAEK,oBAAe,GAAc,QAAQ,CAAC;QAEtC,sBAAiB,GAAG,IAAI,CAAC;QAEzB,oBAAe,GAAoB;YACxC;gBACE,IAAI,EAAE;oBACJ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE;oBACvB,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE;oBACvB,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE;oBACvB,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE;iBACxB;gBACD,KAAK,EAAE,qBAAqB;aAC7B;SACF,CAAC;KACH;;wFAtCY,oBAAoB;oGAApB,oBAAoB;QCTjC,yEACE;QAAA,uEAKS;QACX,4DAAM;;QALF,0DAA4B;QAA5B,yFAA4B;;6FDOnB,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAyC;;;;;;;;;;;;;ACAzC;AAAA;AAAA;AAAA;AAA0C;;;AASnC,MAAM,sBAAsB;IALnC;QAME,wBAAmB,GAAY,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;QAExD,sBAAiB,GAAiB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;QAEjD,sBAAiB,GAAc,UAAU,CAAC;KAC3C;;4FANY,sBAAsB;sGAAtB,sBAAsB;QCTnC,yEACE;QAAA,uEAIS;QACX,4DAAM;;QAJF,0DAA0B;QAA1B,uFAA0B;;6FDOjB,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAA2C;;;;;;;;;;;;;ACA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4B;AACG;AACE;AACJ;AACD;AACE;;;;;;;;;;;;;ACL9B;AAAA;AAAA;AAAA;AAAuC;;;;;;;;;;;;;ACAvC;AAAA;AAAA;AAAA;AAAkD;;;AAS3C,MAAM,kBAAkB;IAL/B;QAgBE,qBAAgB,GAAG,EAAE,CAAC;KAuCvB;IAnCC,QAAQ;QACN,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,aAAa,GAAG;YACnB,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,kBAAkB,EAAE;SAC9D,CAAC;QAEF,IAAI,CAAC,eAAe,GAAG;YACrB,SAAS;YACT,UAAU;YACV,OAAO;YACP,OAAO;YACP,KAAK;YACL,MAAM;SACP,CAAC;QAEF,IAAI,CAAC,gBAAgB,GAAG;YACtB,UAAU,EAAE,IAAI;SACjB,CAAC;QAEF,IAAI,CAAC,eAAe,GAAG;YACrB;gBACE,WAAW,EAAE,OAAO;gBACpB,eAAe,EAAE,sBAAsB;aACxC;SACF,CAAC;QAEF,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAE5B,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAE3B,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC;IAC9B,CAAC;;oFAjDU,kBAAkB;kGAAlB,kBAAkB;QCT/B,yEACE;QAAA,uEAQS;QACX,4DAAM;;QARA,0DAA0B;QAA1B,uFAA0B;;6FDOnB,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAsC;;;;;;;;;;;;;ACAtC;AAAA;AAAA;AAAA;AAA0C;AAOtB;;;AAOb,MAAM,iBAAiB;IAe5B;QAdO,oBAAe,GAAiB;YACrC,UAAU,EAAE,IAAI;SACjB,CAAC;QAEK,mBAAc,GAAY,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,QAAQ,CAAC,CAAC;QAE3D,iBAAY,GAAkB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAE3C,iBAAY,GAAc,KAAK,CAAC;QAEhC,mBAAc,GAAG,IAAI,CAAC;QAEtB,oBAAe,GAAG,EAAE,CAAC;QAG1B,4EAAyB,EAAE,CAAC;QAC5B,2EAAwB,EAAE,CAAC;IAC7B,CAAC;;kFAlBU,iBAAiB;iGAAjB,iBAAiB;QCd9B,yEACE;QAAA,uEAOS;QACX,4DAAM;;QAPF,0DAAqB;QAArB,kFAAqB;;6FDYZ,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAwC;;;;;;;;;;;;;ACAxC;AAAA;AAAA;AAAA;AAA0C;;;AASnC,MAAM,mBAAmB;IALhC;QAMS,sBAAiB,GAAuB;YAC7C,UAAU,EAAE,IAAI;SACjB,CAAC;QAEK,qBAAgB,GAAY;YACjC,aAAa;YACb,eAAe;YACf,iBAAiB;YACjB,aAAa;YACb,QAAQ;YACR,qBAAqB;YACrB,mBAAmB;SACpB,CAAC;QAEK,mBAAc,GAAoB;YACvC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,yBAAyB,EAAE;SAClE,CAAC;QAEK,mBAAc,GAAc,OAAO,CAAC;KAC5C;;sFApBY,mBAAmB;mGAAnB,mBAAmB;QCThC,yEACE;QAAA,uEAKS;QACX,4DAAM;;QALF,0DAA2B;QAA3B,wFAA2B;;6FDOlB,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;;AAO3C,MAAM,aAAa;IACxB,gBAAe,CAAC;IAEhB,QAAQ,KAAI,CAAC;;0EAHF,aAAa;6FAAb,aAAa;QCP1B,yEACE;QAAA,sEAAqB;QAEnB,yEACE;QAAA,yEACE;QACA,+EAAuC;QACzC,4DAAM;QAEJ,yEACE;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,sEAAI;QAAA,+EACA;QAAA,yEAAO;QAAA,+EAAmB;QAAA,4DAAQ;QACtC,4DAAK;QACT,4DAAM;QACN,0EACI;QAAA,uEACE;QAAA,6EAAiC;QACnC,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,0EACI;QAAA,sEAAI;QAAA,6EAAiB;QAAA,4DAAK;QAC9B,4DAAM;QACN,0EACI;QAAA,uEACE;QAAA,4EAA+B;QACjC,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,0EACI;QAAA,0EACI;QAAA,sEAAI;QAAA,uEAAW;QAAA,4DAAK;QAExB,4DAAM;QACN,0EACI;QAAA,0EACE;QAAA,+EAAqC;QACvC,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,0EACI;QAAA,sEAAI;QAAA,gEAAI;QAAA,4DAAK;QAEjB,4DAAM;QACN,0EACI;QAAA,uEACE;QAAA,4EAA+B;QACjC,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,0EACI;QAAA,0EACI;QAAA,sEAAI;QAAA,+EAAmB;QAAA,4DAAK;QAChC,4DAAM;QACN,0EACI;QAAA,uEACE;QAAA,8EAAmC;QACrC,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,0EACI;QAAA,sEAAI;QAAA,kFAAsB;QAAA,4DAAK;QACnC,4DAAM;QACN,0EACI;QAAA,uEACE;QAAA,iFAAyC;QAC3C,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACR,4DAAM;QAEV,4DAAM;;6FDxFO,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAiC;;;;;;;;;;;;;ACAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuB;AACI;AACW;;;;;;;;;;;;;ACFtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AAEc;AAEU;AACK;;;AAE/D,MAAM,cAAc,GAAW;IACpC;QACE,IAAI,EAAE,WAAW;QAEjB,SAAS,EAAE,8DAAkB;QAC7B,WAAW,EAAE,CAAC,wDAAgB,EAAE,4DAAoB,CAAC;QAErD,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,yDAAa,EAAE,CAAC;KACnD;IACD,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,yDAAa,EAAE;CAC3C,CAAC;AAOK,MAAM,sBAAsB;;qGAAtB,sBAAsB;sKAAtB,sBAAsB,kBAJxB,CAAC,4DAAY,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAEtC,4DAAY;mIAEX,sBAAsB,uFAFvB,4DAAY;6FAEX,sBAAsB;cALlC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;gBAEhD,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACvBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACA;AAEL;AAWpB;AACkC;;AAejD,MAAM,eAAe;;8FAAf,eAAe;wJAAf,eAAe,kBAFjB,CAAC,4DAAY,EAAE,kDAAU,EAAE,4DAAY,EAAE,oDAAY,EAAE,uDAAY,CAAC;mIAElE,eAAe,mBAXxB,yDAAa;QACb,8DAAkB;QAClB,6DAAiB;QACjB,gEAAoB;QACpB,8DAAkB;QAClB,6DAAiB;QACjB,+DAAmB;QACnB,kEAAsB,aAEd,4DAAY,EAAE,kDAAU,EAAE,4DAAY,EAAE,oDAAY,EAAE,uDAAY;6FAEjE,eAAe;cAb3B,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,yDAAa;oBACb,8DAAkB;oBAClB,6DAAiB;oBACjB,gEAAoB;oBACpB,8DAAkB;oBAClB,6DAAiB;oBACjB,+DAAmB;oBACnB,kEAAsB;iBACvB;gBACD,OAAO,EAAE,CAAC,4DAAY,EAAE,kDAAU,EAAE,4DAAY,EAAE,oDAAY,EAAE,uDAAY,CAAC;aAC9E;;;;;;;;;;;;;;AC9BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmC;AACQ;;;;;;;;;;;;;ACD3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4B;AACL;AACK;AACF;AACJ;;;;;;;;;;;;;ACJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6B;AACA;AACG;;;;;;;;;;;;;ACFhC;AAAA;AAAA;AAAA;AAAuC;;;;;;;;;;;;;ACAvC;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAO3C,MAAM,kBAAkB;IAC7B,gBAAe,CAAC;IAEhB,QAAQ,KAAU,CAAC;;oFAHR,kBAAkB;kGAAlB,kBAAkB;QCP/B,yEACE;QAAA,sEAAqB;QAEnB,yEACE;QAAA,yEACE;QACA,+EAAuC;QACzC,4DAAM;QAEN,yEACE;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,sEAAI;QAAA,2GAA+C;QAAA,4DAAK;QACxD,0EACI;QAAA,wEACI;QAAA,oEAAgC;QACpC,4DAAI;QACR,4DAAM;QACV,4DAAM;QACN,2EAEI;QAAA,2EACI;QAAA,6EACE;QAAA,yEACE;QAAA,sEACA;QAAA,sEAAI;QAAA,uEAAM;QAAA,4DAAK;QACf,sEAAI;QAAA,uFAAiB;QAAA,4DAAK;QAC1B,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,sEAAI;QAAA,8EAAQ;QAAA,4DAAK;QACjB,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAChB,sEAAI;QAAA,wEAAO;QAAA,4DAAK;QAChB,sEAAI;QAAA,gEAAI;QAAA,4DAAK;QACb,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QACd,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,sEAAI;QAAA,8DAAE;QAAA,4DAAK;QACX,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,4DAAK;QACP,4DAAQ;QACR,yEACE;QAAA,0EACE;QAAA,sEAAI;QAAA,gEAAI;QAAA,4DAAK;QACb,sEAAI;QAAA,4EAAgB;QAAA,4DAAK;QACzB,sEAAI;QAAA,yEAAa;QAAA,4DAAK;QACtB,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,sEAAI;QAAA,oEAAQ;QAAA,4DAAK;QACjB,sEAAI;QAAA,sEAAU;QAAA,4DAAK;QACnB,sEAAK;QAAA,qEAAQ;QAAA,4DAAK;QAClB,sEAAI;QAAA,oFAAwB;QAAA,4DAAK;QACjC,sEAAI;QAAA,wEAAO;QAAA,4DAAK;QAChB,sEAAI;QAAA,0EAAc;QAAA,4DAAK;QACvB,sEACE;QAAA,yEAAqB;QAAA,mEAAO;QAAA,4DAAI;QAClC,4DAAK;QACP,4DAAK;QACL,0EACE;QAAA,sEAAI;QAAA,gEAAI;QAAA,4DAAK;QACb,sEAAI;QAAA,4EAAgB;QAAA,4DAAK;QACzB,sEAAI;QAAA,oEAAQ;QAAA,4DAAK;QACjB,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,sEAAI;QAAA,oEAAQ;QAAA,4DAAK;QACjB,sEAAI;QAAA,sEAAU;QAAA,4DAAK;QACnB,sEAAK;QAAA,qEAAQ;QAAA,4DAAK;QAClB,sEAAI;QAAA,oFAAwB;QAAA,4DAAK;QACjC,sEAAI;QAAA,wEAAO;QAAA,4DAAK;QAChB,sEAAI;QAAA,0EAAc;QAAA,4DAAK;QACvB,sEACE;QAAA,yEAAqB;QAAA,mEAAO;QAAA,4DAAI;QAClC,4DAAK;QACP,4DAAK;QACL,0EACE;QAAA,sEAAI;QAAA,gEAAI;QAAA,4DAAK;QACb,sEAAI;QAAA,4EAAgB;QAAA,4DAAK;QACzB,sEAAI;QAAA,oEAAQ;QAAA,4DAAK;QACjB,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,uEAAI;QAAA,qEAAQ;QAAA,4DAAK;QACjB,uEAAI;QAAA,uEAAU;QAAA,4DAAK;QACnB,uEAAK;QAAA,sEAAQ;QAAA,4DAAK;QAClB,uEAAI;QAAA,qFAAwB;QAAA,4DAAK;QACjC,uEAAI;QAAA,yEAAO;QAAA,4DAAK;QAChB,uEAAI;QAAA,2EAAc;QAAA,4DAAK;QACvB,uEACE;QAAA,0EAAqB;QAAA,oEAAO;QAAA,4DAAI;QAClC,4DAAK;QACP,4DAAK;QACP,4DAAQ;QACV,4DAAQ;QACZ,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,4DAAM;QACV,4DAAM;;6FDzFO,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAuC;;;;;;;;;;;;;ACAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAWS;;;;;;;;ICyB3B,yEACE;IAAA,qEAAI;IAAA,uDAAa;IAAA,4DAAK;IACtB,qEAAK;IAAA,uDAA8C;;IAAA,4DAAK;IACxD,qEAAI;IAAA,uDAA+C;IAAA,4DAAK;IACxD,qEAAI;IAAA,uDAA6C;IAAA,4DAAK;IACtD,sEAAI;IAAA,wDAA8C;IAAA,4DAAK;IACvD,sEAAK;IAAA,wDAAuD;IAAA,4DAAK;IACjE,sEACE;IAAA,yEAAqB;IAAA,wDAAgF;IAAA,4DAAI;IAC3G,4DAAK;IACP,4DAAK;;;;IATC,0DAAa;IAAb,2EAAa;IACZ,0DAA8C;IAA9C,gLAA8C;IAC/C,0DAA+C;IAA/C,oHAA+C;IAC/C,0DAA6C;IAA7C,kHAA6C;IAC7C,0DAA8C;IAA9C,mHAA8C;IAC7C,0DAAuD;IAAvD,kIAAuD;IAErC,0DAAgF;IAAhF,sJAAgF;;;;IAQvG,wEAA0F;IAA5C,uUAAwC,CAAC,KAAE;IAAC,mEAAQ;IAAA,4DAAI;;;IACtG,wEAA6C;IAAA,mEAAQ;IAAA,4DAAI;;;;IAE3D,yEACE;IAAA,wEAAkD;IAA7B,4VAA2B;IAAE,uDAAY;IAAA,4DAAI;IACpE,4DAAK;;;IAD+C,0DAAY;IAAZ,4EAAY;;;;IAG9D,wEAAyF;IAA5C,2UAAwC,CAAC,KAAE;IAAC,kEAAO;IAAA,4DAAI;;;IACpG,wEAA4C;IAAA,kEAAO;IAAA,4DAAI;;ADzClF,MAAM,kBAAkB;IAiB7B,YACU,sBAA8C,EAC9C,WAA2B,EAC3B,eAAgC,EAChC,KAAoB,EACpB,aAA4B;QAJ5B,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC9C,gBAAW,GAAX,WAAW,CAAgB;QAC3B,oBAAe,GAAf,eAAe,CAAiB;QAChC,UAAK,GAAL,KAAK,CAAe;QACpB,kBAAa,GAAb,aAAa,CAAe;QArBtC,oBAAe,GAAG,wEAAU,CAAC,OAAO,CAAC;QAQrC,YAAO,GAAG,EAAuB,CAAC;QAElC,cAAS,GAAG,EAAgB,CAAC;QAE7B,qBAAgB,GAAG,EAAE,CAAC;IAUnB,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,uBAAuB;QACrB,IAAI,CAAC,sBAAsB;aACxB,6BAA6B,CAAC,KAAK,EAAE,EAAE,EAAE,YAAY,EAAE,CAAC,CAAC;aACzD,SAAS,CACR,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,OAAO,CAAC;YACvC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,4BAA4B,EAAE,MAAM,EAAE;gBACrD,OAAO,EAAE,IAAI;aACd,CAAC,CAAC;QACL,CAAC,CACF,CAAC;IACN,CAAC;IAED,WAAW,CAAC,IAAY;QACtB,IAAI,CAAC,sBAAsB;aACxB,6BAA6B,CAAC,KAAK,EAAE,EAAE,EAAE,YAAY,EAAE,IAAI,CAAC;aAC5D,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,OAAO,CAAC;YACvC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;aACrD,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;aAC7D,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;IAED,YAAY;QACV,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAC3C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,SAAS,CACnC,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC7C,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,wBAAwB,EAAE,MAAM,EAAE;gBACjD,OAAO,EAAE,IAAI;aACd,CAAC,CAAC;QACL,CAAC,CACF,CAAC;IACJ,CAAC;IAED,cAAc,CAAC,YAAoB,EAAE,EAAU;QAC7C,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,QAAQ,CAAC;QAEvC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;YAC3B,OAAO,KAAK,CAAC;SACd;QAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QACrE,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,QAAQ,YAAY,EAAE;gBACpB,KAAK,SAAS;oBACZ,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;gBAC3B,KAAK,OAAO;oBACV,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;gBAC5B,KAAK,QAAQ;oBACX,OAAO,QAAQ,CAAC;gBAClB,KAAK,QAAQ;oBACX,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACxC,KAAK,KAAK;oBACR,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;gBAC7B;oBACE,OAAO,KAAK,CAAC;aAChB;SACF;QACD,OAAO,KAAK,CAAC;IACf,CAAC;;oFA3GU,kBAAkB;kGAAlB,kBAAkB;QCnB/B,yEACE;QAAA,sEAAqB;QAEnB,yEACE;QAAA,yEACE;QACA,+EAAuC;QACzC,4DAAM;QAEN,yEACE;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,sEAAI;QAAA,2GAA+C;QAAA,4DAAK;QACxD,0EACI;QAAA,wEACI;QAAA,oEAAgC;QACpC,4DAAI;QACR,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,6EACE;QAAA,yEACE;QAAA,sEACE;QAAA,sEAAI;QAAA,uEAAM;QAAA,4DAAK;QACf,sEAAI;QAAA,0EAAc;QAAA,4DAAK;QACvB,sEAAI;QAAA,wEAAO;QAAA,4DAAK;QAChB,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QACd,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,sEAAI;QAAA,8DAAE;QAAA,4DAAK;QACX,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACjB,4DAAK;QACP,4DAAQ;QACR,yEACE;QAAA,iHACE;QAUJ,4DAAQ;QACV,4DAAQ;QACR,2EACE;QAAA,0EACE;QAAA,sEACE;QAAA,6GAA0F;QAC1F,6GAA6C;QAC/C,4DAAK;QACL,+GACE;QAEF,sEACE;QAAA,6GAAyF;QACzF,6GAA4C;QAC9C,4DAAK;QACP,4DAAK;QACP,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,4DAAM;QACV,4DAAM;;QApC6C,2DAAuC;QAAvC,2FAAuC;QAetD,0DAAyD;QAAzD,6HAAyD;QACxD,0DAAwB;QAAxB,sFAAwB;QACxB,0DAAuB;QAAvB,qFAAuB;QAEN,0DAAqC;QAArC,yFAAqC;QAGvD,0DAAwD;QAAxD,4HAAwD;QACvD,0DAAuB;QAAvB,qFAAuB;QACvB,0DAAsB;QAAtB,oFAAsB;;6FDzC9C,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AElBD;AAAA;AAAA;AAAA;AAA0C;;;AAGnC,MAAM,YAAY;;wEAAZ,YAAY;4FAAZ,YAAY;QADD,2EAA+B;;6FAC1C,YAAY;cADxB,uDAAS;eAAC,EAAE,QAAQ,EAAE,iCAAiC,EAAE;;;;;;;;;;;;;;ACF1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6B;AACO;;;;;;;;;;;;;ACDpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACA;AAES;AAKlC;;AAMf,MAAM,SAAS;;wFAAT,SAAS;4IAAT,SAAS,kBAFX,CAAC,4DAAY,EAAE,oDAAY,EAAE,kDAAU,EAAE,4DAAY,CAAC;mIAEpD,SAAS,mBAHL,8DAAkB,EAAE,8DAAkB,EAAE,wDAAY,aACzD,4DAAY,EAAE,oDAAY,EAAE,kDAAU,EAAE,4DAAY;6FAEnD,SAAS;cAJrB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,8DAAkB,EAAE,8DAAkB,EAAE,wDAAY,CAAC;gBACpE,OAAO,EAAE,CAAC,4DAAY,EAAE,oDAAY,EAAE,kDAAU,EAAE,4DAAY,CAAC;aAChE;;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AAEc;AAMjC;AACgD;;;AAE/D,MAAM,SAAS,GAAW;IAC/B;QACE,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,wDAAY;QACvB,WAAW,EAAE,CAAC,wDAAgB,EAAE,4DAAoB,CAAC;QAErD,QAAQ,EAAE;YACR,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,8DAAkB,EAAE;YACpD,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,8DAAkB,EAAE;SAC5D;KACF;CACF,CAAC;AAOK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAJlB,CAAC,4DAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAEjC,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAL5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;gBAE3C,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AC5BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAgBnB;;;;;;;;;;;;ICYS,2FAOI;IAHA,yaAA2C;IAG3C,yEACE;IAAA,uDACF;IAAA,4DAAS;IACb,4DAAmB;;;IARf,+EAAmB;IAMjB,0DACF;IADE,0FACF;;;;IAuBJ,uFAQE;IAHA,wbAAgD;IAGhD,uEAAO;IAAA,uDAAoB;IAAA,4DAAO;IACpC,4DAAe;;;;IARb,gJAAoE;IAO7D,0DAAoB;IAApB,kFAAoB;;;;IAKzB,uFAOE;IAHA,kcAAgD;IAGhD,uDACF;IAAA,4DAAe;;;;IAPb,kJAAqE;IAMrE,0DACF;IADE,+FACF;;;IAVF,yEAEE;IAAA,2JAOE;IAEJ,4DAAK;;;;IAJD,0DAAyC;IAAzC,mJAAyC;;;IAR/C,yEACE;IAAA,kIAEE;IAUJ,4DAAK;;;IAZgC,0DAAgC;IAAhC,uFAAgC;;;IAZvE,yEACE;IAAA,iJAQE;IAEF,6HACE;IAaJ,4DAAK;;;IAtBD,0DAA0B;IAA1B,uFAA0B;IAQO,0DAAmE;IAAnE,iIAAmE;;;IAZ1G,8EACE;IAAA,wHACE;IA0BJ,4DAAU;;;IA3B2B,0DAA+B;IAA/B,sFAA+B;;;IA4BpE,oEACE;IAAA,yEACE;IAAA,8GACF;IAAA,4DAAS;IACX,4DAAI;;;IACJ,oEACE;IAAA,yEACE;IAAA,oIACF;IAAA,4DAAS;IACX,4DAAI;;ADzEjC,MAAM,kBAAkB;IA2B7B,YACU,QAAqB,EACrB,sBAA8C,EAC9C,KAAoB,EACpB,aAA4B,EAC5B,gBAAkC,EAClC,eAAgC;QALhC,aAAQ,GAAR,QAAQ,CAAa;QACrB,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC9C,UAAK,GAAL,KAAK,CAAe;QACpB,kBAAa,GAAb,aAAa,CAAe;QAC5B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,oBAAe,GAAf,eAAe,CAAiB;QAhClC,kBAAa,GAAmB,EAAE,CAAC;QAI3C,uBAAkB,GAAG,EAAwB,CAAC;QAI9C,cAAS,GAAG,EAAe,CAAC;QAI5B,WAAM,GAAG,EAAY,CAAC;QAEtB,wBAAmB,GAAG,IAAI,CAAC;QAE3B,0BAAqB,GAAG,KAAK,CAAC;QAE9B,cAAS,GAAG,EAAgB,CAAC;QAM7B,8BAAyB,GAAG,EAAuB,CAAC;IASjD,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,CAAC;IAC7D,CAAC;IAED,sBAAsB;QACpB,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,6BAA6B,EAAE,CAAC;IACvC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC;QACzE,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACtC,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;IAC/C,CAAC;IAED,mBAAmB,CAAC,EAAE;QACpB,IAAI,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE;YACnD,IAAI,CAAC,yBAAyB,CAAC,MAAM,CACnC,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC,EAAE,CAAC,EAC1C,CAAC,CACF,CAAC;SACH;aAAM;YACL,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACzC;IACH,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,SAAS,CACnC,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACrD,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC;YAE3B,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;oBAClC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;oBACjB,IAAI,CAAC,KAAK,CAAC,KAAK,CACd,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO,EAAE,EAC5C,CAAC,CAAC,SAAS,EACX,EAAE,OAAO,EAAE,IAAI,EAAE,CAClB,CAAC;gBACJ,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,MAAM,KAAK,GAAG,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;gBAC9C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE;oBAC9C,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;aACJ;QACH,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAED,qBAAqB;QACnB,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,SAAS,CACtC,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC1D,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC;YAE3B,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;oBAClC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;oBACjB,IAAI,CAAC,KAAK,CAAC,KAAK,CACd,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO,EAAE,EAC5C,CAAC,CAAC,SAAS,EACX,EAAE,OAAO,EAAE,IAAI,EAAE,CAClB,CAAC;gBACJ,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,MAAM,KAAK,GAAG,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;gBAC9C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE;oBAC9C,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;aACJ;QACH,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAED,6BAA6B;QAC3B,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,sBAAsB,CAAC,MAAM,EAAE,CAAC,SAAS,CAC5C,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACzD,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC;YAE3B,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;oBAClC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;oBACjB,IAAI,CAAC,KAAK,CAAC,KAAK,CACd,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO,EAAE,EAC5C,CAAC,CAAC,SAAS,EACX,EAAE,OAAO,EAAE,IAAI,EAAE,CAClB,CAAC;gBACJ,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,MAAM,KAAK,GAAG,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;gBAC9C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE;oBAC9C,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;aACJ;QACH,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAED,WAAW,CAAC,EAAU;QACpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QACpD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC;YACtD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;SACrD;IACH,CAAC;IAED,eAAe,CAAC,EAAE;QAChB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QAC1D,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,CAAC;YAC3D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;SAC3D;IACH,CAAC;IAED,2BAA2B,CAAC,eAAmC;QAC7D,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,SAAS,CAC3D,CAAC,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,EACvB,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC;YAE3B,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;oBAClC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;oBACjB,IAAI,CAAC,KAAK,CAAC,KAAK,CACd,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO,EAAE,EAC5C,CAAC,CAAC,SAAS,EACX,EAAE,OAAO,EAAE,IAAI,EAAE,CAClB,CAAC;gBACJ,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,MAAM,KAAK,GAAG,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;gBAC9C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE;oBAC9C,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;aACJ;QACH,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAED,iBAAiB,CAAC,EAAE;QAClB,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC9B,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,sCAAsC,CAAC,EAAE,CAAC,CAAC;QAChD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,CAAC;IAC7D,CAAC;IAED,sCAAsC,CAAC,EAAE;QACvC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,EAAE;YAC9D,MAAM,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAC1C,CAAC,eAAe,EAAE,EAAE,CAClB,eAAe,CAAC,WAAW,KAAK,SAAS,CAAC,EAAE;gBAC5C,eAAe,CAAC,QAAQ,KAAK,EAAE,CAClC,CAAC;YACF,IAAI,CAAC,SAAS,EAAE;gBACd,OAAO,SAAS,CAAC;aAClB;YAED,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yBAAyB,CAAC,QAAQ,EAAE,WAAW;QAC7C,MAAM,SAAS,GAAG,IAAI,CAAC,sCAAsC,CAAC,QAAQ,CAAC,CAAC;QACxE,MAAM,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE;YACjD,IAAI,CAAC,CAAC,EAAE,KAAK,WAAW,EAAE;gBACxB,OAAO,IAAI,CAAC;aACb;YACD,OAAO,KAAK,CAAC;QACf,CAAC,CAAC,CAAC;QACH,IAAI,MAAM,EAAE;YACV,OAAO,KAAK,CAAC;SACd;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,SAAS;QACP,IAAI,IAAI,CAAC,qBAAqB,KAAK,KAAK,EAAE;YACxC,MAAM,GAAG,GAAG,yCAAyC,CAAC;YACtD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;YACpD,OAAO;SACR;QACD,IAAI,IAAI,CAAC,yBAAyB,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7C,MAAM,GAAG,GAAG,6CAA6C,CAAC;YAC1D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;YACpD,OAAO;SACR;QAED,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAC3C,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;YAC3C,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,kBAAkB,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;YAClD,IAAI,CAAC,kBAAkB,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC;YACxD,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAG,CAAC,CAAC;YACnC,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;QACH,MAAM,GAAG,GAAG,qCAAqC,CAAC;QAClD,kDAAI,CAAC,IAAI,CAAC;YACR,KAAK,EAAE,GAAG;YACV,IAAI,EAAE,SAAS;YACf,iBAAiB,EAAE,KAAK;YACxB,KAAK,EAAE,IAAI;SACZ,CAAC,CAAC;QACH,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAED,OAAO;QACL,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;;oFA5QU,kBAAkB;kGAAlB,kBAAkB;QCvB/B,yEACE;QAAA,sEAAuB;QAAI,yEACzB;QAAA,yEACE;QACA,+EAA+C;QACjD,4DAAM;QACN,yEACE;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,sEAAI;QAAA,2GAA0C;QAAA,wEAAuB;QAAA,mEAAiC;QAAC,qFAAmB;QAAA,4DAAI;QAAA,4DAAK;QACnI,2EACI;QAAA,yEACI;QAAA,oEAAgC;QACpC,4DAAI;QACR,4DAAM;QACV,4DAAM;QACN,2EAEI;QAAA,2EAEI;QAAA,2EAAwB;QAAA,6EAAsC;QAAA,mEAAO;QAAA,oEAA6C;QAAA,4DAAQ;QACtH,2EACI;QAAA,2EACE;QAAA,uFAGI;QAAA,2IAOI;QAIR,4DAAkB;QACpB,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,sEAEM;QAQN,2EACE;QAAA,6EAAsC;QAAA,qFAAoB;QAAA,oEAA6C;QAAA,4DAAQ;QAC7G,2EACI;QAAA,2EACE;QAAA,yHACE;QA4BF,6GACE;QAIF,6GACE;QAIJ,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,sEAAkC;QAClC,2EACI;QAAA,2EACI;QAAA,8EAAsG;QAA9D,2IAAS,aAAS,IAAC;QAA2C,oEAA2B;QAAC,mEAAM;QAAA,4DAAS;QACjJ,8EAA4E;QAAtB,2IAAS,eAAW,IAAC;QAAC,oEAA2B;QAAC,sEAAS;QAAA,4DAAS;QAC9H,4DAAM;QACV,4DAAM;QACR,4DAAM;QACZ,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QAER,4DAAM;QAnHN,4DACE;;QA2BwD,2DAA8B;QAA9B,gFAA8B;QA8BlB,0DAA6B;QAA7B,2FAA6B;QA6B5D,0DAAuC;QAAvC,qGAAuC;QAKvC,0DAAgC;QAAhC,+HAAgC;;6FDrE1D,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEtBD;AAAA;AAAA;AAAA;AAAsC;;;;;;;;;;;;;ACAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAWkB;;;;;;;;;;ICqC9B,6EACE;IAAA,uDACF;IAAA,4DAAS;;;IAFoC,6FAA0B;IACrE,0DACF;IADE,kGACF;;ADhC/B,MAAM,kBAAkB;IAW7B,YACU,eAAgC,EAChC,KAAoB,EACpB,EAAe,EACf,iBAAmC,EACnC,QAAqB;QAJrB,oBAAe,GAAf,eAAe,CAAiB;QAChC,UAAK,GAAL,KAAK,CAAe;QACpB,OAAE,GAAF,EAAE,CAAa;QACf,sBAAiB,GAAjB,iBAAiB,CAAkB;QACnC,aAAQ,GAAR,QAAQ,CAAa;QAb/B,iBAAY,GAAG,EAAkB,CAAC;QAIlC,cAAS,GAAG,EAAe,CAAC;QAE5B,YAAO,GAAG,EAAa,CAAC;IAQrB,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,SAAS;QACP,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAChC,YAAY,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACxC,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC,SAAS,CACvC,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC1D,CAAC,EAED,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC;YAE3B,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;oBAClC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;oBACjB,IAAI,CAAC,KAAK,CAAC,KAAK,CACd,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO,EAAE,EAC5C,CAAC,CAAC,SAAS,EACX,EAAE,OAAO,EAAE,IAAI,EAAE,CAClB,CAAC;gBACJ,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,MAAM,KAAK,GAAG,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;gBAC9C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE;oBAC9C,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;aACJ;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAED,sBAAsB;QACpB,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,OAAO,EAAE;YACtE,MAAM,GAAG,GAAG,uCAAuC,CAAC;YACpD,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,gBAAgB,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;YAC3D,OAAO;SACR;QAED,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;QACxD,IAAI,CAAC,YAAY,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;QAC5C,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,KAAK,GAAG,EAAE;YACxC,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;SAC/D;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC;SACvC;QAED,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CACxD,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,mCAAmC,EAAE,SAAS,EAAE;gBACjE,OAAO,EAAE,IAAI;aACd,CAAC,CAAC;YAEH,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC;YAE3B,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;oBAClC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;oBACjB,IAAI,CAAC,KAAK,CAAC,KAAK,CACd,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO,EAAE,EAC5C,CAAC,CAAC,SAAS,EACX,EAAE,OAAO,EAAE,IAAI,EAAE,CAClB,CAAC;gBACJ,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,MAAM,KAAK,GAAG,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;gBAC9C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE;oBAC9C,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;aACJ;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAED,OAAO;QACL,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;;oFA9GU,kBAAkB;kGAAlB,kBAAkB;QClB/B,yEACE;QAAA,sEAAqB;QAEnB,yEACE;QAAA,yEACE;QACA,+EAAuC;QACzC,4DAAM;QAEN,yEACE;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,sEAAI;QAAA,sHAAqD;QAAA,wEAAuB;QAAA,mEAAiC;QAAC,qFAAmB;QAAA,4DAAI;QAAA,4DAAK;QAC9I,2EACI;QAAA,yEACI;QAAA,oEAAgC;QACpC,4DAAI;QACR,4DAAM;QACV,4DAAM;QACN,2EAEI;QAAA,4EACE;QAAA,2EACE;QAAA,6EAAsC;QAAA,gFAAU;QAAA,oEAA6C;QAAA,4DAAQ;QACrG,2EACI;QAAA,2EAA6B;QAAA,4EAAgC;QAAA,oEAA2B;QAAA,4DAAO;QAC7F,wEAA4H;QAD9H,4DAA6B;QAI/B,4DAAM;QACR,4DAAM;QAEN,2EAAwB;QAAA,6EAAsC;QAAA,gEAAI;QAAA,oEAA6C;QAAA,4DAAQ;QACrH,2EACI;QAAA,2EAA6B;QAAA,4EAAgC;QAAA,oEAA0B;QAAA,4DAAO;QAC5F,wEAAiH;QADnH,4DAA6B;QAI/B,4DAAM;QACV,4DAAM;QAEN,2EAAwB;QAAA,6EAAsC;QAAA,+EAAc;QAAA,oEAA6C;QAAA,4DAAQ;QAC/H,2EACE;QAAA,2EACE;QAAA,8EACI;QAAA,8EAAkB;QAAA,kEAAM;QAAA,4DAAS;QACjC,uHACE;QAEJ,4DAAS;QAGb,4DAAM;QACR,4DAAM;QAER,4DAAM;QACN,sEAAkC;QAClC,2EACI;QAAA,2EACI;QAAA,8EAAkG;QAAA,oEAA2B;QAAC,mEAAM;QAAA,4DAAS;QAC7I,8EAAmH;QAA7D,2IAAS,4BAAwB,IAAC;QAA2B,oEAA2B;QAAC,sEAAS;QAAA,4DAAS;QACrK,4DAAM;QACV,4DAAM;QAGR,4DAAO;QAEb,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,4DAAM;QAEV,4DAAM;;QArDgD,2DAAkB;QAAlB,+EAAkB;QAyB1B,2DAAoC;QAApC,mFAAoC;;6FD9BrE,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEjBD;AAAA;AAAA;AAAA;AAAuC;;;;;;;;;;;;;ACAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4B;AACH;AACI;AACS;;;;;;;;;;;;;ACHtC;AAAA;AAAA;AAAA;AAAmC;;;;;;;;;;;;;ACAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAgBnB;;;;;;;;;;ICqBC,qEACE;IAAA,qEAAI;IAAA,uDAAuC;IAAA,4DAAK;IAChD,qEAAI;IAAA,uDAAkC;IAAA,4DAAK;IAC3C,qEAAI;IAAA,uDAA0B;IAAA,4DAAK;IACnC,qEACE;IAAA,uEAAwE;IAAA,uDAAgD;IAAA,4DAAO;IACjI,4DAAK;IACL,sEACI;IAAA,8EACE;IADoB,0VAA2B;IAC/C,oEAAgC;IAAC,wDACnC;IAAA,4DAAS;IACb,4DAAK;IACP,4DAAK;;;;IAXC,0DAAuC;IAAvC,4GAAuC;IACvC,0DAAkC;IAAlC,uGAAkC;IAClC,0DAA0B;IAA1B,iGAA0B;IAEtB,0DAAiE;IAAjE,oIAAiE;IAAC,0DAAgD;IAAhD,8GAAgD;IAGpE,0DAAqE;IAArE,wIAAqE;IACpF,0DACnC;IADmC,+IACnC;;ADxB/B,MAAM,eAAe;IAiB1B,YACU,aAA4B,EAC5B,QAAqB,EACrB,KAAoB,EACpB,gBAAkC,EAClC,sBAA8C,EAC9C,eAAgC;QALhC,kBAAa,GAAb,aAAa,CAAe;QAC5B,aAAQ,GAAR,QAAQ,CAAa;QACrB,UAAK,GAAL,KAAK,CAAe;QACpB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC9C,oBAAe,GAAf,eAAe,CAAiB;QAtBlC,kBAAa,GAAmB,EAAE,CAAC;QAI3C,cAAS,GAAG,EAAe,CAAC;IAmBzB,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,yBAAyB,EAAE,CAAC;IACnC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC;IAC3E,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,SAAS,CACnC,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACrD,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC;YAE3B,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;oBAClC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;oBACjB,IAAI,CAAC,KAAK,CAAC,KAAK,CACd,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO,EAAE,EAC5C,CAAC,CAAC,SAAS,EACX,EAAE,OAAO,EAAE,IAAI,EAAE,CAClB,CAAC;gBACJ,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,MAAM,KAAK,GAAG,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;gBAC9C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE;oBAC9C,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;aACJ;QACH,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,SAAS,CACtC,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC1D,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC;YAE3B,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;oBAClC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;oBACjB,IAAI,CAAC,KAAK,CAAC,KAAK,CACd,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO,EAAE,EAC5C,CAAC,CAAC,SAAS,EACX,EAAE,OAAO,EAAE,IAAI,EAAE,CAClB,CAAC;gBACJ,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,MAAM,KAAK,GAAG,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;gBAC9C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE;oBAC9C,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;aACJ;QACH,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAED,yBAAyB;QACvB,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,sBAAsB,CAAC,MAAM,EAAE,CAAC,SAAS,CAC5C,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACxD,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC;YAE3B,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;oBAClC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;oBACjB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO,EAAE,EAC5C,CAAC,CAAC,SAAS,EACX,EAAE,QAAQ,EAAE,IAAI,EAAE,CACnB,CAAC;gBACJ,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,MAAM,KAAK,GAAG,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;gBAC9C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE;oBAChD,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAC;aACJ;QACH,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAED,0BAA0B,CAAC,SAAiB,EAAE,MAAc;QAC1D,OAAO,KAAK,CAAC;IACf,CAAC;IAED,iBAAiB,CAAC,EAAU;QAC1B,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QAC3D,OAAO,SAAS,CAAC,SAAS,CAAC;IAC7B,CAAC;IAED,YAAY,CAAC,EAAU;QACrB,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QAC3D,OAAO,SAAS,CAAC,GAAG,CAAC;IACvB,CAAC;IAED,SAAS,CAAC,EAAU;QAClB,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QACrD,OAAO,MAAM,CAAC,IAAI,CAAC;IACrB,CAAC;IAED,aAAa,CAAC,EAAsB;QAClC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QAEtB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC;QAEvD,kDAAI,CAAC,IAAI,CAAC;YACR,KAAK,EAAE,UAAU,IAAI,CAAC,MAAM,aAAa;YACzC,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,gBAAgB,EAAE,UAAU;YAC5B,iBAAiB,EAAE,QAAQ,IAAI,CAAC,MAAM,GAAG;SAC1C,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,KAAK,EAAE;gBAChB,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClD,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAC5D,CAAC,IAAI,EAAE,EAAE;oBACP,kDAAI,CAAC,IAAI,CAAC;wBACR,KAAK,EAAE,IAAI,CAAC,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,YAAY;wBAC3D,IAAI,EAAE,SAAS;wBACf,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACZ,CAAC,CAAC;gBACL,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;oBACN,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC;oBAC3B,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;wBACzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;4BAClC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;4BACjB,IAAI,CAAC,KAAK,CAAC,KAAK,CACd,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO,EAAE,EAC5C,CAAC,CAAC,SAAS,EACX,EAAE,OAAO,EAAE,IAAI,EAAE,CAClB,CAAC;wBACJ,CAAC,CAAC,CAAC;qBACJ;yBAAM;wBACL,MAAM,KAAK,GAAG,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;wBAC9C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE;4BAC9C,OAAO,EAAE,IAAI;yBACd,CAAC,CAAC;qBACJ;gBACH,CAAC,CACF,CAAC;aACH;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;8EA7LU,eAAe;+FAAf,eAAe;QCvB5B,yEACE;QAAA,sEAEW;QAET,yEACE;QAAA,yEACE;QACA,+EAEoB;QACtB,4DAAM;QACN,yEACE;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,sEAAI;QAAA,2GAA+C;QAAA,4DAAK;QACxD,0EACI;QAAA,wEACI;QAAA,oEAAgC;QACpC,4DAAI;QACR,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,6EACE;QAAA,yEACE;QAAA,sEACA;QAAA,sEAAI;QAAA,+EAAS;QAAA,4DAAK;QAClB,sEAAI;QAAA,+DAAG;QAAA,4DAAK;QACZ,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,sEAAI;QAAA,0EAAI;QAAA,4DAAK;QACf,4DAAK;QACL,4DAAQ;QACR,yEACE;QAAA,8GACE;QAYJ,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QACZ,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACR,4DAAM;QACR,4DAAM;QACV,4DAAM;;QAtB8B,2DAAkC;QAAlC,wFAAkC;;6FDdzD,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEtBD;AAAA;AAAA;AAAA;AAA0C;;;AAGnC,MAAM,kBAAkB;;oFAAlB,kBAAkB;kGAAlB,kBAAkB;QADP,2EAA+B;;6FAC1C,kBAAkB;cAD9B,uDAAS;eAAC,EAAE,QAAQ,EAAE,iCAAiC,EAAE;;;;;;;;;;;;;;ACF1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmC;AACO;;;;;;;;;;;;;ACD1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACA;AAEM;AAEE;AACE;AACM;AAOzC;AAEkC;;AAoBjD,MAAM,eAAe;;8FAAf,eAAe;wJAAf,eAAe,kBAXjB;YACP,4DAAY;YACZ,oDAAY;YACZ,kDAAU;YACV,4DAAY;YACZ,oEAAa;YACb,sEAAc;YACd,4EAAiB;YACjB,kEAAmB;SACpB;mIAEU,eAAe,mBAhBxB,2DAAe;QACf,8DAAkB;QAClB,8DAAkB;QAClB,8DAAkB,aAGlB,4DAAY;QACZ,oDAAY;QACZ,kDAAU;QACV,4DAAY;QACZ,oEAAa;QACb,sEAAc;QACd,4EAAiB;QACjB,kEAAmB;6FAGV,eAAe;cAlB3B,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAe;oBACf,8DAAkB;oBAClB,8DAAkB;oBAClB,8DAAkB;iBACnB;gBACD,OAAO,EAAE;oBACP,4DAAY;oBACZ,oDAAY;oBACZ,kDAAU;oBACV,4DAAY;oBACZ,oEAAa;oBACb,sEAAc;oBACd,4EAAiB;oBACjB,kEAAmB;iBACpB;aACF;;;;;;;;;;;;;;ACpCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AAEc;AAOjC;AACgD;;;AAE/D,MAAM,eAAe,GAAW;IACrC;QACE,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,8DAAkB;QAC7B,WAAW,EAAE,CAAC,wDAAgB,EAAE,4DAAoB,CAAC;QACrD,QAAQ,EAAE;YACR,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,8DAAkB,EAAE;YACpD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,2DAAe,EAAE;YACjD,EAAE,IAAI,EAAE,sBAAsB,EAAE,SAAS,EAAE,8DAAkB,EAAE;SAChE;KACF;CACF,CAAC;AAOK,MAAM,sBAAsB;;qGAAtB,sBAAsB;sKAAtB,sBAAsB,kBAJxB,CAAC,4DAAY,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;QAEvC,4DAAY;mIAEX,sBAAsB,uFAFvB,4DAAY;6FAEX,sBAAsB;cALlC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;gBAEjD,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AC7BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;AAErC;;;;;;;;;;;IC0BO,4EAAkG;IAAA,6DAAE;IAAA,4DAAQ;;;IAC5G,4EAAiG;IAAA,mFAAwB;IAAA,4DAAQ;;ADXhK,MAAM,kBAAkB;IAa7B,YACU,EAAe,EACf,KAAqB,EACrB,KAAoB,EACpB,QAAqB,EACrB,aAA4B;QAJ5B,OAAE,GAAF,EAAE,CAAa;QACf,UAAK,GAAL,KAAK,CAAgB;QACrB,UAAK,GAAL,KAAK,CAAe;QACpB,aAAQ,GAAR,QAAQ,CAAa;QACrB,kBAAa,GAAb,aAAa,CAAe;QAjBtC,cAAS,GAAG,EAAe,CAAC;QAIpB,kBAAa,GAAmB,EAAE,CAAC;QAI3C,WAAM,GAAG,EAAe,CAAC;IAUtB,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC7D,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IAChD,CAAC;IAED,SAAS;QACP,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAChC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC;IAC3E,CAAC;IAED,iBAAiB,CAAC,EAAU;QAC1B,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAC9C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,eAAe;QACb,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kCAAkC,EAAE,OAAO,EAAE;gBAC9D,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YACH,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAC9B,OAAO;SACR;QAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAC9B,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CACrE,CAAC,IAAI,EAAE,EAAE;YACP,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,aAAa;gBACpB,IAAI,EAAE,SAAS;gBACf,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;YACH,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC;YAE3B,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;oBAClC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;oBACjB,IAAI,CAAC,KAAK,CAAC,KAAK,CACd,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO,EAAE,EAC5C,CAAC,CAAC,SAAS,EACX,EAAE,OAAO,EAAE,IAAI,EAAE,CAClB,CAAC;gBACJ,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,MAAM,KAAK,GAAG,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;gBAC9C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE;oBAC9C,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;aACJ;QACH,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAED,sBAAsB;QACpB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,aAAa,EAAE,CAAC;IACxC,CAAC;IAED,aAAa;QACX,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;IACnD,CAAC;IAED,OAAO;QACL,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;;oFAtGU,kBAAkB;kGAAlB,kBAAkB;QCnB/B,yEACE;QAAA,sEAAqB;QAEnB,yEACE;QAAA,yEACE;QACA,+EAAuC;QACzC,4DAAM;QAEN,yEACE;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,sEAAI;QAAA,2GAA0C;QAAA,wEAAuB;QAAA,mEAAiC;QAAC,qFAAmB;QAAA,4DAAI;QAAA,4DAAK;QACnI,2EACI;QAAA,yEACI;QAAA,oEAAgC;QACpC,4DAAI;QACR,4DAAM;QACV,4DAAM;QACN,2EAEI;QAAA,4EAEI;QAAA,2EAAwB;QAAA,6EAAsC;QAAA,mEAAO;QAAA,oEAA6C;QAAA,4DAAQ;QACtH,2EACI;QAAA,2EAA6B;QAAA,4EAAgC;QAAA,oEAA2B;QAAA,4DAAO;QAC7F,wEAA8G;QADhH,4DAA6B;QAE3B,qHAAkG;QAClG,qHAAiG;QACrG,4DAAM;QACZ,4DAAM;QAEN,sEAAkC;QAClC,2EACI;QAAA,2EACI;QAAA,8EAAiF;QAAA,oEAA2B;QAAC,mEAAM;QAAA,4DAAS;QAC5H,8EAAkF;QAA5B,2IAAS,qBAAiB,IAAC;QAAC,oEAA2B;QAAC,sEAAS;QAAA,4DAAS;QACpI,4DAAM;QACV,4DAAM;QACV,4DAAO;QAEX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,4DAAM;QACV,4DAAM;;QA1BwB,2DAAkB;QAAlB,+EAAkB;QAKS,0DAA2B;QAA3B,wFAA2B;QACvC,0DAA0D;QAA1D,4HAA0D;QAC1D,0DAA2D;QAA3D,6HAA2D;;6FDX3F,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AElBD;AAAA;AAAA;AAAA;AAAsC;;;;;;;;;;;;;ACAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;AAErC;;;;;;;;;;IC0BO,4EAAkG;IAAA,6DAAE;IAAA,4DAAQ;;;IAC5G,4EAAiG;IAAA,mFAAwB;IAAA,4DAAQ;;ADZhK,MAAM,kBAAkB;IAW7B,YACU,EAAe,EACf,KAAoB,EACpB,QAAqB,EACrB,aAA4B;QAH5B,OAAE,GAAF,EAAE,CAAa;QACf,UAAK,GAAL,KAAK,CAAe;QACpB,aAAQ,GAAR,QAAQ,CAAa;QACrB,kBAAa,GAAb,aAAa,CAAe;QAdtC,cAAS,GAAG,EAAe,CAAC;QAIpB,kBAAa,GAAmB,EAAE,CAAC;QAI3C,WAAM,GAAG,EAAe,CAAC;IAOtB,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,SAAS;QACP,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAChC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC;IAC3E,CAAC;IAED,eAAe;QACb,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kCAAkC,EAAE,OAAO,EAAE;gBAC9D,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YACH,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAC9B,OAAO;SACR;QAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAC9B,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAC9C,CAAC,IAAI,EAAE,EAAE;YACP,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,aAAa;gBACpB,IAAI,EAAE,SAAS;gBACf,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;YACH,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC;YAE3B,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;oBAClC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;oBACjB,IAAI,CAAC,KAAK,CAAC,KAAK,CACd,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO,EAAE,EAC5C,CAAC,CAAC,SAAS,EACX,EAAE,OAAO,EAAE,IAAI,EAAE,CAClB,CAAC;gBACJ,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,MAAM,KAAK,GAAG,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;gBAC9C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE;oBAC9C,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;aACJ;QACH,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAED,sBAAsB;QACpB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,aAAa,EAAE,CAAC;IACxC,CAAC;IAED,OAAO;QACL,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;;oFApFU,kBAAkB;kGAAlB,kBAAkB;QClB/B,yEACE;QAAA,sEAAqB;QAEnB,yEACE;QAAA,yEACE;QACA,+EAAuC;QACzC,4DAAM;QAEN,yEACE;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,sEAAI;QAAA,2GAA0C;QAAA,wEAAuB;QAAA,mEAAiC;QAAC,qFAAmB;QAAA,4DAAI;QAAA,4DAAK;QACnI,2EACI;QAAA,yEACI;QAAA,oEAAgC;QACpC,4DAAI;QACR,4DAAM;QACV,4DAAM;QACN,2EAEI;QAAA,4EAEI;QAAA,2EAAwB;QAAA,6EAAsC;QAAA,mEAAO;QAAA,oEAA6C;QAAA,4DAAQ;QACtH,2EACI;QAAA,2EAA6B;QAAA,4EAAgC;QAAA,oEAA2B;QAAA,4DAAO;QAC7F,wEAAkF;QADpF,4DAA6B;QAE3B,qHAAkG;QAClG,qHAAiG;QACrG,4DAAM;QACZ,4DAAM;QAEN,sEAAkC;QAClC,2EACI;QAAA,2EACI;QAAA,8EAAiF;QAAA,oEAA2B;QAAC,mEAAM;QAAA,4DAAS;QAC5H,8EAAkF;QAA5B,2IAAS,qBAAiB,IAAC;QAAC,oEAA2B;QAAC,sEAAS;QAAA,4DAAS;QACpI,4DAAM;QACV,4DAAM;QACV,4DAAO;QAEX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,4DAAM;QAEV,4DAAM;;QA3BwB,2DAAkB;QAAlB,+EAAkB;QAMH,2DAA0D;QAA1D,4HAA0D;QAC1D,0DAA2D;QAA3D,6HAA2D;;6FDZ3F,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEjBD;AAAA;AAAA;AAAA;AAAsC;;;;;;;;;;;;;ACAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4B;AACA;AACH;AACU;;;;;;;;;;;;;ACHnC;AAAA;AAAA;AAAA;AAAmC;;;;;;;;;;;;;ACAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAenB;;;;;;;;;;IC6BG,6EAOE;IAFA,siBAAiD;IAEjD,mEAA+B;IAE7B,uDACJ;IAAA,4DAAS;;;;;IARP,uJAA0E;IAOxE,0DACJ;IADI,kGACJ;;;IAXF,wEACE;IAAA,uIAOE;IAIJ,qEAAe;;;;;IAXL,0DAAkD;IAAlD,yHAAkD;;;IAL9D,qEACA;IAAA,qEAAI;IAAA,uDAAiB;IAAA,4DAAK;IAC1B,qEACA;IAAA,0EACE;IAAA,oIACE;IAaN,4DAAM;IACR,4DAAK;IACH,qEACE;IAAA,wEACA;IAAA,6EACA;IAAA,mEAEE;IAAC,0EAAa;IAAA,4DAAS;IAC3B,4DAAI;IACJ,4DAAK;IACP,4DAAK;;;;IA3BG,0DAAiB;IAAjB,+EAAiB;IAGL,0DAAoC;IAApC,sFAAoC;IAiBjD,0DAAsC;IAAtC,iLAAsC;;ADtChE,MAAM,eAAe;IAiB1B,YACU,aAA4B,EAC5B,QAAqB,EACrB,KAAoB,EACpB,gBAAkC,EAClC,sBAA8C;QAJ9C,kBAAa,GAAb,aAAa,CAAe;QAC5B,aAAQ,GAAR,QAAQ,CAAa;QACrB,UAAK,GAAL,KAAK,CAAe;QACpB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,2BAAsB,GAAtB,sBAAsB,CAAwB;QArBhD,kBAAa,GAAmB,EAAE,CAAC;QAI3C,cAAS,GAAG,EAAe,CAAC;IAkBzB,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,yBAAyB,EAAE,CAAC;IACnC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC;IAC3E,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,SAAS,CACnC,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC;YAE3B,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;oBAClC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;oBACjB,IAAI,CAAC,KAAK,CAAC,KAAK,CACd,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO,EAAE,EAC5C,CAAC,CAAC,SAAS,EACX,EAAE,OAAO,EAAE,IAAI,EAAE,CAClB,CAAC;gBACJ,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,MAAM,KAAK,GAAG,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;gBAC9C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE;oBAC9C,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;aACJ;QACH,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,SAAS,CACtC,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACzB,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC;YAE3B,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;oBAClC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;oBACjB,IAAI,CAAC,KAAK,CAAC,KAAK,CACd,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO,EAAE,EAC5C,CAAC,CAAC,SAAS,EACX,EAAE,OAAO,EAAE,IAAI,EAAE,CAClB,CAAC;gBACJ,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,MAAM,KAAK,GAAG,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;gBAC9C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE;oBAC9C,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;aACJ;QACH,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAED,yBAAyB;QACvB,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,sBAAsB,CAAC,MAAM,EAAE,CAAC,SAAS,CAC5C,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC9B,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC;YAE3B,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;oBAClC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;oBACjB,IAAI,CAAC,KAAK,CAAC,KAAK,CACd,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO,EAAE,EAC5C,CAAC,CAAC,SAAS,EACX,EAAE,OAAO,EAAE,IAAI,EAAE,CAClB,CAAC;gBACJ,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,MAAM,KAAK,GAAG,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;gBAC9C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE;oBAC9C,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;aACJ;QACH,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAED,iBAAiB,CAAC,MAAc,EAAE,SAAiB;;QACjD,MAAM,QAAQ,SAAG,IAAI,CAAC,eAAe,0CAAE,IAAI,CACzC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,MAAM,IAAI,CAAC,CAAC,WAAW,KAAK,SAAS,CAC5D,CAAC;QACF,IAAI,QAAQ,EAAE;YACZ,OAAO,IAAI,CAAC;SACb;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,cAAc,CAAC,MAAc,EAAE,SAAiB;QAC9C,MAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CACxC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,MAAM,IAAI,CAAC,CAAC,WAAW,KAAK,SAAS,CAC5D,CAAC;QAEF,IAAI,CAAC,QAAQ,EAAE;YACb,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,0BAA0B,EAAE,MAAM,EAAE;gBACrD,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YACH,OAAO;SACR;QACD,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;QAC5B,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;YACjC,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC;SAC3B;aAAM;YACL,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;SACxB;QAED,kDAAI,CAAC,IAAI,CAAC;YACR,KAAK,EAAE,UAAU,IAAI,CAAC,MAAM,aAAa;YACzC,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,gBAAgB,EAAE,UAAU;YAC5B,iBAAiB,EAAE,QAAQ,IAAI,CAAC,MAAM,GAAG;SAC1C,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,KAAK,EAAE;gBAChB,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC3D,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAC5D,CAAC,IAAI,EAAE,EAAE;oBACP,kDAAI,CAAC,IAAI,CAAC;wBACR,KAAK,EAAE,IAAI,CAAC,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,YAAY;wBAC3D,IAAI,EAAE,SAAS;wBACf,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACZ,CAAC,CAAC;gBACL,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;oBACN,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC;oBAE3B,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;wBACzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;4BAClC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;4BACjB,IAAI,CAAC,KAAK,CAAC,KAAK,CACd,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO,EAAE,EAC5C,CAAC,CAAC,SAAS,EACX,EAAE,OAAO,EAAE,IAAI,EAAE,CAClB,CAAC;wBACJ,CAAC,CAAC,CAAC;qBACJ;yBAAM;wBACL,MAAM,KAAK,GAAG,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;wBAC9C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE;4BAC9C,OAAO,EAAE,IAAI;yBACd,CAAC,CAAC;qBACJ;gBACH,CAAC,CACF,CAAC;aACH;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe,CAAC,MAAc,EAAE,SAAiB;QAC/C,MAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CACxC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,MAAM,IAAI,CAAC,CAAC,WAAW,KAAK,SAAS,CAC5D,CAAC;QACF,IAAI,CAAC,QAAQ,EAAE;YACb,OAAO,SAAS,CAAC;SAClB;QACD,OAAO,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC;IACvD,CAAC;;8EAxMU,eAAe;+FAAf,eAAe;QCtB5B,yEACE;QAAA,sEAEW;QAET,yEACE;QAAA,yEACE;QACA,+EAEoB;QACtB,4DAAM;QAEN,yEACE;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,sEAAI;QAAA,2GAA+C;QAAA,4DAAK;QACxD,0EACI;QAAA,wEACI;QAAA,oEAEI;QACR,4DAAI;QACR,4DAAM;QACV,4DAAM;QACN,2EAEI;QAAA,2EACI;QAAA,6EACE;QAAA,yEACA;QAAA,sEACA;QAAA,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,sEAAI;QAAA,2EAAU;QAAA,4DAAK;QACnB,sEAAI;QAAA,2EAAK;QAAA,4DAAK;QAChB,4DAAK;QACL,4DAAQ;QACN,yEACA;QAAA,6GACA;QA6BJ,4DAAQ;QACR,4DAAQ;QACZ,4DAAM;QACR,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,4DAAM;QAEV,4DAAM;;QAxC4B,2DAA8B;QAA9B,gFAA8B;;6FDjBnD,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AErBD;AAAA;AAAA;AAAA;AAA0C;;;AAGnC,MAAM,eAAe;;8EAAf,eAAe;+FAAf,eAAe;QADJ,2EAA+B;;6FAC1C,eAAe;cAD3B,uDAAS;eAAC,EAAE,QAAQ,EAAE,iCAAiC,EAAE;;;;;;;;;;;;;;ACF1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiC;AACO;;;;;;;;;;;;;ACDxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACA;AACM;AAO/B;AAEkC;;AAiBjD,MAAM,aAAa;;4FAAb,aAAa;oJAAb,aAAa,kBARf;YACP,4DAAY;YACZ,oDAAY;YACZ,kDAAU;YACV,kEAAmB;YACnB,4DAAY;SACb;mIAEU,aAAa,mBAbtB,2DAAe;QACf,8DAAkB;QAClB,2DAAe;QACf,8DAAkB,aAGlB,4DAAY;QACZ,oDAAY;QACZ,kDAAU;QACV,kEAAmB;QACnB,4DAAY;6FAGH,aAAa;cAfzB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAe;oBACf,8DAAkB;oBAClB,2DAAe;oBACf,8DAAkB;iBACnB;gBACD,OAAO,EAAE;oBACP,4DAAY;oBACZ,oDAAY;oBACZ,kDAAU;oBACV,kEAAmB;oBACnB,4DAAY;iBACb;aACF;;;;;;;;;;;;;;AC5BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AAEc;AAOjC;AACgD;;;AAE/D,MAAM,aAAa,GAAW;IACnC;QACE,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,2DAAe;QAC1B,WAAW,EAAE,CAAC,wDAAgB,CAAC;QAC/B,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,8DAAkB;gBAC7B,WAAW,EAAE,CAAC,4DAAoB,CAAC;aACpC;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,2DAAe;gBAC1B,WAAW,EAAE,CAAC,4DAAoB,CAAC;aACpC;YACD,EAAE,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,8DAAkB,EAAE;SAC/D;KACF;CACF,CAAC;AAOK,MAAM,oBAAoB;;mGAApB,oBAAoB;kKAApB,oBAAoB,kBAJtB,CAAC,4DAAY,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QAErC,4DAAY;mIAEX,oBAAoB,uFAFrB,4DAAY;6FAEX,oBAAoB;cALhC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;gBAE/C,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACrCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAIkB;AAGrC;AAS8B;;;;;;;;;;;;;ICYvB,4EAAkG;IAAA,6DAAE;IAAA,4DAAQ;;;IAC5G,4EAAiG;IAAA,+EAAoB;IAAA,4DAAQ;;;IAO/H,4EAAgG;IAAA,6DAAE;IAAA,4DAAQ;;;IAC1G,4EAA+F;IAAA,4EAAY;IAAA,4DAAQ;;;IAmBjH,4EAAoG;IAAA,6DAAE;IAAA,4DAAQ;;;IAC9G,4EAAmG;IAAA,+EAAe;IAAA,4DAAQ;;;IAStH,6EAA+D;IAAA,uDAAiB;IAAA,4DAAS;;;IAAlD,2FAAuB;IAAC,0DAAiB;IAAjB,gFAAiB;;;IAElF,4EAAsG;IAAA,6DAAE;IAAA,4DAAQ;;;IAChH,4EAAqG;IAAA,sFAAsB;IAAA,4DAAQ;;AD9CpK,MAAM,kBAAkB;IAmB7B,YACU,EAAe,EACf,KAAoB,EACpB,KAAqB,EACrB,aAA4B,EAC5B,cAA8B;QAJ9B,OAAE,GAAF,EAAE,CAAa;QACf,UAAK,GAAL,KAAK,CAAe;QACpB,UAAK,GAAL,KAAK,CAAgB;QACrB,kBAAa,GAAb,aAAa,CAAe;QAC5B,mBAAc,GAAd,cAAc,CAAgB;QAvBhC,kBAAa,GAAmB,EAAE,CAAC;QAE3C,cAAS,GAAG,EAAe,CAAC;QAE5B,YAAO,GAAG,EAAa,CAAC;QAExB,eAAU,GAAG,EAAuB,CAAC;QAErC,YAAO,GAAG,EAAa,CAAC;QAIxB,WAAM,GAAG,EAAe,CAAC;QAczB,cAAS,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAF9B,CAAC;IAIJ,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC;IAC3E,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACzD,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,SAAS;QACP,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,+DAAY,CAAC,CAAC;YAC9C,cAAc,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACzC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACpD,MAAM,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAClC,CAAC,CAAC;IACL,CAAC;IAED,YAAY;QACV,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAC5D,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC;YAE3B,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;oBAClC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;oBACjB,IAAI,CAAC,KAAK,CAAC,KAAK,CACd,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO,EAAE,EAC5C,CAAC,CAAC,SAAS,EACX,EAAE,OAAO,EAAE,IAAI,EAAE,CAClB,CAAC;gBACJ,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,MAAM,KAAK,GAAG,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;gBAC9C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE;oBAC9C,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;aACJ;QACH,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,SAAS,CACnC,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC;YAE3B,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;oBAClC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;oBACjB,IAAI,CAAC,KAAK,CAAC,KAAK,CACd,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO,EAAE,EAC5C,CAAC,CAAC,SAAS,EACX,EAAE,OAAO,EAAE,IAAI,EAAE,CAClB,CAAC;gBACJ,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,MAAM,KAAK,GAAG,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;gBAC9C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE;oBAC9C,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;aACJ;QACH,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAED,gBAAgB;QACd,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,kCAAkC,EAAE,OAAO,EAAE;gBAC3D,OAAO,EAAE,IAAI;aACd,CAAC,CAAC;YACH,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAC9B,OAAO;SACR;QAED,kDAAkD;QAClD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QACzC,IAAI,CAAC,UAAU,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;QACvC,IAAI,CAAC,UAAU,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACzC,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAClD,IAAI,CAAC,UAAU,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;QAChE,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;QAC9C,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CACnD,CAAC,IAAI,EAAE,EAAE;YACP,MAAM,GAAG,GAAG,iCAAiC,CAAC;YAE9C,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,SAAS;gBACf,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;YACH,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC;YAE3B,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;oBAClC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;oBACjB,IAAI,CAAC,KAAK,CAAC,KAAK,CACd,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO,EAAE,EAC5C,CAAC,CAAC,SAAS,EACX,EAAE,OAAO,EAAE,IAAI,EAAE,CAClB,CAAC;gBACJ,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,MAAM,KAAK,GAAG,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;gBAC9C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE;oBAC9C,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;aACJ;QACH,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAED,sBAAsB;QACpB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,aAAa,EAAE,CAAC;QACrC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,aAAa,EAAE,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,aAAa,EAAE,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,aAAa,EAAE,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,aAAa,EAAE,CAAC;IAClD,CAAC;IAED,aAAa;;QACX,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACnB,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI;YACvB,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG;YACrB,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc;YAC3C,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK;YACzB,MAAM,QAAE,IAAI,CAAC,OAAO,CAAC,MAAM,0CAAE,EAAE;SAChC,CAAC,CAAC;IACL,CAAC;IAED,OAAO;QACL,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;;oFA1LU,kBAAkB;kGAAlB,kBAAkB;QCvB/B,yEACE;QAAA,sEAAqB;QAEnB,yEACE;QAAA,yEACE;QACA,+EAAuC;QACzC,4DAAM;QAEN,yEACE;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,sEAAI;QAAA,2GAA0C;QAAA,wEAAuB;QAAA,mEAAiC;QAAC,qFAAmB;QAAA,4DAAI;QAAA,4DAAK;QACnI,2EACI;QAAA,yEACI;QAAA,oEAAgC;QACpC,4DAAI;QACR,4DAAM;QACV,4DAAM;QACN,2EAEI;QAAA,4EACI;QAAA,2EAAwB;QAAA,6EAAsC;QAAA,iEAAK;QAAA,oEAA6C;QAAA,4DAAQ;QACpH,2EACI;QAAA,2EAA6B;QAAA,4EAAgC;QAAA,oEAA2B;QAAA,4DAAO;QAC7F,wEAAkF;QADpF,4DAA6B;QAE3B,qHAAkG;QAClG,qHAAiG;QACvG,4DAAM;QACV,4DAAM;QACN,2EAAwB;QAAA,6EAAsC;QAAA,gEAAI;QAAA,oEAA6C;QAAA,4DAAQ;QACnH,2EACI;QAAA,2EAA6B;QAAA,4EAAgC;QAAA,oEAA6B;QAAA,4DAAO;QACjG,wEAAyG;QADzG,4DAA6B;QAE7B,qHAAgG;QAChG,qHAA+F;QACnG,4DAAM;QACV,4DAAM;QACN,2EAAwB;QAAA,6EAAsC;QAAA,0EAAc;QAAA,oEAA6C;QAAA,4DAAQ;QAC/H,2EACI;QAAA,2EACI;QAAA,4EACE;QAAA,wFAAwE;QAC1E,4DAAO;QACP,wEACA;QAAA,qFAAiG;QACrG,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEJ,2EAAwB;QAAA,6EAAsC;QAAA,kEAAM;QAAA,oEAA6C;QAAA,4DAAQ;QACrH,2EACI;QAAA,2EAA6B;QAAA,4EAAgC;QAAA,6DAAC;QAAA,4DAAO;QACnE,wEACA;QAAA,qHAAoG;QACpG,qHAAmG;QACrG,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,2EAAwB;QAAA,6EAAsC;QAAA,mEAAO;QAAA,oEAA6C;QAAA,4DAAQ;QACtH,2EACI;QAAA,2EACI;QAAA,8EACE;QAAA,uHAA+D;QACjE,4DAAS;QACT,qHAAsG;QACtG,qHAAqG;QACzG,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,sEAAkC;QAClC,2EACI;QAAA,2EACI;QAAA,8EAAiF;QAAA,oEAA2B;QAAC,mEAAM;QAAA,4DAAS;QAC5H,8EAAmF;QAA7B,2IAAS,sBAAkB,IAAC;QAAC,oEAA2B;QAAC,sEAAS;QAAA,4DAAS;QACrI,4DAAM;QACV,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,4DAAM;QAEV,4DAAM;;;QAlEgD,2DAAkB;QAAlB,+EAAkB;QAK3B,2DAA0D;QAA1D,4HAA0D;QAC1D,0DAA2D;QAA3D,6HAA2D;QAO7D,2DAAwD;QAAxD,0HAAwD;QACxD,0DAAyD;QAAzD,2HAAyD;QAO3B,0DAAc;QAAd,oEAAc;QAEjC,0DAAwB;QAAxB,8EAAwB;QACkB,0DAAqB;QAArB,kFAAqB;QASxE,2DAA4D;QAA5D,8HAA4D;QAC5D,0DAA6D;QAA7D,+HAA6D;QASxD,0DAA8B;QAA9B,gFAA8B;QAEjC,0DAA8D;QAA9D,gIAA8D;QAC9D,0DAA+D;QAA/D,iIAA+D;;6FD9CjG,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEtBD;AAAA;AAAA;AAAA;AAAsC;;;;;;;;;;;;;ACAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAIkB;AACrC;AAU8B;;;;;;;;;;;;;ICgBvB,4EAAkG;IAAA,6DAAE;IAAA,4DAAQ;;;IAC5G,4EAAiG;IAAA,+EAAoB;IAAA,4DAAQ;;;IAO/H,4EAAgG;IAAA,6DAAE;IAAA,4DAAQ;;;IAC1G,4EAA+F;IAAA,4EAAY;IAAA,4DAAQ;;;IAmBjH,4EAAoG;IAAA,6DAAE;IAAA,4DAAQ;;;IAC9G,4EAAmG;IAAA,+EAAe;IAAA,4DAAQ;;;IAU1H,4EAAoG;IAAA,6DAAE;IAAA,4DAAQ;;;IAC9G,4EAAmG;IAAA,0EAAe;IAAA,4DAAQ;;;IAQtH,6EAA+D;IAAA,uDAAiB;IAAA,4DAAS;;;IAAlD,2FAAuB;IAAC,0DAAiB;IAAjB,gFAAiB;;;IAElF,4EAAsG;IAAA,6DAAE;IAAA,4DAAQ;;;IAChH,4EAAqG;IAAA,sFAAsB;IAAA,4DAAQ;;AD5DpK,MAAM,kBAAkB;IAe7B,YACU,EAAe,EACf,KAAoB,EACpB,aAA4B,EAC5B,cAA8B;QAH9B,OAAE,GAAF,EAAE,CAAa;QACf,UAAK,GAAL,KAAK,CAAe;QACpB,kBAAa,GAAb,aAAa,CAAe;QAC5B,mBAAc,GAAd,cAAc,CAAgB;QAlBhC,kBAAa,GAAmB,EAAE,CAAC;QAE3C,cAAS,GAAG,EAAe,CAAC;QAE5B,YAAO,GAAG,EAAa,CAAC;QAExB,eAAU,GAAG,EAAmB,CAAC;QAIjC,WAAM,GAAG,EAAe,CAAC;QAWzB,cAAS,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAF9B,CAAC;IAIJ,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC;IAC3E,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,SAAS;QACP,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,+DAAY,CAAC,CAAC;YAC9C,cAAc,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACzC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACpD,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,MAAM,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAClC,CAAC,CAAC;IACL,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,SAAS,CACnC,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC;YAE3B,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;oBAClC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;oBACjB,IAAI,CAAC,KAAK,CAAC,KAAK,CACd,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO,EAAE,EAC5C,CAAC,CAAC,SAAS,EACX,EAAE,OAAO,EAAE,IAAI,EAAE,CAClB,CAAC;gBACJ,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,MAAM,KAAK,GAAG,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;gBAC9C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE;oBAC9C,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;aACJ;QACH,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAED,gBAAgB;QACd,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,kCAAkC,EAAE,OAAO,EAAE;gBAC5D,OAAO,EAAE,IAAI;aACd,CAAC,CAAC;YACH,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAC9B,OAAO;SACR;QAED,kDAAkD;QAClD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAClC,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAClD,IAAI,CAAC,UAAU,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;QAChE,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,IAAI,EAAE,CAAC;QACpC,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;QAC9C,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CACnD,CAAC,IAAI,EAAE,EAAE;YACP,MAAM,GAAG,GAAG,kCAAkC,CAAC;YAE/C,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,SAAS;gBACf,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;YACH,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC;YAE3B,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;oBAClC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;oBACjB,IAAI,CAAC,KAAK,CAAC,KAAK,CACd,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO,EAAE,EAC5C,CAAC,CAAC,SAAS,EACX,EAAE,OAAO,EAAE,IAAI,EAAE,CAClB,CAAC;gBACJ,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,MAAM,KAAK,GAAG,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;gBAC9C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE;oBAC9C,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;aACJ;QACH,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAED,sBAAsB;QACpB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,aAAa,EAAE,CAAC;QACrC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,aAAa,EAAE,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,aAAa,EAAE,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,aAAa,EAAE,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,aAAa,EAAE,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,aAAa,EAAE,CAAC;IAClD,CAAC;IAED,OAAO;QACL,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;;oFA1IU,kBAAkB;kGAAlB,kBAAkB;QCtB/B,iFACE;QAAA,wEACE;QAAA,6FACF;QAAA,4DAAK;QACP,4DAAc;QACd,yEACE;QAAA,sEAAqB;QACnB,yEACE;QAAA,yEACE;QACA,+EAAuC;QACzC,4DAAM;QACN,yEACE;QAAA,yEACI;QAAA,0EACI;QAAA,0EACI;QAAA,0EACI;QAAA,sEAAI;QAAA,2GAA0C;QAAA,yEAAuB;QAAA,oEAAiC;QAAC,qFAAmB;QAAA,4DAAI;QAAA,4DAAK;QACnI,2EACI;QAAA,yEACI;QAAA,oEAAgC;QACpC,4DAAI;QACR,4DAAM;QACV,4DAAM;QACN,2EAEI;QAAA,4EACI;QAAA,2EAAwB;QAAA,6EAAsC;QAAA,iEAAK;QAAA,oEAA6C;QAAA,4DAAQ;QACpH,2EACI;QAAA,2EAA6B;QAAA,4EAAgC;QAAA,oEAA2B;QAAA,4DAAO;QAC7F,wEAAkF;QADpF,4DAA6B;QAE3B,qHAAkG;QAClG,qHAAiG;QACvG,4DAAM;QACV,4DAAM;QACN,2EAAwB;QAAA,6EAAsC;QAAA,gEAAI;QAAA,oEAA6C;QAAA,4DAAQ;QACnH,2EACI;QAAA,2EAA6B;QAAA,4EAAgC;QAAA,oEAA6B;QAAA,4DAAO;QACjG,wEAAyG;QADzG,4DAA6B;QAE7B,qHAAgG;QAChG,qHAA+F;QACnG,4DAAM;QACV,4DAAM;QACN,2EAAwB;QAAA,6EAAsC;QAAA,0EAAc;QAAA,oEAA6C;QAAA,4DAAQ;QAC/H,2EACI;QAAA,2EACI;QAAA,4EACE;QAAA,wFAAwE;QAC1E,4DAAO;QACP,wEACA;QAAA,qFAAgF;QACpF,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEJ,2EAAwB;QAAA,6EAAsC;QAAA,kEAAM;QAAA,oEAA6C;QAAA,4DAAQ;QACrH,2EACI;QAAA,2EAA6B;QAAA,4EAAgC;QAAA,6DAAC;QAAA,4DAAO;QACnE,wEACA;QAAA,qHAAoG;QACpG,qHAAmG;QACrG,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,sEAAkC;QAClC,2EAAwB;QAAA,6EAAsC;QAAA,kEAAM;QAAA,oEAA6C;QAAA,4DAAQ;QACvH,2EACI;QAAA,2EAA6B;QAAA,4EAAgC;QAAA,oEAA+B;QAAA,4DAAO;QAC/F,wEACA;QAAA,qHAAoG;QACpG,qHAAmG;QACvG,4DAAM;QACV,4DAAM;QACR,4DAAM;QACN,2EAAwB;QAAA,6EAAsC;QAAA,mEAAO;QAAA,oEAA6C;QAAA,4DAAQ;QACtH,2EACI;QAAA,2EACI;QAAA,8EACE;QAAA,uHAA+D;QACjE,4DAAS;QACT,qHAAsG;QACtG,qHAAqG;QACzG,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,sEAAkC;QAClC,2EACI;QAAA,2EACI;QAAA,8EAAiF;QAAA,oEAA2B;QAAC,mEAAM;QAAA,4DAAS;QAC5H,8EAAmF;QAA7B,2IAAS,sBAAkB,IAAC;QAAC,oEAA2B;QAAC,sEAAS;QAAA,4DAAS;QACrI,4DAAM;QACV,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACR,4DAAM;QACR,4DAAM;QACV,4DAAM;;;QApGsB,4EAAqB;QA0BK,2DAAkB;QAAlB,+EAAkB;QAK3B,2DAA0D;QAA1D,4HAA0D;QAC1D,0DAA2D;QAA3D,6HAA2D;QAO7D,2DAAwD;QAAxD,0HAAwD;QACxD,0DAAyD;QAAzD,2HAAyD;QAO3B,0DAAc;QAAd,oEAAc;QAEjC,0DAAwB;QAAxB,8EAAwB;QACC,0DAAqB;QAArB,kFAAqB;QASvD,2DAA4D;QAA5D,8HAA4D;QAC5D,0DAA6D;QAA7D,+HAA6D;QAU7D,2DAA4D;QAA5D,8HAA4D;QAC5D,0DAA6D;QAA7D,+HAA6D;QAQxD,0DAA8B;QAA9B,gFAA8B;QAEjC,0DAA8D;QAA9D,gIAA8D;QAC9D,0DAA+D;QAA/D,iIAA+D;;6FD5DjG,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AErBD;AAAA;AAAA;AAAA;AAAsC;;;;;;;;;;;;;ACAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4B;AACH;AACK;AACM;AACR;;;;;;;;;;;;;ACJ5B;AAAA;AAAA;AAAA;AAAmC;;;;;;;;;;;;;ACAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AASS;AAE5B;;;;;;;;;;IC+CG,6EACE;IAD6B,2aAAsC;IACnE,uEACF;IAAA,4DAAS;;;;IACT,6EACE;IAD6B,6aAAsC;IACnE,oEACF;IAAA,4DAAS;;;;IAXf,yEACE;IAAA,qEAAI;IAAA,wEAAO;IAAA,uDAAe;IAAA,4DAAQ;IAAA,4DAAK;IACvC,qEAAI;IAAA,wEAAO;IAAA,uDAAwB;;IAAA,4DAAQ;IAAA,4DAAK;IAChD,qEAAK;IAAA,uDAA4C;;IAAA,4DAAK;IACtD,sEAAI;IAAA,yEAAQ;IAAA,wDAAiB;IAAA,4DAAQ;IAAA,4DAAK;IAC1C,sEACI;IAAA,0HACE;IAEF,0HACE;IAEN,4DAAK;IACL,sEACE;IAAA,yEACE;IAAA,8EACE;IAAA,oEAA0B;IAC1B,oEACF;IAAA,4DAAS;IACX,4DAAI;IACN,4DAAK;IACL,sEACE;IAAA,8EACE;IADM,kWAA8B;IACpC,sEACF;IAAA,4DAAS;IACX,4DAAK;IACP,4DAAK;;;IAzBQ,0DAAe;IAAf,6EAAe;IACf,0DAAwB;IAAxB,6IAAwB;IAC9B,0DAA4C;IAA5C,+KAA4C;IACrC,0DAAiB;IAAjB,yFAAiB;IAEjB,0DAAsB;IAAtB,qFAAsB;IAGtB,0DAAsB;IAAtB,qFAAsB;IAK7B,0DAAqC;IAArC,gLAAqC;;;IA8BpD,qEACE;;;IADoE,yMAA4D;;;IAChI,qEACF;;;IACA,yEAAmD;IAAA,mEAAQ;IAAA,4DAAK;;ADjF7E,MAAM,eAAe;IAiB1B,YACU,KAAoB,EACpB,cAA8B;QAD9B,UAAK,GAAL,KAAK,CAAe;QACpB,mBAAc,GAAd,cAAc,CAAgB;QAlBhC,kBAAa,GAAmB,EAAE,CAAC;QAM3C,YAAO,GAAG,EAAuB,CAAC;QAElC,iBAAY,GAAG,EAAa,CAAC;QAE7B,cAAS,GAAG,EAAe,CAAC;QAI5B,oBAAe,GAAG,wEAAU,CAAC,OAAO,CAAC;IAKlC,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC;IAC3E,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,SAAS,CACpC,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAChC,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC;YAE3B,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;oBAClC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;oBACjB,IAAI,CAAC,KAAK,CAAC,KAAK,CACd,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO,EAAE,EAC5C,CAAC,CAAC,SAAS,EACX,EAAE,OAAO,EAAE,IAAI,EAAE,CAClB,CAAC;gBACJ,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,MAAM,KAAK,GAAG,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;gBAC9C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE;oBAC9C,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;aACJ;QACH,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAED,sBAAsB,CAAC,OAA0B;QAC/C,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC;QAC7D,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,kDAAI,CAAC,IAAI,CAAC;YACR,KAAK,EAAE,UAAU,MAAM,aAAa,OAAO,CAAC,IAAI,EAAE;YAClD,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,gBAAgB,EAAE,UAAU;YAC5B,iBAAiB,EAAE,iBAAiB;SACrC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,KAAK,EAAE;gBAChB,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClD,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CACtD,CAAC,IAAI,EAAE,EAAE;oBACP,IAAI,CAAC,gBAAgB,EAAE,CAAC;oBACxB,kDAAI,CAAC,IAAI,CAAC;wBACR,KAAK,EAAE,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,YAAY;wBACtD,IAAI,EAAE,WAAW,OAAO,CAAC,IAAI,IAAI,MAAM,eAAe;wBACtD,IAAI,EAAE,SAAS;wBACf,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACZ,CAAC,CAAC;gBACL,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;oBACN,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC;oBAE3B,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;wBACzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;4BAClC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;4BACjB,IAAI,CAAC,KAAK,CAAC,KAAK,CACd,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO,EAAE,EAC5C,CAAC,CAAC,SAAS,EACX,EAAE,OAAO,EAAE,IAAI,EAAE,CAClB,CAAC;wBACJ,CAAC,CAAC,CAAC;qBACJ;yBAAM;wBACL,MAAM,KAAK,GAAG,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;wBAC9C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE;4BAC9C,OAAO,EAAE,IAAI;yBACd,CAAC,CAAC;qBACJ;gBACH,CAAC,CACF,CAAC;aACH;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qBAAqB,CAAC,IAAY;QAChC,IAAI,CAAC,IAAI,EAAE;YACT,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,QAAQ,CAAC;SACxC;aAAM;YACL,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAClD,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,CAChE,CAAC;SACH;IACH,CAAC;IAED,WAAW,CAAC,EAAU;QACpB,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACrD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;;8EAzHU,eAAe;+FAAf,eAAe;;QClB5B,yEACE;QAAA,sEAEW;QAET,yEACE;QAAA,yEACE;QACA,+EAEoB;QACtB,4DAAM;QAEN,yEACE;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,qEAAI;QAAA,2GAA+C;QAAA,4DAAK;QACxD,0EACI;QAAA,wEACI;QAAA,mEAEI;QACR,4DAAI;QACR,4DAAM;QACV,4DAAM;QACN,2EACE;QAAA,iFAQF;QAFM,qRAAS,oCAA0C,IAAC;QANxD,4DAQF;QAAA,4DAAM;QACN,2EAEI;QAAA,2EACI;QAAA,6EACE;QAAA,yEACE;QAAA,sEACE;QAAA,sEAAI;QAAA,gEAAI;QAAA,4DAAK;QACb,sEAAI;QAAA,+DAAG;QAAA,4DAAK;QACZ,sEAAI;QAAA,yEAAO;QAAA,oEAAQ;QAAA,4DAAQ;QAAA,4DAAK;QAChC,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QACd,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,sEAAI;QAAA,2EAAK;QAAA,4DAAK;QACd,sEAAI;QAAA,oEAAQ;QAAA,4DAAK;QACnB,4DAAK;QACP,4DAAQ;QACN,yEACA;QAAA,8GACE;QA0BJ,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QACZ,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,4DAAM;QACV,4DAAM;QAEN,2EACI;QAAA,2EACI;QAAA,2EACA;QAAA,2EACQ;QAAA,2EACI;QAAA,8EAAyD;QAAA,4EAAyB;QAAA,kEAAO;QAAA,4DAAO;QAAA,4EAAsB;QAAA,iEAAK;QAAA,4DAAO;QAAA,4DAAS;QAC3I,8GACE;QAAA,8GACF;QAAA,0EAAwB;QAAA,wDAAuB;QAAA,4DAAK;QACpD,4GAAmD;QACnD,6EAAyB;QAAA,wDAA2F;QAAA,4DAAQ;QAChI,4DAAM;QACN,2EACI;QAAA,qEAAI;QAAA,0EAAQ;QAAA,+EAAmB;QAAA,4DAAS;QAAC,wDAAmD;;QAAA,4DAAI;QAChG,qEAAI;QAAA,0EAAQ;QAAA,mEAAO;QAAA,4DAAS;QAAC,wDAAwB;QAAA,4DAAI;QACzD,qEAAI;QAAA,0EAAQ;QAAA,iEAAK;QAAA,4DAAS;QAAC,wDAAgC;;QAAA,4DAAI;QAC/D,qEAAI;QAAA,0EAAQ;QAAA,uEAAY;QAAA,4DAAS;QAAA,wDAA+C;;QAAA,4DAAI;QACpF,qEAAI;QAAA,0EAAQ;QAAA,oEAAQ;QAAA,4DAAS;QAAC,wDAA0D;QAAA,4DAAI;QAEhG,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QA7DyC,2DAAsC;QAAtC,0FAAsC;QA4C5D,2DAAiC;QAAjC,+FAAiC;QAC/B,0DAAkC;QAAlC,gGAAkC;QACjB,0DAAuB;QAAvB,sFAAuB;QAC3C,0DAA0B;QAA1B,wFAA0B;QACL,0DAA2F;QAA3F,mKAA2F;QAG3E,0DAAmD;QAAnD,wLAAmD;QAC/D,0DAAwB;QAAxB,iGAAwB;QAC1B,0DAAgC;QAAhC,kKAAgC;QAC1B,0DAA+C;QAA/C,mLAA+C;QAClD,0DAA0D;QAA1D,mIAA0D;;6FDzF/F,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEjBD;AAAA;AAAA;AAAA;AAAwC;;;;;;;;;;;;;ACAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAES;AAI5B;;;;;;;;;;;IC0BG,qEACA;;;IAD0G,oMAAuD;;;IACjK,qEACA;;ADb3B,MAAM,mBAAmB;IAe9B,YACU,eAAgC,EAChC,KAAoB,EACpB,OAA0B,EAC1B,EAAe,EACf,cAA8B;QAJ9B,oBAAe,GAAf,eAAe,CAAiB;QAChC,UAAK,GAAL,KAAK,CAAe;QACpB,YAAO,GAAP,OAAO,CAAmB;QAC1B,OAAE,GAAF,EAAE,CAAa;QACf,mBAAc,GAAd,cAAc,CAAgB;QAnBhC,kBAAa,GAAmB,EAAE,CAAC;QAE3C,YAAO,GAAG,EAAa,CAAC;QAExB,cAAS,GAAG,EAAe,CAAC;QAI5B,SAAI,GAAG,IAAI,QAAQ,EAAE,CAAC;QAEtB,oBAAe,GAAG,wEAAU,CAAC,OAAO,CAAC;IAUlC,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC;IAC3E,CAAC;IAED,SAAS;QACP,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,IAAI,EAAE,CAAC,EAAE,CAAC;SACX,CAAC,CAAC;IACL,CAAC;IAED,YAAY,CAAC,KAAK;QAChB,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YACjC,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SACtC;IACH,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;IACrD,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YAEpB,IAAI,CAAC,KAAK,CAAC,KAAK,CACd,wCAAwC,EACxC,oBAAoB,EACpB;gBACE,OAAO,EAAE,IAAI;aACd,CACF,CAAC;SACH;QAED,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC;QACtD,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CACnE,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,8BAA8B;gBACpC,IAAI,EAAE,SAAS;gBACf,iBAAiB,EAAE,KAAK;gBACxB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;YACH,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC;YAC3B,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YAEpB,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;oBAClC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;oBACjB,IAAI,CAAC,KAAK,CAAC,KAAK,CACd,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO,EAAE,EAC5C,CAAC,CAAC,SAAS,EACX;wBACE,OAAO,EAAE,IAAI;qBACd,CACF,CAAC;gBACJ,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,MAAM,KAAK,GAAG,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;gBAC9C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE;oBAC9C,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;aACJ;QACH,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClE,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YACxC,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,OAAO;QACL,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;;sFApHU,mBAAmB;mGAAnB,mBAAmB;QCrBhC,iFACE;QAAA,wEACE;QAAA,2EACF;QAAA,4DAAK;QACP,4DAAc;QACd,yEACE;QAAA,sEAAqB;QAEnB,yEACE;QAAA,yEACE;QACA,+EAAuC;QACzC,4DAAM;QAEN,yEACE;QAAA,yEACI;QAAA,0EACI;QAAA,0EACI;QAAA,0EACI;QAAA,sEAAI;QAAA,kFAAiB;QAAA,4DAAK;QAC1B,2EACI;QAAA,yEACI;QAAA,oEAAgC;QACpC,4DAAI;QACR,4DAAM;QACV,4DAAM;QACN,2EACE;QAAA,2EACE;QAAA,2EAEI;QAAA,2EACE;QAAA,4EAAiF;QAAA,6EAC7E;QAAA,kHACA;QAAA,kHACA;QAAA,6EASF;QAFI,mJAAU,wBAAoB,IAAC;QAPjC,4DASF;QAAA,4DAAQ;QACR,qEAAG;QAAA,0GAA8C;QAAA,4DAAI;QACrD,8EAA+E;QAAzD,4IAAS,0BAAsB,IAAC;QAAyB,qEAAS;QAAA,4DAAS;QACnG,4DAAO;QACT,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,uEACI;QAAA,0EACI;QAAA,wDACJ;;QAAA,4DAAK;QACL,sEAAI;QAAA,wDAAsC;;QAAA,4DAAK;QAE7C,6EACE;QAAA,yEACA;QAAA,sEACI;QAAA,sEACI;QAAA,0EAAQ;QAAA,kEAAM;QAAA,4DAAS;QAC3B,4DAAK;QACL,sEACE;QAAA,wDACF;QAAA,4DAAK;QACT,4DAAK;QACL,sEACI;QAAA,sEACI;QAAA,0EAAQ;QAAA,8EAAkB;QAAA,4DAAS;QACvC,4DAAK;QACL,sEACI;QAAA,wDACJ;;QAAA,4DAAK;QACT,4DAAK;QACL,sEACI;QAAA,sEACI;QAAA,0EAAQ;QAAA,+DAAG;QAAA,4DAAS;QACxB,4DAAK;QACL,sEACI;QAAA,wDACJ;;QAAA,4DAAK;QACT,4DAAK;QACL,4DAAQ;QACZ,4DAAQ;QACZ,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEV,4DAAM;QACN,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,4DAAM;QACV,4DAAM;;QAhGsB,4EAAqB;QA+BW,2DAAkB;QAAlB,+EAAkB;QACvC,0DAA4B;QAA5B,0FAA4B;QAC5B,0DAA6B;QAA7B,2FAA6B;QAmBxB,2DACJ;QADI,8JACJ;QACI,0DAAsC;QAAtC,+LAAsC;QAShC,0DACF;QADE,6FACF;QAOI,0DACJ;QADI,oLACJ;QAOI,0DACJ;QADI,8JACJ;;6FD3DnC,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AEpBD;AAAA;AAAA;AAAA;AAA0C;;;AAGnC,MAAM,gBAAgB;;gFAAhB,gBAAgB;gGAAhB,gBAAgB;QADL,2EAA+B;;6FAC1C,gBAAgB;cAD5B,uDAAS;eAAC,EAAE,QAAQ,EAAE,iCAAiC,EAAE;;;;;;;;;;;;;;ACF1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8B;AACO;;;;;;;;;;;;;ACDrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AAEc;AAQjC;AACgD;;;AAE/D,MAAM,UAAU,GAAW;IAChC;QACE,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,4DAAgB;QAC3B,WAAW,EAAE,CAAC,wDAAgB,CAAC;QAC/B,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,8DAAkB;gBAC7B,WAAW,EAAE,CAAC,4DAAoB,CAAC;aACpC;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,2DAAe;gBAC1B,WAAW,EAAE,CAAC,4DAAoB,CAAC;aACpC;YACD,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,+DAAmB,EAAE;YAClD,EAAE,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,8DAAkB,EAAE;SAC7D;KACF;CACF,CAAC;AAOK,MAAM,iBAAiB;;gGAAjB,iBAAiB;4JAAjB,iBAAiB,kBAJnB,CAAC,4DAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QAElC,4DAAY;mIAEX,iBAAiB,uFAFlB,4DAAY;6FAEX,iBAAiB;cAL7B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;gBAE5C,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACvCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACA;AAEA;AACM;AAEc;AACD;AAKlC;AAQV;AAMA;;AA4Bf,MAAM,UAAU;;yFAAV,UAAU;8IAAV,UAAU,mBANV;QACT,gFAAmB;QACnB,EAAE,OAAO,EAAE,kEAAW,EAAE,QAAQ,EAAE,sDAAc,EAAE;QAClD,EAAE,OAAO,EAAE,uEAAgB,EAAE,QAAQ,EAAE,wDAAgB,EAAE;KAC1D,YAhBQ;YACP,4DAAY;YACZ,kDAAU;YACV,4DAAY;YACZ,gFAAmB;YACnB,+EAAkB;YAClB,0EAAmB;YACnB,4DAAgB;YAChB,kEAAmB;YACnB,4DAAgB;YAChB,oDAAY;SACb;mIAOU,UAAU,mBAxBnB,8DAAkB;QAClB,2DAAe;QACf,4DAAgB;QAChB,+DAAmB;QACnB,8DAAkB,aAGlB,4DAAY;QACZ,kDAAU;QACV,4DAAY;QACZ,gFAAmB;QACnB,+EAAkB;QAClB,0EAAmB;QACnB,4DAAgB;QAChB,kEAAmB;QACnB,4DAAgB;QAChB,oDAAY;6FAQH,UAAU;cA1BtB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,8DAAkB;oBAClB,2DAAe;oBACf,4DAAgB;oBAChB,+DAAmB;oBACnB,8DAAkB;iBACnB;gBACD,OAAO,EAAE;oBACP,4DAAY;oBACZ,kDAAU;oBACV,4DAAY;oBACZ,gFAAmB;oBACnB,+EAAkB;oBAClB,0EAAmB;oBACnB,4DAAgB;oBAChB,kEAAmB;oBACnB,4DAAgB;oBAChB,oDAAY;iBACb;gBACD,SAAS,EAAE;oBACT,gFAAmB;oBACnB,EAAE,OAAO,EAAE,kEAAW,EAAE,QAAQ,EAAE,sDAAc,EAAE;oBAClD,EAAE,OAAO,EAAE,uEAAgB,EAAE,QAAQ,EAAE,wDAAgB,EAAE;iBAC1D;aACF;;;;;;;;;;;;;;ACtDD;AAAA;AAAO,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,OAAO,EAAE,uBAAuB;CACjC,CAAC;;;;;;;;;;;;;ACHF;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NotFoundComponent } from './modules';\n\nexport const routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: '**', component: NotFoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'corebasef';\n}\n","<router-outlet></router-outlet>\n<div class=\"footer\">\n  <div class=\"pull-right\">\n      Beta versão 1.0.0\n  </div>\n  <div>\n      <strong>Sistema CCOS</strong> Serviços DF &copy; 2020\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\n\nimport {\n  LoginModule,\n  LoginRoutingModule,\n  DashboardModule,\n  DashboardRoutingModule,\n  MenuModule,\n  SharedModule,\n  UserModule,\n  UserRoutingModule,\n  ProfileModule,\n  ProfileRoutingModule,\n  PermitionModule,\n  PermitionRoutingModule,\n  LogModule,\n  LogRoutingModule,\n  ClienteModule,\n  ClientRoutingModule,\n  GroupServiceModule,\n  GroupServiceRoutingModule,\n  OrderServiceModule,\n  OrderServiceRoutingModule,\n  Authinterceptor,\n} from './modules';\n\nimport { AppRoutingModule } from './app-routing.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    LoginModule,\n    LoginRoutingModule,\n    RouterModule,\n    DashboardModule,\n    DashboardRoutingModule,\n    MenuModule,\n    SharedModule,\n    HttpClientModule,\n    UserModule,\n    UserRoutingModule,\n    BrowserAnimationsModule,\n    ProfileModule,\n    ProfileRoutingModule,\n    PermitionModule,\n    PermitionRoutingModule,\n    LogModule,\n    LogRoutingModule,\n    ClienteModule,\n    ClientRoutingModule,\n    GroupServiceModule,\n    GroupServiceRoutingModule,\n    OrderServiceModule,\n    OrderServiceRoutingModule,\n    HttpClientModule,\n\n    ToastrModule.forRoot(),\n    AppRoutingModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: Authinterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","export * from './login';\n","import { Component } from '@angular/core';\n\n@Component({ template: `<router-outlet></router-outlet>` })\nexport class AutenticacaoComponent {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport {\n  Forgot,\n  ErroDTO,\n  ErroGeral,\n  LoginService,\n  Usuario,\n  UsuarioService,\n} from 'src/app/modules/shared';\n\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\n\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\n\nimport Swal from 'sweetalert2';\n\ninterface RadioButtonInterface {\n  codigo: number;\n  value: number;\n}\n\n@Component({\n  selector: 'app-forgot',\n  templateUrl: './forgot.component.html',\n  styleUrls: ['./forgot.component.css'],\n})\nexport class ForgotComponent implements OnInit {\n  form: FormGroup;\n\n  private subscriptions: Subscription[] = [];\n\n  usuario = {} as Usuario;\n\n  forgot = {} as Forgot;\n\n  erroGeral = {} as ErroGeral;\n\n  erroDTO: ErroDTO;\n\n  carregando = false;\n\n  ativado1 = true;\n\n  ativado2 = false;\n\n  ativado3 = false;\n\n  ativado4 = false;\n\n  cpfArray: RadioButtonInterface[] = [];\n\n  anoNascimentoArray: RadioButtonInterface[] = [];\n\n  cpf5 = {} as RadioButtonInterface;\n\n  anoNascimento = {} as RadioButtonInterface;\n\n  CpfCorreto = false;\n\n  anoNascimentoCorreto = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private toast: ToastrService,\n    private loginService: LoginService,\n    private userService: UsuarioService,\n    private spinner: NgxSpinnerService,\n  ) {}\n\n  ngOnInit(): void {\n    this.criarForm();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  criarForm(): void {\n    this.form = this.fb.group({\n      email: ['', [Validators.email]],\n    });\n  }\n\n  buscarDadosUser(): void {\n    this.spinner.show();\n    if (this.form.invalid) {\n      this.spinner.hide();\n      this.toast.error('E-mail inválido', 'Erro no preenchimento', {\n        timeOut: 3000,\n      });\n      this.carregando = false;\n      return;\n    }\n\n    this.forgot = this.form.value;\n\n    this.subscriptions.push(\n      this.userService.getUserByEmail(this.forgot.email).subscribe(\n        (data) => {\n          this.getRandomArbitrary();\n          this.spinner.hide();\n          this.usuario = data;\n          this.ativarDesativaraba(2);\n          this.pegando5digitosCPF();\n          this.getAnoNascimento();\n        },\n        (err) => {\n          const title = `Erro 404`;\n          this.spinner.hide();\n          this.toast.error('Usuário não encontrado na base de dados', title, {\n            timeOut: 3000,\n          });\n        },\n      ),\n    );\n  }\n\n  pegando5digitosCPF(): void {\n    const cpfcinco = this.usuario.cpf.substr(0, 5);\n    const indice = Math.floor(Math.random() * 4);\n    const cpfTemp = {} as RadioButtonInterface;\n    cpfTemp.codigo = Number(cpfcinco);\n    cpfTemp.value = indice;\n    this.cpf5 = cpfTemp;\n    this.cpfArray[indice] = cpfTemp;\n  }\n\n  getAnoNascimento(): void {\n    let anoNascimento = this.usuario.dataNascimento.toString();\n    anoNascimento = anoNascimento.substr(0, 4);\n    const indice = Math.floor(Math.random() * 4);\n    const anoTemp = {} as RadioButtonInterface;\n    anoTemp.codigo = Number(anoNascimento);\n    anoTemp.value = indice;\n    this.anoNascimento = anoTemp;\n    this.anoNascimentoArray[indice] = anoTemp;\n  }\n\n  getRandomArbitrary(): void {\n    this.cpfArray = [];\n    this.anoNascimentoArray = [];\n    for (let i = 0; i < 4; i += 1) {\n      const randomCpfFake = Math.floor(Math.random() * (99889 - 10000) + 10000);\n      const cpfTemp = {} as RadioButtonInterface;\n      cpfTemp.codigo = randomCpfFake;\n      cpfTemp.value = i;\n      this.cpfArray.push(cpfTemp);\n    }\n\n    for (let i = 0; i < 4; i += 1) {\n      const randomCpfFake = Math.floor(Math.random() * (2020 - 1920) + 1920);\n      const dataNasicimentoTemp = {} as RadioButtonInterface;\n      dataNasicimentoTemp.codigo = randomCpfFake;\n      dataNasicimentoTemp.value = i;\n      this.anoNascimentoArray.push(dataNasicimentoTemp);\n    }\n  }\n\n  ativarDesativaraba(numeroAba: number): void {\n    switch (numeroAba) {\n      case 1:\n        this.ativado1 = true;\n        document.getElementById('aba1').click();\n        break;\n      case 2:\n        this.ativado2 = true;\n        document.getElementById('aba2').click();\n        break;\n      case 3:\n        this.ativado3 = true;\n        document.getElementById('aba3').click();\n        break;\n      case 4:\n        this.ativado4 = true;\n        document.getElementById('aba4').click();\n        break;\n      default:\n        this.ativado1 = true;\n        document.getElementById('aba1').click();\n    }\n  }\n\n  enviarEmail() {\n    if (!(this.CpfCorreto && this.anoNascimentoCorreto)) {\n      this.toast.info(\n        'Ano de nascimento/CPF não confere',\n        'Erro de validação',\n        {\n          timeOut: 4000,\n        },\n      );\n\n      setTimeout(() => {\n        this.refresh();\n      }, 3000);\n      return;\n    }\n\n    this.spinner.show();\n    this.subscriptions.push(\n      this.loginService.forgot(this.forgot).subscribe(\n        (data) => {\n          this.spinner.hide();\n          Swal.fire(\n            'Gerado nova senha com sucesso!',\n            'Favor verificar seu e-mail',\n            'success',\n          );\n          this.router.navigate(['/login']);\n        },\n        (err) => {\n          this.erroGeral = err.error;\n          this.spinner.hide();\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                {\n                  timeOut: 4000,\n                },\n              );\n            });\n            setTimeout(() => {\n              this.refresh();\n            }, 3000);\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 4000,\n            });\n            setTimeout(() => {\n              this.refresh();\n            }, 3000);\n          }\n        },\n      ),\n    );\n  }\n\n  validaCpfOuAnoNascimento(indice: number, tipo: number): void {\n    if (tipo === 1) {\n      if (this.cpf5.value === indice) {\n        this.CpfCorreto = true;\n      } else {\n        this.CpfCorreto = false;\n      }\n    }\n\n    if (tipo === 2) {\n      if (this.anoNascimento.value === indice) {\n        this.anoNascimentoCorreto = true;\n      } else {\n        this.anoNascimentoCorreto = false;\n      }\n    }\n  }\n\n  refresh(): void {\n    window.location.reload();\n  }\n}\n","<ngx-spinner [fullScreen]=\"false\" type=\"ball-clip-rotate-multiple\" size=\"medium\">\n  <h2 style=\"color: white;\">Carregando...</h2>\n</ngx-spinner>\n<div class=\"body\">\n  <div class=\"container\">\n\n    <div>\n      <h1 class=\"logo-name\">MSC+</h1>\n    </div>\n    <h3>Dados para reset de senha</h3>\n\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n        <div class=\"tabs-container\">\n            <ul class=\"nav nav-tabs\">\n                <li class=\"active\"><a id=\"aba1\" data-toggle=\"tab\" href=\"#tab-1\"> 1° - E-mail</a></li>\n                <li class=\"\"><a id=\"aba2\" data-toggle=\"tab\" href=\"#tab-2\">2° - CPF</a></li>\n                <li class=\"\"><a id=\"aba3\" data-toggle=\"tab\" href=\"#tab-3\">3° - Data de Nascimento</a></li>\n                <li class=\"\"><a id=\"aba4\" data-toggle=\"tab\" href=\"#tab-4\">4° - Reset de Senha</a></li>\n            </ul>\n            <div class=\"tab-content\">\n                <div id=\"tab-1\" class=\"tab-pane active\">\n                  <form [formGroup]=\"form\" novalidate>\n                    <div class=\"form-group\">\n                        <input\n                          style=\"margin-top: 20px;\"\n                          type=\"email\"\n                          formControlName=\"email\"\n                          class=\"form-control input-underline input-lg\"\n                          id=\"email\"\n                          placeholder=\"Seu e-mail de cadastro\">\n                      </div>\n                    <button type=\"button\" (click)=\"buscarDadosUser()\" class=\"btn btn-primary block\">Buscar Cadastro Usuário</button>\n                </form>\n                </div>\n                <div id=\"tab-2\" class=\"tab-pane\">\n                  <div *ngIf=\"ativado2\">\n                    <h3>Selecione o item que seja igual aos 5 primeiros digitos do seu CPF</h3>\n                    <mat-radio-group style=\"margin-top: 20px; margin-left: 30px;\" aria-label=\"Select an option\">\n                      <mat-radio-button\n                        *ngFor=\"let cpf of cpfArray\"\n                        #cpf5User\n                        (click)=\"validaCpfOuAnoNascimento(cpf5User.value, 1)\"\n                        [value]=\"cpf.value\"\n                      >\n                        {{ cpf.codigo }}\n\n                      </mat-radio-button>\n                    </mat-radio-group>\n                    <br>\n                    <button style=\"margin-top: 20px;\" (click)=\"ativarDesativaraba(3)\" class=\"btn btn-primary\">Próximo</button>\n                  </div>\n                  <h1 *ngIf=\"!ativado2\">Necessário preenchimento do e-mail</h1>\n                </div>\n                <div id=\"tab-3\" class=\"tab-pane\">\n                  <div *ngIf=\"ativado3\">\n                    <h3>Selecione o ano de nascimento</h3>\n\n                    <mat-radio-group style=\"margin-top: 30px;\" aria-label=\"Select an option\">\n                      <mat-radio-button\n                        *ngFor=\"let ano of anoNascimentoArray\"\n                        #anoNascimentoUser\n                        (click)=\"validaCpfOuAnoNascimento(anoNascimentoUser.value, 2)\"\n                        [value]=\"ano.value\"\n                      >\n                        {{ ano.codigo }}\n                      </mat-radio-button>\n                    </mat-radio-group>\n                    <br>\n                    <button style=\"margin-top: 20px;\" (click)=\"ativarDesativaraba(4)\" class=\"btn btn-primary\">Próximo</button>\n                  </div>\n                  <h1 *ngIf=\"!ativado3\">Necessário preenchimento do e-mail e CPF</h1>\n\n                </div>\n                <div id=\"tab-4\" class=\"tab-pane\">\n                  <button *ngIf=\"ativado4\" style=\"margin-top: 20px;\" class=\"btn btn-primary block full-width m-b\" (click)=\"enviarEmail()\">Resetar Senha</button>\n                  <h1 *ngIf=\"!ativado4\">Necessário preenchimento do e-mail, CPF e Data de Nascimento</h1>\n                </div>\n            </div>\n        </div>\n        <br>\n        <a href=\"/login\"><small>Voltar para tela de login</small></a>\n      </div>\n    </div>\n  </div>\n</div>\n","export * from './forgot.component';\n","export * from './login';\nexport * from './forgot';\nexport * from './autenticacao.component';\n","export * from './login.component';\n","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\n\nimport { NgxSpinnerService } from 'ngx-spinner';\n\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  Login,\n  LoginService,\n  ErroGeral,\n  ErroDTO,\n  UserLoggedService,\n  StorangeService,\n  TokenUser,\n  PerfilPermissaoService,\n  UsuarioService,\n} from 'src/app/modules/shared';\n\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  login = {} as Login;\n\n  erroGeral = {} as ErroGeral;\n\n  erroDTO: ErroDTO;\n\n  form: FormGroup;\n\n  localTokenUser = {} as TokenUser;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private loginService: LoginService,\n    private usuarioService: UsuarioService,\n    private storangeService: StorangeService,\n    private ppService: PerfilPermissaoService,\n    private userLoggedService: UserLoggedService,\n    private toast: ToastrService,\n    private spinner: NgxSpinnerService,\n  ) {}\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  ngOnInit(): void {\n    this.criarForm();\n    this.verificaUserLogged();\n  }\n\n  verificaUserLogged(): void {\n    const logado = this.userLoggedService.userLogged();\n\n    if (logado) {\n      this.router.navigate(['/dashboard']);\n    }\n  }\n\n  criarForm(): void {\n    this.form = this.fb.group({\n      login: ['', [Validators.required, Validators.email]],\n      senha: ['', [Validators.required, Validators.minLength(6)]],\n    });\n  }\n\n  logar(): void {\n    this.spinner.show();\n    if (this.form.invalid) {\n      this.toast.error(\n        'Preechimento inválido do formularios de login',\n        'Erro ao ler dados',\n        { timeOut: 3000 },\n      );\n      this.spinner.hide();\n      return;\n    }\n\n    this.login = this.form.value;\n    this.subscriptions.push(\n      this.loginService.logar(this.login).subscribe(\n        (data) => {\n          const token = data.headers.get('Authorization');\n          this.loginService.successLogin(token);\n          this.localTokenUser = this.storangeService.getLocalTokenUser();\n          this.carregarDadosUserLoggado();\n        },\n        (err) => {\n          this.erroGeral = err.error;\n          this.spinner.hide();\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { timeOut: 4000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  carregarDadosUserLoggado(): void {\n    this.usuarioService.getUserByEmail(this.localTokenUser.email).subscribe(\n      (data) => {\n        if (data.status === 1) {\n          this.storangeService.setLocalUser(data);\n          this.carregaPerfilPermissoesLocalStorange();\n        } else {\n          this.spinner.hide();\n          this.toast.error('Usuario Desativado', 'Erro', {\n            timeOut: 4000,\n          });\n        }\n      },\n\n      (err) => console.log(err),\n    );\n  }\n\n  refresh(): void {\n    window.location.reload();\n  }\n\n  carregaPerfilPermissoesLocalStorange(): void {\n    this.ppService.getAll().subscribe((data) => {\n      this.storangeService.setLocalPP(data);\n      this.spinner.hide();\n      this.refresh();\n    });\n  }\n}\n","<ngx-spinner color = \"#fff\" [fullScreen] = \"true\" type=\"ball-clip-rotate-multiple\" >\n  <h1 style=\"color: aliceblue;\">\n    Logando...\n  </h1>\n</ngx-spinner>\n<div class=\"body\">\n  <div class=\"middle-box text-center loginscreen animated fadeInDown\">\n    <div>\n        <div>\n            <h1 class=\"logo-name\">CCOS</h1>\n        </div>\n        <h3>Bem-Vindo ao CCOS</h3>\n\n        <p>Informe seu e-mail e senha para acesso!</p>\n        <form [formGroup]=\"form\" novalidate>\n            <div class=\"form-group\">\n                <input\n                  type=\"email\"\n                  formControlName=\"login\"\n                  class=\"form-control input-underline input-lg\"\n                  id=\"email\"\n                  placeholder=\"Nome de usuário\">\n              </div>\n            <div class=\"form-group\">\n              <input type=\"password\" formControlName=\"senha\" class=\"form-control input-underline input-lg\" id=\"senha\" placeholder=\"Senha\">\n            </div>\n            <button type=\"button\" (click)=\"logar()\" class=\"btn btn-primary block full-width m-b\">Logar</button>\n\n            <a href=\"/login/forgot\"><small>Esqueci minha senha?</small></a>\n        </form>\n\n  <script src=\"../../../../../../assets/js/jquery-3.1.1.min.js\"></script>\n  <script src=\"../../../../../../assets/js/bootstrap.min.js\"></script>\n</div>\n","export * from './login-routing.module';\nexport * from './login.module';\n","import { NgModule } from '@angular/core';\n\nimport { RouterModule, Routes } from '@angular/router';\n\nimport {\n  LoginComponent,\n  ForgotComponent,\n  AutenticacaoComponent,\n} from './components';\n\nexport const LoginRoutes: Routes = [\n  {\n    path: 'login',\n    component: AutenticacaoComponent,\n    children: [\n      { path: '', component: LoginComponent },\n      { path: 'forgot', component: ForgotComponent },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(LoginRoutes)],\n\n  exports: [RouterModule],\n})\nexport class LoginRoutingModule {}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport {\n  LoginComponent,\n  ForgotComponent,\n  AutenticacaoComponent,\n} from './components';\n\nimport { SharedModule } from '../../shared';\n\n@NgModule({\n  declarations: [LoginComponent, ForgotComponent, AutenticacaoComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    SharedModule,\n    NgxSpinnerModule,\n    MatSnackBarModule,\n    MatRadioModule,\n    MatProgressSpinnerModule,\n    RouterModule,\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class LoginModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\nimport {\n  AtualizarComponent,\n  CadastrarComponent,\n  ListarComponent,\n  ClientComponent,\n} from './components';\nimport { MenuModule, SharedModule } from '../../shared';\n\n@NgModule({\n  declarations: [\n    AtualizarComponent,\n    CadastrarComponent,\n    ListarComponent,\n    ClientComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule,\n    NgxSpinnerModule,\n    SharedModule,\n    MenuModule,\n  ],\n})\nexport class ClienteModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport {\n  ClienteService,\n  Cliente,\n  ErroDTO,\n  ErroGeral,\n} from 'src/app/modules/shared';\nimport { Subscription } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-atualizar',\n  templateUrl: './atualizar.component.html',\n  styleUrls: ['./atualizar.component.css'],\n})\nexport class AtualizarComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  erroGeral = {} as ErroGeral;\n\n  erroDTO = {} as ErroDTO;\n\n  cliente = {} as Cliente;\n\n  clienteNovo = {} as Cliente;\n\n  form: FormGroup;\n\n  clienteId: string;\n\n  constructor(\n    private fb: FormBuilder,\n    private spinner: NgxSpinnerService,\n    private route: ActivatedRoute,\n    private clienteService: ClienteService,\n    private toast: ToastrService,\n  ) {}\n\n  ngOnInit(): void {\n    this.criarForm();\n    this.clienteId = this.route.snapshot.paramMap.get('clienteid');\n    this.carregaDadosCliente();\n  }\n\n  carregaDadosCliente(): void {\n    this.subscriptions.push(\n      this.clienteService.findById(Number(this.clienteId)).subscribe(\n        (data) => {\n          this.cliente = data;\n          this.populandoFomulario();\n        },\n        (err) => console.log(err),\n      ),\n    );\n  }\n\n  criarForm(): void {\n    this.form = this.fb.group({\n      codigoSupergas: ['', Validators.required],\n      nome: ['', Validators.required],\n      cnpj: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      telefone: ['', Validators.required],\n      observacoes: ['', Validators.required],\n    });\n  }\n\n  atualizarrCliente(): void {\n    this.spinner.show();\n\n    if (this.form.invalid) {\n      this.spinner.hide();\n      this.toast.error('Formulário com campos invalidos', 'Erro!', {\n        timeOut: 4000,\n      });\n      this.toucheCamposFormulario();\n      return;\n    }\n\n    this.clienteNovo = this.form.value;\n    this.clienteNovo.id = Number(this.clienteId);\n\n    this.subscriptions.push(\n      this.clienteService.update(this.clienteNovo).subscribe(\n        (data) => {\n          const msg = 'Cliente atualizado com sucesso!';\n          this.spinner.hide();\n\n          Swal.fire({\n            title: msg,\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 3000,\n          });\n          setTimeout(() => {\n            this.refresh();\n          }, 2900);\n        },\n        (err) => console.log(err),\n      ),\n    );\n    this.spinner.hide();\n  }\n\n  toucheCamposFormulario(): void {\n    this.form.get('codigoSupergas').markAsTouched();\n    this.form.get('nome').markAsTouched();\n    this.form.get('cnpj').markAsTouched();\n    this.form.get('email').markAsTouched();\n    this.form.get('telefone').markAsTouched();\n    this.form.get('observacoes').markAsTouched();\n  }\n\n  populandoFomulario(): void {\n    this.form.patchValue({\n      codigoSupergas: this.cliente.codigoSupergas,\n      nome: this.cliente.nome,\n      cnpj: this.cliente.cnpj,\n      telefone: this.cliente.telefone,\n      observacoes: this.cliente.observacoes,\n      email: this.cliente.email,\n    });\n  }\n\n  refresh(): void {\n    window.location.reload();\n  }\n}\n","<ngx-spinner color = \"#fff\" [fullScreen] = \"true\" type=\"ball-clip-rotate-multiple\" >\n  <h1 style=\"color: aliceblue;\">\n    Cadastrando...\n  </h1>\n</ngx-spinner>\n<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n\n      <div class=\"wrapper wrapper-content animated fadeInRight\">\n          <div class=\"row\">\n              <div class=\"col-lg-12\">\n                  <div class=\"ibox float-e-margins\">\n                      <div class=\"ibox-title\">\n                          <h5>Formulário para preenchimento &nbsp;&nbsp;<b class=\"text-danger\"><i class='fa fa-exclamation'></i> Campos obrigatórios</b></h5>\n                          <div class=\"ibox-tools\">\n                              <a class=\"collapse-link\">\n                                  <i class=\"fa fa-chevron-up\"></i>\n                              </a>\n                          </div>\n                      </div>\n                      <div class=\"ibox-content\">\n\n\n                        <form class=\"form-horizontal\" [formGroup]=\"form\" novalidate>\n                          <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Cod. Supergas <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\">\n                                  <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-vcard'></i></span>\n                                      <input type=\"text\" class=\"form-control\" formControlName=\"codigoSupergas\" name=\"codigoSupergas\" required></div>\n                                      <small *ngIf=\"form.get('codigoSupergas').valid && form.get('codigoSupergas').touched\" class=\"form-text text-success\" >ok</small>\n                                      <small *ngIf=\"!form.get('codigoSupergas').valid && form.get('codigoSupergas').touched\"class=\"form-text text-danger\" >Campo Cod. Supergas requerido</small>\n                              </div>\n                          </div>\n\n                          <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Nome <i class='fa fa-exclamation text-danger'></i></label>\n                            <div class=\"col-sm-10\">\n                                <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-vcard'></i></span>\n                                    <input type=\"text\" class=\"form-control\" formControlName=\"nome\" name=\"nome\" required></div>\n                                    <small *ngIf=\"form.get('nome').valid && form.get('nome').touched\" class=\"form-text text-success\" >ok</small>\n                                    <small *ngIf=\"!form.get('nome').valid && form.get('nome').touched\"class=\"form-text text-danger\" >Campo nome requerido</small>\n                            </div>\n                          </div>\n\n                          <div class=\"form-group\"><label class=\"col-sm-2 control-label\">CPNJ <i class='fa fa-exclamation text-danger'></i></label>\n                            <div class=\"col-sm-10\">\n                                <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-vcard'></i></span>\n                                    <input type=\"text\" formControlName=\"cnpj\" class=\"form-control\" name=\"cnpj\" mascara=\"99.999.999/9999-99\" required></div>\n                                    <small *ngIf=\"form.get('cnpj').valid && form.get('cnpj').touched\" class=\"form-text text-success\" >ok</small>\n                                    <small *ngIf=\"!form.get('cnpj').valid && form.get('cnpj').touched\"class=\"form-text text-danger\" >Campo CPNJ requerido</small>\n                            </div>\n                          </div>\n\n                          <div class=\"form-group\"><label class=\"col-sm-2 control-label\">E-mail <i class='fa fa-exclamation text-danger'></i></label>\n                            <div class=\"col-sm-10\">\n                                <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-at'></i></span>\n                                    <input type=\"email\" class=\"form-control\" formControlName=\"email\" name=\"email\" required></div>\n                                    <small *ngIf=\"form.get('email').valid && form.get('email').touched\" class=\"form-text text-success\" >ok</small>\n                                    <small *ngIf=\"!form.get('email').valid && form.get('email').touched\"class=\"form-text text-danger\" >Campo e-mail requerido</small>\n                            </div>\n                          </div>\n\n                          <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Telefone </label>\n                            <div class=\"col-sm-10\">\n                                <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-tty'></i></span>\n                                    <input type=\"text\" formControlName=\"telefone\" class=\"form-control\" name=\"telefone\" mascara=\"(99) 99999-9999\" required></div>\n                                    <small *ngIf=\"form.get('telefone').valid && form.get('telefone').touched\" class=\"form-text text-success\" >ok</small>\n                                    <small *ngIf=\"!form.get('telefone').valid && form.get('telefone').touched\"class=\"form-text text-danger\" >Campo Telefone requerido</small>\n                            </div>\n                          </div>\n\n                          <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Observações <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\">\n                                  <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-id-card'></i></span>\n                                      <textarea class=\"form-control\" rows=\"5\" cols=\"1\" formControlName=\"observacoes\" name=\"observacoes\" required></textarea>\n                                      <small *ngIf=\"form.get('observacoes').valid && form.get('observacoes').touched\" class=\"form-text text-success\" >ok</small>\n                                      <small *ngIf=\"!form.get('observacoes').valid && form.get('observacoes').touched\"class=\"form-text text-danger\" >Campo observações requerido</small>\n                                  </div>\n                              </div>\n                          </div>\n\n                              <div class=\"hr-line-dashed\"></div>\n                              <div class=\"form-group\">\n                                  <div class=\"col-sm-4 col-sm-offset-2\">\n                                      <button class=\"btn btn-w-m btn-warning\" style=\"margin-right: 20px;\" type=\"reset\"><i class=\"fa fa-close\"></i> Limpar</button>\n                                      <button class=\"btn btn-w-m btn-primary\" type=\"button\" (click)=\"atualizarrCliente()\"><i class=\"fa fa-check\"></i> Atualizar</button>\n                                  </div>\n                              </div>\n                          </form>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n    </div>\n</div>\n","export * from './atualizar.component';\n","import { Component, OnInit } from '@angular/core';\nimport {\n  Cliente,\n  ClienteService,\n  ErroGeral,\n  ErroDTO,\n  Estado,\n  Cidade,\n  EnderecoService,\n  NewClienteDTO,\n} from 'src/app/modules/shared';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { ToastrService } from 'ngx-toastr';\nimport { Subscription } from 'rxjs';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-cadastrar',\n  templateUrl: './cadastrar.component.html',\n  styleUrls: ['./cadastrar.component.css'],\n})\nexport class CadastrarComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  erroGeral = {} as ErroGeral;\n\n  erroDTO = {} as ErroDTO;\n\n  newClienteDTO = {} as NewClienteDTO;\n\n  estados: Estado[];\n\n  cidades: Cidade[];\n\n  form: FormGroup;\n\n  mostrarCidade = false;\n\n  mostrarEndereco = false;\n\n  idCidade = null;\n\n  constructor(\n    private fb: FormBuilder,\n    private spinner: NgxSpinnerService,\n    private clienteService: ClienteService,\n    private enderecoService: EnderecoService,\n    private toast: ToastrService,\n  ) {}\n\n  ngOnInit(): void {\n    this.criarForm();\n    this.carregaEstados();\n  }\n\n  criarForm(): void {\n    this.form = this.fb.group({\n      codigoSupergas: ['', Validators.required],\n      nome: ['', Validators.required],\n      cnpj: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      telefone: ['', Validators.required],\n      observacoes: ['', Validators.required],\n      estado: ['', Validators.required],\n      cidade: ['', Validators.required],\n      cep: ['', Validators.required],\n      logradouro: ['', Validators.required],\n      numero: ['', Validators.required],\n      bairro: [''],\n      complemento: [''],\n    });\n\n    this.form.patchValue({ observacoes: 'Sem Observações' });\n  }\n\n  carregaEstados(): void {\n    this.subscriptions.push(\n      this.enderecoService.getAllEstados().subscribe(\n        (data) => {\n          this.estados = data;\n        },\n        (err) => console.log(err),\n      ),\n    );\n  }\n\n  estadoSelecionado(id: number): void {\n    if (Number(id) === 100) {\n      this.mostrarCidade = false;\n      this.mostrarEndereco = false;\n      return;\n    }\n    this.carregaCidades(id);\n    this.mostrarCidade = true;\n    console.log(id);\n  }\n\n  cidadeSelecionada(id: number): void {\n    if (Number(id) === 100) {\n      this.mostrarEndereco = false;\n      return;\n    }\n    this.idCidade = id;\n    this.mostrarEndereco = true;\n  }\n\n  carregaCidades(id: number): void {\n    this.subscriptions.push(\n      this.enderecoService.getAllEstadoCidades(id).subscribe(\n        (data) => {\n          this.cidades = data;\n        },\n        (err) => console.log(err),\n      ),\n    );\n  }\n\n  cadastrarCliente(): void {\n    this.spinner.show();\n\n    if (this.form.invalid) {\n      this.spinner.hide();\n      this.toast.error('Formulário com campos invalidos', 'Erro!', {\n        timeOut: 4000,\n      });\n      return;\n    }\n\n    this.newClienteDTO = this.form.value;\n    this.newClienteDTO.cidadeId = Number(this.form.get('cidade').value);\n\n    this.subscriptions.push(\n      this.clienteService.insert(this.newClienteDTO).subscribe(\n        (data) => {\n          const msg = 'Cliente cadastrado com sucesso!';\n          this.spinner.hide();\n          Swal.fire({\n            title: msg,\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n          setTimeout(() => {\n            this.refresh();\n          }, 1900);\n        },\n        (err) => console.log(err),\n      ),\n    );\n    this.spinner.hide();\n  }\n\n  refresh(): void {\n    window.location.reload();\n  }\n}\n","<ngx-spinner color = \"#fff\" [fullScreen] = \"true\" type=\"ball-clip-rotate-multiple\" >\n  <h1 style=\"color: aliceblue;\">\n    Cadastrando...\n  </h1>\n</ngx-spinner>\n<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n\n      <div class=\"wrapper wrapper-content animated fadeInRight\">\n          <div class=\"row\">\n              <div class=\"col-lg-12\">\n                  <div class=\"ibox float-e-margins\">\n                      <div class=\"ibox-title\">\n                          <h5>Formulário para preenchimento &nbsp;&nbsp;<b class=\"text-danger\"><i class='fa fa-exclamation'></i> Campos obrigatórios</b></h5>\n                          <div class=\"ibox-tools\">\n                              <a class=\"collapse-link\">\n                                  <i class=\"fa fa-chevron-up\"></i>\n                              </a>\n                          </div>\n                      </div>\n                      <div class=\"ibox-content\">\n\n                          <form class=\"form-horizontal\" [formGroup]=\"form\" novalidate>\n                              <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Cod. Supergas <i class='fa fa-exclamation text-danger'></i></label>\n                                  <div class=\"col-sm-10\">\n                                      <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-vcard'></i></span>\n                                          <input type=\"text\" class=\"form-control\" formControlName=\"codigoSupergas\" name=\"codigoSupergas\" required></div>\n                                          <small *ngIf=\"form.get('codigoSupergas').valid && form.get('codigoSupergas').touched\" class=\"form-text text-success\" >ok</small>\n                                          <small *ngIf=\"!form.get('codigoSupergas').valid && form.get('codigoSupergas').touched\"class=\"form-text text-danger\" >Campo Cod. Supergas requerido</small>\n                                  </div>\n                              </div>\n\n                              <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Nome <i class='fa fa-exclamation text-danger'></i></label>\n                                <div class=\"col-sm-10\">\n                                    <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-vcard'></i></span>\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"nome\" name=\"nome\" required></div>\n                                        <small *ngIf=\"form.get('nome').valid && form.get('nome').touched\" class=\"form-text text-success\" >ok</small>\n                                        <small *ngIf=\"!form.get('nome').valid && form.get('nome').touched\"class=\"form-text text-danger\" >Campo nome requerido</small>\n                                </div>\n                              </div>\n\n                              <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Endereço <i class='fa fa-exclamation text-danger'></i></label>\n\n                                <div class=\"col-sm-10\">\n                                  <div class=\"col-sm-12 b-r\">\n                                      <div>\n                                        <div class=\"col-sm-6\">\n                                          <select class=\"form-control m-b\" value=\"100\" formControlName=\"estado\" name=\"estado\" required (change)=\"estadoSelecionado($event.target.value)\">\n                                              <option value=\"100\">Selecione o Estado</option>\n                                              <option *ngFor=\"let estado of estados\" value={{estado.id}}> {{ estado.nome }} </option>\n                                          </select>\n                                            <small *ngIf=\"!form.get('estado').valid && form.get('estado').touched\"class=\"form-text text-danger\" >Campo estado requerido</small>\n                                        </div>\n                                        <div class=\"col-sm-6\" *ngIf=\"mostrarCidade\">\n                                          <select class=\"form-control m-b\" formControlName=\"cidade\" name=\"cidade\" required (change)=\"cidadeSelecionada($event.target.value)\">\n                                              <option value=100>Selecione a Cidade</option>\n                                              <option *ngFor=\"let cidade of cidades\" value={{cidade.id}}>{{ cidade.nome }}</option>\n                                          </select>\n                                          <small *ngIf=\"!form.get('cidade').valid && form.get('cidade').touched\"class=\"form-text text-danger\" >Campo cidade requerido</small>\n\n                                        </div>\n                                        <div class=\"col-sm-6\" *ngIf=\"mostrarEndereco\">\n                                          <input type=\"text\" style=\"margin-bottom: 20px;\" formControlName=\"cep\" required class=\"form-control\" name=\"cep\" id=\"cep\" placeholder=\"cep\">\n                                          <small *ngIf=\"!form.get('cep').valid && form.get('cep').touched\" class=\"form-text text-danger\" >Campo cep requerido</small>\n                                        </div>\n                                        <div class=\"col-sm-6\" *ngIf=\"mostrarEndereco\">\n                                          <input type=\"text\" style=\"margin-bottom: 20px;\" formControlName=\"logradouro\" required class=\"form-control\" name=\"logradouro\" id=\"logradouro\" placeholder=\"logradouro\">\n                                          <small *ngIf=\"!form.get('logradouro').valid && form.get('logradouro').touched\"class=\"form-text text-danger\" >Campo logradouro requerido</small>\n                                        </div>\n                                        <div class=\"col-sm-6\" *ngIf=\"mostrarEndereco\">\n                                          <input type=\"text\" style=\"margin-bottom: 20px;\" formControlName=\"numero\" required class=\"form-control\" name=\"numero\" id=\"numero\" placeholder=\"numero\">\n                                          <small *ngIf=\"!form.get('numero').valid && form.get('numero').touched\"class=\"form-text text-danger\" >Campo numero requerido</small>\n                                        </div>\n                                        <div class=\"col-sm-6\" *ngIf=\"mostrarEndereco\">\n                                          <input type=\"text\" style=\"margin-bottom: 20px;\" formControlName=\"complemento\" class=\"form-control\" name=\"complemento\" id=\"complemento\" placeholder=\"complemento\">\n                                        </div>\n                                        <div class=\"col-sm-6\" *ngIf=\"mostrarEndereco\">\n                                          <input type=\"text\" style=\"margin-bottom: 20px;\" formControlName=\"bairro\" class=\"form-control\" name=\"bairro\" id=\"bairro\" placeholder=\"bairro\">\n                                        </div>\n                                    </div>\n                                  </div>\n\n                                </div>\n                              </div>\n\n                              <div class=\"form-group\"><label class=\"col-sm-2 control-label\">CPNJ <i class='fa fa-exclamation text-danger'></i></label>\n                                <div class=\"col-sm-10\">\n                                    <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-vcard'></i></span>\n                                        <input type=\"text\" formControlName=\"cnpj\" class=\"form-control\" name=\"cnpj\" mascara=\"99.999.999/9999-99\" required></div>\n                                        <small *ngIf=\"form.get('cnpj').valid && form.get('cnpj').touched\" class=\"form-text text-success\" >ok</small>\n                                        <small *ngIf=\"!form.get('cnpj').valid && form.get('cnpj').touched\"class=\"form-text text-danger\" >Campo CPNJ requerido</small>\n                                </div>\n                              </div>\n\n                              <div class=\"form-group\"><label class=\"col-sm-2 control-label\">E-mail <i class='fa fa-exclamation text-danger'></i></label>\n                                <div class=\"col-sm-10\">\n                                    <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-at'></i></span>\n                                        <input type=\"email\" class=\"form-control\" formControlName=\"email\" name=\"email\" required></div>\n                                        <small *ngIf=\"form.get('email').valid && form.get('email').touched\" class=\"form-text text-success\" >ok</small>\n                                        <small *ngIf=\"!form.get('email').valid && form.get('email').touched\"class=\"form-text text-danger\" >Campo e-mail requerido</small>\n                                </div>\n                              </div>\n\n                              <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Telefone </label>\n                                <div class=\"col-sm-10\">\n                                    <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-tty'></i></span>\n                                        <input type=\"text\" formControlName=\"telefone\" class=\"form-control\" name=\"telefone\" required></div>\n                                        <small *ngIf=\"form.get('telefone').valid && form.get('telefone').touched\" class=\"form-text text-success\" >ok</small>\n                                        <small *ngIf=\"!form.get('telefone').valid && form.get('telefone').touched\"class=\"form-text text-danger\" >Campo Telefone requerido</small>\n                                </div>\n                              </div>\n\n                              <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Observações <i class='fa fa-exclamation text-danger'></i></label>\n                                  <div class=\"col-sm-10\">\n                                      <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-id-card'></i></span>\n                                          <textarea class=\"form-control\" rows=\"5\" cols=\"1\" formControlName=\"observacoes\" name=\"observacoes\" required></textarea>\n                                          <small *ngIf=\"form.get('observacoes').valid && form.get('observacoes').touched\" class=\"form-text text-success\" >ok</small>\n                                          <small *ngIf=\"!form.get('observacoes').valid && form.get('observacoes').touched\"class=\"form-text text-danger\" >Campo observações requerido</small>\n                                      </div>\n                                  </div>\n                              </div>\n\n                              <div class=\"hr-line-dashed\"></div>\n                              <div class=\"form-group\">\n                                  <div class=\"col-sm-4 col-sm-offset-2\">\n                                      <button class=\"btn btn-w-m btn-warning\" style=\"margin-right: 20px;\" type=\"reset\"><i class=\"fa fa-close\"></i> Limpar</button>\n                                      <button class=\"btn btn-w-m btn-primary\" type=\"button\" (click)=\"cadastrarCliente()\"><i class=\"fa fa-check\"></i> Cadastrar</button>\n                                  </div>\n                              </div>\n                          </form>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n    </div>\n</div>\n","export * from './cadastrar.component';\n","import { Component } from '@angular/core';\n\n@Component({ template: `<router-outlet></router-outlet>` })\nexport class ClientComponent {}\n","export * from './atualizar';\nexport * from './cadastrar';\nexport * from './listar';\nexport * from './clinet.component';\n","export * from './listar.component';\n","import { Component, OnInit } from '@angular/core';\nimport { Cliente, ClienteService } from 'src/app/modules/shared';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-listar',\n  templateUrl: './listar.component.html',\n  styleUrls: ['./listar.component.css'],\n})\nexport class ListarComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  clientes: Cliente[] = [];\n\n  clientesFiltrados: Cliente[] = [];\n\n  constructor(private clienteService: ClienteService) {}\n\n  ngOnInit(): void {\n    this.carregaDadosclientes();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  carregaDadosclientes(): void {\n    this.subscriptions.push(\n      this.clienteService.getAll().subscribe(\n        (data) => {\n          this.clientes = data;\n          this.clientesFiltrados = this.clientes;\n        },\n        (err) => console.log(err),\n      ),\n    );\n  }\n\n  filtraClientePeloNome(nome: string): void {\n    if (!nome) {\n      this.clientesFiltrados = this.clientes;\n    } else {\n      this.clientesFiltrados = this.clientes.filter((x) =>\n        x.nome.trim().toLowerCase().includes(nome.trim().toLowerCase()),\n      );\n    }\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n\n      <div class=\"wrapper wrapper-content animated fadeInRight\">\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <div class=\"ibox float-e-margins\">\n                    <div class=\"ibox-title\">\n                        <h5>Tabela de registros retornados da base de dados</h5>\n                        <div class=\"ibox-tools\">\n                            <a class=\"collapse-link\">\n                                <i class=\"fa fa-chevron-up\"></i>\n                            </a>\n                        </div>\n\n                    </div>\n                    <div class=\"ibox-content\">\n                      <input\n                          class=\"form-control mr-sm-2\"\n                          type=\"search\"\n                          placeholder=\"Busca cliente por nome\"\n                          aria-label=\"Search\"\n                          #termoPesquisa\n                          (keyup)=\"filtraClientePeloNome(termoPesquisa.value)\"\n                      >\n                    </div>\n                    <div class=\"ibox-content\">\n\n                        <div class=\"table-responsive\" *ngIf=\"this.clientes.length > 0\">\n                            <table class='table table-striped table-bordered table-hover dataTables-example'>\n                              <thead>\n                                <tr>\n                                <th>Código Supergas</th>\n                                <th>Nome</th>\n                                <th>Endereço</th>\n                                <th>CNPJ</th>\n                                <th>E-mail</th>\n                                <th>Telefone</th>\n                                <th>Observações</th>\n                                <th>Ação</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr class='gradeX' *ngFor=\"let item of clientesFiltrados\">\n                                  <td> {{ item.codigoSupergas }} </td>\n                                  <td> {{ item.nome }} </td>\n                                  <td *ngIf=\"(item.enderecos | json) != ({} | json)\"><p *ngFor=\"let end of item.enderecos\">{{ end.bairro }} {{ end.logradouro }} {{end.numero}} {{ end.cidade.nome }}-{{end.cidade.estado.uf}}</p></td>\n                                  <td> {{ item.cnpj }} </td>\n                                  <td> {{ item.email }} </td>\n                                  <td> {{ item.telefone }} </td>\n                                  <td> {{ item.observacoes }} </td>\n                                  <td>\n                                    <a href=\"/cliente/atualizar/{{item.id}}\">\n                                      <Button class=\"btn btn-outline btn-primary\" style=\"margin-right: 5px;\">Editar</Button>\n                                    </a>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                        </div>\n                        <h2 *ngIf=\"this.clientes.length <= 0\">\n                          Nenhum cliente cadastrado <br>\n                          <a href=\"/cliente/cadastrar\">\n                            <Button class=\"btn btn-outline btn-primary\" style=\"margin-top: 25px;\">Cadastrar Novo Cliente</Button>\n                          </a>\n                        </h2>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    </div>\n</div>\n","export * from './cliente.module';\nexport * from './router-client.module';\n","import { NgModule } from '@angular/core';\n\nimport { RouterModule, Routes } from '@angular/router';\nimport {\n  AtualizarComponent,\n  CadastrarComponent,\n  ListarComponent,\n  ClientComponent,\n} from './components';\nimport { AuthGuardService, AutenticaRotaSerivce } from '../../shared';\n\nexport const ClientRoutes: Routes = [\n  {\n    path: 'cliente',\n    component: ClientComponent,\n    canActivate: [AuthGuardService],\n\n    children: [\n      {\n        path: 'pesquisar',\n        component: ListarComponent,\n        canActivate: [AutenticaRotaSerivce],\n      },\n      {\n        path: 'cadastrar',\n        component: CadastrarComponent,\n        canActivate: [AutenticaRotaSerivce],\n      },\n      {\n        path: 'atualizar/:clienteid',\n        component: AtualizarComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(ClientRoutes)],\n\n  exports: [RouterModule],\n})\nexport class ClientRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport {\n  UnidadeGrupoServico,\n  ErroGeral,\n  ErroDTO,\n  GrupoServico,\n  UnidadeGrupoServicoService,\n  GrupoServicoService,\n} from 'src/app/modules/shared';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport Swal from 'sweetalert2';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-atualizar',\n  templateUrl: './atualizar.component.html',\n  styleUrls: ['./atualizar.component.css'],\n})\nexport class AtualizarComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  unidadeGrupoServicos: UnidadeGrupoServico[] = [];\n\n  unidadeGrupoServico = {} as UnidadeGrupoServico;\n\n  erroGeral = {} as ErroGeral;\n\n  erroDTO = {} as ErroDTO;\n\n  form: FormGroup;\n\n  grupoServico: GrupoServico;\n\n  grupoServicoId: string;\n\n  constructor(\n    private uGSService: UnidadeGrupoServicoService,\n    private toast: ToastrService,\n    private route: ActivatedRoute,\n    private fb: FormBuilder,\n    private grupoServicoService: GrupoServicoService,\n  ) {}\n\n  ngOnInit(): void {\n    this.grupoServicoId = this.route.snapshot.paramMap.get('gsid');\n    this.criarForm();\n    this.carregaDadosUGS();\n    this.carregaDadosGrupoServico();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  criarForm(): void {\n    this.form = this.fb.group({\n      codigoSapItem: ['', Validators.required],\n      descSapItem: ['', Validators.required],\n      valorUnitario: ['', Validators.required],\n      unidadeGrupoServico: ['', Validators.required],\n      descServico: ['', Validators.required],\n    });\n  }\n\n  carregaDadosGrupoServico(): void {\n    this.subscriptions.push(\n      this.grupoServicoService.findById(Number(this.grupoServicoId)).subscribe(\n        (data) => {\n          this.grupoServico = data;\n          this.populandoFomulario();\n        },\n        (err) => console.log(err),\n      ),\n    );\n  }\n\n  carregaDadosUGS(): void {\n    this.subscriptions.push(\n      this.uGSService.getAll().subscribe(\n        (data) => {\n          this.unidadeGrupoServicos = data;\n        },\n        (err) => console.log(err),\n      ),\n    );\n  }\n\n  atualizarGrupoServico(): void {\n    if (this.form.invalid) {\n      this.toast.error('Formulário com campos invalidos', 'Erro!', {\n        timeOut: 4000,\n      });\n      this.toucheCamposFormulario();\n      return;\n    }\n\n    this.grupoServico = this.form.value;\n    const unidadeGrupoServicoId = Number(\n      this.form.get('unidadeGrupoServico').value,\n    );\n\n    this.grupoServico.unidadeGrupoServico = this.unidadeGrupoServicos.find(\n      (x) => x.id === unidadeGrupoServicoId,\n    );\n    this.grupoServico.id = Number(this.grupoServicoId);\n    this.subscriptions.push(\n      this.grupoServicoService.update(this.grupoServico).subscribe(\n        (data) => {\n          const msg = 'Grupo de serviço atualizado com sucesso!';\n\n          Swal.fire({\n            title: msg,\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n          setTimeout(() => {\n            this.refresh();\n          }, 1900);\n        },\n        (err) => console.log(err),\n      ),\n    );\n  }\n\n  toucheCamposFormulario(): void {\n    this.form.get('codigoSapItem').markAsTouched();\n    this.form.get('descSapitem').markAsTouched();\n    this.form.get('valorUnitario').markAsTouched();\n    this.form.get('unidadeGrupoServico').markAsTouched();\n    this.form.get('servico').markAsTouched();\n  }\n\n  populandoFomulario(): void {\n    this.form.patchValue({\n      codigoSapItem: this.grupoServico.codigoSapItem,\n      descSapitem: this.grupoServico.descSapItem,\n      valorUnitario: this.grupoServico.valorUnitario,\n      unidadeGrupoServico: this.grupoServico.unidadeGrupoServico.id,\n    });\n  }\n\n  refresh(): void {\n    window.location.reload();\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n        <div class=\"wrapper wrapper-content animated fadeInRight\">\n          <div class=\"row\">\n              <div class=\"col-lg-12\">\n                  <div class=\"ibox float-e-margins\">\n                      <div class=\"ibox-title\">\n                          <h5>Formulário para preenchimento &nbsp;&nbsp;<b class=\"text-danger\"><i class='fa fa-exclamation'></i> Campos obrigatórios</b></h5>\n                          <div class=\"ibox-tools\">\n                              <a class=\"collapse-link\">\n                                  <i class=\"fa fa-chevron-up\"></i>\n                              </a>\n                          </div>\n                      </div>\n                      <div class=\"ibox-content\">\n\n                        <form class=\"form-horizontal\" [formGroup]=\"form\" novalidate>\n                          <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Código Sap <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\">\n                                  <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-vcard'></i></span>\n                                      <input type=\"text\" class=\"form-control\" formControlName=\"codigoSapItem\" name=\"codigoSapItem\" required></div>\n                                      <small *ngIf=\"form.get('codigoSapItem').valid && form.get('codigoSapItem').touched\" class=\"form-text text-success\" >ok</small>\n                                      <small *ngIf=\"!form.get('codigoSapItem').valid && form.get('codigoSapItem').touched\"class=\"form-text text-danger\" >Campo código sap requerido</small>\n                              </div>\n                          </div>\n                          <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Descrição Sap <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\">\n                                  <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-id-card'></i></span>\n                                      <input type=\"text\" formControlName=\"descSapItem\" class=\"form-control\" name=\"descSapItem\" required></div>\n                                      <small *ngIf=\"form.get('descSapItem').valid && form.get('descSapItem').touched\" class=\"form-text text-success\" >ok</small>\n                                      <small *ngIf=\"!form.get('descSapItem').valid && form.get('descSapItem').touched\"class=\"form-text text-danger\" >Campo descrição sap requerido</small>\n                              </div>\n                          </div>\n\n                          <div class=\"form-group\" id=\"data_1\"><label class=\"col-sm-2 control-label\">Valor Unitário <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\">\n                                  <div class=\"input-group date m-b\">\n                                      <span class=\"input-group-addon\"><i class=\"fa fa-dollar\"></i></span>\n                                      <input type=\"text\" formControlName=\"valorUnitario\" class=\"form-control\" name=\"valorUnitario\" required>\n                                  </div>\n                                    <small *ngIf=\"form.get('valorUnitario').valid && form.get('valorUnitario').touched\" class=\"form-text text-success\" >ok</small>\n                                    <small *ngIf=\"!form.get('valorUnitario').valid && form.get('valorUnitario').touched\"class=\"form-text text-danger\" >Campo valor unitário requerido</small>\n\n                              </div>\n                          </div>\n\n                          <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Unidade G. Servico <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\">\n                                  <div class=\"col-lg-6 m-l-n\">\n                                      <select class='form-control' formControlName=\"unidadeGrupoServico\" name='unidadeGrupoServico' required>\n                                        <option *ngFor=\"let item of unidadeGrupoServicos\" value='{{ item.id }}'>{{ item.nome }}</option>\n                                      </select>\n                                      <small *ngIf=\"form.get('unidadeGrupoServico').valid && form.get('unidadeGrupoServico').touched\" class=\"form-text text-success\" >ok</small>\n                                      <small *ngIf=\"!form.get('unidadeGrupoServico').valid && form.get('unidadeGrupoServico').touched\"class=\"form-text text-danger\" >Campo unidade grupo servico requerido</small>\n                                  </div>\n                              </div>\n                          </div>\n                          <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Serviço desc.<i class='fa fa-exclamation text-danger'></i></label>\n                            <div class=\"col-sm-10\">\n                              <div class=\"input-group date m-b\">\n                                  <span class=\"input-group-addon\"><i class=\"fa fa-vcard\"></i></span>\n                                  <input type=\"text\" formControlName=\"descServico\" class=\"form-control\" name=\"descServico\" required>\n                              </div>\n                                <small *ngIf=\"form.get('descServico').valid && form.get('descServico').touched\" class=\"form-text text-success\" >ok</small>\n                                <small *ngIf=\"!form.get('descServico').valid && form.get('descServico').touched\"class=\"form-text text-danger\" >Campo descrição servico obrigatório</small>\n                            </div>\n                          </div>\n                          <div class=\"hr-line-dashed\"></div>\n                              <div class=\"form-group\">\n                                  <div class=\"col-sm-6 col-sm-offset-2\">\n                                      <button class=\"btn btn-w-m btn-warning\" type=\"reset\"><i class=\"fa fa-close\"></i> Limpar</button>\n                                      <button class=\"btn btn-w-m btn-primary\" type=\"button\" (click)=\"atualizarGrupoServico()\" style=\"margin-left: 20px;\"><i class=\"fa fa-check\"></i> Atualizar</button>\n                                  </div>\n                              </div>\n                          </form>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n    </div>\n</div>\n","export * from './atualizar.component';\n","import { Component, OnInit } from '@angular/core';\nimport {\n  UnidadeGrupoServicoService,\n  UnidadeGrupoServico,\n  GrupoServico,\n  ErroDTO,\n  ErroGeral,\n  GrupoServicoService,\n  TipoGrupoServicoService,\n  TipoGrupoServico,\n} from 'src/app/modules/shared';\nimport Swal from 'sweetalert2';\nimport { Subscription } from 'rxjs';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-cadastrar',\n  templateUrl: './cadastrar.component.html',\n  styleUrls: ['./cadastrar.component.css'],\n})\nexport class CadastrarComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  unidadeGrupoServicos: UnidadeGrupoServico[] = [];\n\n  unidadeGrupoServico = {} as UnidadeGrupoServico;\n\n  tipoGrupoServicos: TipoGrupoServico[] = [];\n\n  tipoGrupoServico = {} as TipoGrupoServico;\n\n  erroGeral = {} as ErroGeral;\n\n  erroDTO = {} as ErroDTO;\n\n  form: FormGroup;\n\n  grupoServico: GrupoServico;\n\n  constructor(\n    private uGSService: UnidadeGrupoServicoService,\n    private tGSService: TipoGrupoServicoService,\n    private toast: ToastrService,\n    private fb: FormBuilder,\n    private grupoServicoService: GrupoServicoService,\n  ) {}\n\n  ngOnInit(): void {\n    this.criarForm();\n    this.carregaDadosUGS();\n    this.carregaDadosTGS();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  criarForm(): void {\n    this.form = this.fb.group({\n      codigoSapItem: ['', Validators.required],\n      descSapItem: ['', Validators.required],\n      valorUnitario: ['', Validators.required],\n      unidadeGrupoServico: ['', Validators.required],\n      descServico: ['', Validators.required],\n      tipoGrupoServico: ['', Validators.required],\n    });\n  }\n\n  carregaDadosUGS(): void {\n    this.subscriptions.push(\n      this.uGSService.getAll().subscribe(\n        (data) => {\n          this.unidadeGrupoServicos = data;\n        },\n        (err) => console.log(err),\n      ),\n    );\n  }\n\n  carregaDadosTGS(): void {\n    this.subscriptions.push(\n      this.tGSService.getAll().subscribe(\n        (data) => {\n          this.tipoGrupoServicos = data;\n        },\n        (err) => console.log(err),\n      ),\n    );\n  }\n\n  cadastrarGrupoServico(): void {\n    if (this.form.invalid) {\n      this.toast.error('Formulário com campos invalidos', 'Erro!', {\n        timeOut: 4000,\n      });\n      this.toucheCamposFormulario();\n      return;\n    }\n\n    this.grupoServico = this.form.value;\n    const unidadeGrupoServicoId = Number(\n      this.form.get('unidadeGrupoServico').value,\n    );\n    const tipoGrupoServicoId = Number(this.form.get('tipoGrupoServico').value);\n\n    this.grupoServico.unidadeGrupoServico = this.unidadeGrupoServicos.find(\n      (x) => x.id === unidadeGrupoServicoId,\n    );\n\n    this.grupoServico.tipoGrupoServico = this.tipoGrupoServicos.find(\n      (x) => x.id === tipoGrupoServicoId,\n    );\n\n    this.subscriptions.push(\n      this.grupoServicoService.insert(this.grupoServico).subscribe(\n        (data) => {\n          const msg = 'Grupo de serviço cadastrado com sucesso!';\n\n          Swal.fire({\n            title: msg,\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n          setTimeout(() => {\n            this.refresh();\n          }, 1900);\n        },\n        (err) => console.log(err),\n      ),\n    );\n  }\n\n  toucheCamposFormulario(): void {\n    this.form.get('codigoSapItem').markAsTouched();\n    this.form.get('descSapItem').markAsTouched();\n    this.form.get('valorUnitario').markAsTouched();\n    this.form.get('unidadeGrupoServico').markAsTouched();\n    this.form.get('tipoGrupoServico').markAsTouched();\n    this.form.get('descServico').markAsTouched();\n  }\n\n  refresh(): void {\n    window.location.reload();\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n        <div class=\"wrapper wrapper-content animated fadeInRight\">\n          <div class=\"row\">\n              <div class=\"col-lg-12\">\n                  <div class=\"ibox float-e-margins\">\n                      <div class=\"ibox-title\">\n                          <h5>Formulário para preenchimento &nbsp;&nbsp;<b class=\"text-danger\"><i class='fa fa-exclamation'></i> Campos obrigatórios</b></h5>\n                          <div class=\"ibox-tools\">\n                              <a class=\"collapse-link\">\n                                  <i class=\"fa fa-chevron-up\"></i>\n                              </a>\n                          </div>\n                      </div>\n                      <div class=\"ibox-content\">\n\n                          <form class=\"form-horizontal\" [formGroup]=\"form\" novalidate>\n                              <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Código Sap <i class='fa fa-exclamation text-danger'></i></label>\n                                  <div class=\"col-sm-10\">\n                                      <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-vcard'></i></span>\n                                          <input type=\"text\" class=\"form-control\" formControlName=\"codigoSapItem\" name=\"codigoSapItem\" required></div>\n                                          <small *ngIf=\"form.get('codigoSapItem').valid && form.get('codigoSapItem').touched\" class=\"form-text text-success\" >ok</small>\n                                          <small *ngIf=\"!form.get('codigoSapItem').valid && form.get('codigoSapItem').touched\"class=\"form-text text-danger\" >Campo código sap requerido</small>\n                                  </div>\n                              </div>\n                              <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Descrição Sap <i class='fa fa-exclamation text-danger'></i></label>\n                                  <div class=\"col-sm-10\">\n                                      <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-id-card'></i></span>\n                                          <input type=\"text\" formControlName=\"descSapItem\" class=\"form-control\" name=\"descSapItem\" required></div>\n                                          <small *ngIf=\"form.get('descSapItem').valid && form.get('descSapItem').touched\" class=\"form-text text-success\" >ok</small>\n                                          <small *ngIf=\"!form.get('descSapItem').valid && form.get('descSapItem').touched\"class=\"form-text text-danger\" >Campo descrição sap requerido</small>\n                                  </div>\n                              </div>\n\n                              <div class=\"form-group\" id=\"data_1\"><label class=\"col-sm-2 control-label\">Valor Unitário <i class='fa fa-exclamation text-danger'></i></label>\n                                  <div class=\"col-sm-10\">\n                                      <div class=\"input-group date m-b\">\n                                          <span class=\"input-group-addon\"><i class=\"fa fa-dollar\"></i></span>\n                                          <input type=\"text\" formControlName=\"valorUnitario\" class=\"form-control\" name=\"valorUnitario\" required>\n                                      </div>\n                                        <small *ngIf=\"form.get('valorUnitario').valid && form.get('valorUnitario').touched\" class=\"form-text text-success\" >ok</small>\n                                        <small *ngIf=\"!form.get('valorUnitario').valid && form.get('valorUnitario').touched\"class=\"form-text text-danger\" >Campo valor unitário requerido</small>\n\n                                  </div>\n                              </div>\n                              <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Serviço desc.<i class='fa fa-exclamation text-danger'></i></label>\n                                <div class=\"col-sm-10\">\n                                  <div class=\"input-group date m-b\">\n                                      <span class=\"input-group-addon\"><i class=\"fa fa-vcard\"></i></span>\n                                      <input type=\"text\" formControlName=\"descServico\" class=\"form-control\" name=\"descServico\" required>\n                                  </div>\n                                    <small *ngIf=\"form.get('descServico').valid && form.get('descServico').touched\" class=\"form-text text-success\" >ok</small>\n                                    <small *ngIf=\"!form.get('descServico').valid && form.get('descServico').touched\"class=\"form-text text-danger\" >Campo descrição servico obrigatório</small>\n                                </div>\n                              </div>\n                              <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Unidade G. Servico <i class='fa fa-exclamation text-danger'></i></label>\n                                  <div class=\"col-sm-10\">\n                                      <div class=\"col-lg-6 m-l-n\">\n                                          <select class='form-control' formControlName=\"unidadeGrupoServico\" name='unidadeGrupoServico' required>\n                                            <option *ngFor=\"let item of unidadeGrupoServicos\" value='{{ item.id }}'>{{ item.nome }}</option>\n                                          </select>\n                                          <small *ngIf=\"form.get('unidadeGrupoServico').valid && form.get('unidadeGrupoServico').touched\" class=\"form-text text-success\" >ok</small>\n                                          <small *ngIf=\"!form.get('unidadeGrupoServico').valid && form.get('unidadeGrupoServico').touched\"class=\"form-text text-danger\" >Campo unidade grupo servico requerido</small>\n                                      </div>\n                                  </div>\n                              </div>\n\n                              <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Tipo G. Servico <i class='fa fa-exclamation text-danger'></i></label>\n                                <div class=\"col-sm-10\">\n                                    <div class=\"col-lg-6 m-l-n\">\n                                        <select class='form-control' formControlName=\"tipoGrupoServico\" name='tipoGrupoServico' required>\n                                          <option *ngFor=\"let item of tipoGrupoServicos\" value='{{ item.id }}'>{{ item.descricao }}</option>\n                                        </select>\n                                        <small *ngIf=\"form.get('tipoGrupoServico').valid && form.get('tipoGrupoServico').touched\" class=\"form-text text-success\" >ok</small>\n                                        <small *ngIf=\"!form.get('tipoGrupoServico').valid && form.get('tipoGrupoServico').touched\"class=\"form-text text-danger\" >Campo tipo grupo servico requerido</small>\n                                    </div>\n                                </div>\n                            </div>\n                              <div class=\"hr-line-dashed\"></div>\n                              <div class=\"form-group\">\n                                  <div class=\"col-sm-6 col-sm-offset-2\">\n                                      <button class=\"btn btn-w-m btn-warning\" type=\"reset\"><i class=\"fa fa-close\"></i> Limpar</button>\n                                      <button class=\"btn btn-w-m btn-primary\" type=\"button\" (click)=\"cadastrarGrupoServico()\" style=\"margin-left: 20px;\"><i class=\"fa fa-check\"></i> Cadastrar</button>\n                                  </div>\n                              </div>\n                          </form>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n    </div>\n</div>\n","export * from './cadastrar.component';\n","import { Component } from '@angular/core';\n\n@Component({ template: `<router-outlet></router-outlet>` })\nexport class GroupServiceComponent {}\n","export * from './atualizar';\nexport * from './cadastrar';\nexport * from './listar';\nexport * from './listar-tipo-grupo';\nexport * from './listar-unidade';\nexport * from './group-service.component';\n","export * from './listar-tipo-grupo.component';\n","import { Component, OnInit } from '@angular/core';\nimport {\n  TipoGrupoServico,\n  TipoGrupoServicoService,\n} from 'src/app/modules/shared';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-listar-tipo-grupo',\n  templateUrl: './listar-tipo-grupo.component.html',\n  styleUrls: ['./listar-tipo-grupo.component.css'],\n})\nexport class ListarTipoGrupoComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  tipoGrupoServicos: TipoGrupoServico[] = [];\n\n  constructor(private tipoGrupoServicoService: TipoGrupoServicoService) {}\n\n  ngOnInit(): void {\n    this.carregaDadosTipoGrupoServicos();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  carregaDadosTipoGrupoServicos(): void {\n    this.subscriptions.push(\n      this.tipoGrupoServicoService.getAll().subscribe(\n        (data) => {\n          this.tipoGrupoServicos = data;\n        },\n        (err) => console.log(err),\n      ),\n    );\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n\n      <div class=\"wrapper wrapper-content animated fadeInRight\">\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <div class=\"ibox float-e-margins\">\n                    <div class=\"ibox-title\">\n                        <h5>Tabela de registros retornados da base de dados</h5>\n                        <div class=\"ibox-tools\">\n                            <a class=\"collapse-link\">\n                                <i class=\"fa fa-chevron-up\"></i>\n                            </a>\n                        </div>\n\n                    </div>\n                    <!-- <div class=\"ibox-content\">\n                      <input\n                          class=\"form-control mr-sm-2\"\n                          type=\"search\"\n                          placeholder=\"Busca usuário por nome\"\n                          aria-label=\"Search\"\n                      >\n                    </div> -->\n                    <div class=\"ibox-content\">\n\n                        <div class=\"table-responsive\">\n                            <table class='table table-striped table-bordered table-hover dataTables-example'>\n                              <thead>\n                                <tr>\n                                  <th>Código</th>\n                                  <th>Descrição</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr class='gradeX' *ngFor=\"let item of tipoGrupoServicos\">\n                                  <td> {{ item.id }} </td>\n                                  <td> {{ item.descricao }} </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    </div>\n</div>\n","export * from './listar-unidade.component';\n","import { Component, OnInit } from '@angular/core';\nimport {\n  UnidadeGrupoServico,\n  UnidadeGrupoServicoService,\n} from 'src/app/modules/shared';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-listar-unidade',\n  templateUrl: './listar-unidade.component.html',\n  styleUrls: ['./listar-unidade.component.css'],\n})\nexport class ListarUnidadeComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  unidadeGrupoServico: UnidadeGrupoServico[] = [];\n\n  constructor(private uGSService: UnidadeGrupoServicoService) {}\n\n  ngOnInit(): void {\n    this.carregaDadosUGS();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  public loadScript(url: string): void {\n    const body = <HTMLDivElement>document.body;\n    const script = document.createElement('script');\n    script.innerHTML = '';\n    script.src = url;\n    script.async = false;\n    script.defer = true;\n    body.appendChild(script);\n  }\n\n  carregaDadosUGS(): void {\n    this.subscriptions.push(\n      this.uGSService.getAll().subscribe(\n        (data) => {\n          this.unidadeGrupoServico = data;\n        },\n        (err) => console.log(err),\n      ),\n    );\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n\n      <div class=\"wrapper wrapper-content animated fadeInRight\">\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <div class=\"ibox float-e-margins\">\n                    <div class=\"ibox-title\">\n                        <h5>Tabela de registros Unidade Grupo de Serviço</h5>\n                        <div class=\"ibox-tools\">\n                            <a class=\"collapse-link\">\n                                <i class=\"fa fa-chevron-up\"></i>\n                            </a>\n                        </div>\n\n                    </div>\n                    <!-- <div class=\"ibox-content\">\n                      <input\n                          class=\"form-control mr-sm-2\"\n                          type=\"search\"\n                          placeholder=\"Busca unidade por nome\"\n                          aria-label=\"Search\"\n                      >\n                    </div> -->\n                    <div class=\"ibox-content\">\n\n                        <div class=\"table-responsive\">\n                            <table class='table table-striped table-bordered table-hover dataTables-example'>\n                              <thead>\n                                <tr>\n                                  <th>Código</th>\n                                  <th>Nome</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr *ngFor=\"let item of unidadeGrupoServico\">\n                                  <th>{{ item.id }}</th>\n                                  <th>{{ item.nome }}</th>\n                                </tr>\n                              </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    </div>\n</div>\n\n","export * from './listar.component';\n","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { GrupoServico, GrupoServicoService } from 'src/app/modules/shared';\n\n@Component({\n  selector: 'app-listar',\n  templateUrl: './listar.component.html',\n  styleUrls: ['./listar.component.css'],\n})\nexport class ListarComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  grupoServicos: GrupoServico[] = [];\n\n  constructor(private grupoServicoService: GrupoServicoService) {}\n\n  ngOnInit(): void {\n    this.carregaDadosGrupoServicos();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  carregaDadosGrupoServicos(): void {\n    this.subscriptions.push(\n      this.grupoServicoService.getAll().subscribe(\n        (data) => {\n          this.grupoServicos = data;\n          console.log(this.grupoServicos);\n        },\n        (err) => console.log(err),\n      ),\n    );\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n\n      <div class=\"wrapper wrapper-content animated fadeInRight\">\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <div class=\"ibox float-e-margins\">\n                    <div class=\"ibox-title\">\n                        <h5>Tabela de registros retornados da base de dados</h5>\n                        <div class=\"ibox-tools\">\n                            <a class=\"collapse-link\">\n                                <i class=\"fa fa-chevron-up\"></i>\n                            </a>\n                        </div>\n\n                    </div>\n                    <!-- <div class=\"ibox-content\">\n                      <input\n                          class=\"form-control mr-sm-2\"\n                          type=\"search\"\n                          placeholder=\"Busca usuário por nome\"\n                          aria-label=\"Search\"\n                      >\n                    </div> -->\n                    <div class=\"ibox-content\">\n\n                        <div class=\"table-responsive\">\n                            <table class='table table-striped table-bordered table-hover dataTables-example'>\n                              <thead>\n                                <tr>\n                                  <th>Código Sap</th>\n                                  <th>Descrição Sap</th>\n                                  <th>Valor Unitário</th>\n                                  <th>Unidade Grupo Serviço</th>\n                                  <th>Tipo Grupo Servico</th>\n                                  <th>Ação</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr class='gradeX' *ngFor=\"let item of grupoServicos\">\n                                  <td> {{ item.codigoSapItem }} </td>\n                                  <td> {{ item.descSapItem }} </td>\n                                  <td> {{ item.valorUnitario }} </td>\n                                  <td> {{ item.unidadeGrupoServico?.nome }} </td>\n                                  <td> {{ item.tipoGrupoServico.descricao }} </td>\n\n                                  <td>\n                                    <a href=\"/group-service/atualizar/{{item.id}}\">\n                                      <Button class=\"btn btn-outline btn-primary\" style=\"margin-right: 5px;\">Editar</Button>\n                                    </a>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';\nimport {\n  AtualizarComponent,\n  CadastrarComponent,\n  ListarComponent,\n  ListarTipoGrupoComponent,\n  ListarUnidadeComponent,\n  GroupServiceComponent,\n} from './components';\nimport {\n  MenuModule,\n  SharedModule,\n  APP_DATE_FORMATS,\n  AppDateAdapter,\n} from '../../shared';\n\n@NgModule({\n  declarations: [\n    GroupServiceComponent,\n    AtualizarComponent,\n    CadastrarComponent,\n    ListarComponent,\n    ListarTipoGrupoComponent,\n    ListarUnidadeComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    SharedModule,\n    MenuModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    { provide: DateAdapter, useClass: AppDateAdapter },\n    { provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS },\n  ],\n})\nexport class GroupServiceModule {}\n","export * from './group-service.module';\nexport * from './router-group-service.module';\n","import { NgModule } from '@angular/core';\n\nimport { RouterModule, Routes } from '@angular/router';\n\nimport {\n  AtualizarComponent,\n  CadastrarComponent,\n  ListarComponent,\n  ListarTipoGrupoComponent,\n  ListarUnidadeComponent,\n  GroupServiceComponent,\n} from './components';\nimport { AutenticaRotaSerivce, AuthGuardService } from '../../shared';\n\nexport const GroupServiceRoutes: Routes = [\n  {\n    path: 'group-service',\n    component: GroupServiceComponent,\n    canActivate: [AuthGuardService],\n\n    children: [\n      {\n        path: 'pesquisar',\n        component: ListarComponent,\n        canActivate: [AutenticaRotaSerivce],\n      },\n      {\n        path: 'pesquisar-unidade',\n        component: ListarUnidadeComponent,\n        canActivate: [AutenticaRotaSerivce],\n      },\n      {\n        path: 'pesquisar-tipo-grupo',\n        component: ListarTipoGrupoComponent,\n        canActivate: [AutenticaRotaSerivce],\n      },\n      {\n        path: 'cadastrar',\n        component: CadastrarComponent,\n        canActivate: [AutenticaRotaSerivce],\n      },\n      { path: 'atualizar/:gsid', component: AtualizarComponent },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(GroupServiceRoutes)],\n\n  exports: [RouterModule],\n})\nexport class GroupServiceRoutingModule {}\n","export * from './client';\nexport * from './group-service';\nexport * from './order-service';\n","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {\n  OrdemServicoService,\n  ClienteService,\n  OrdemServico,\n  Cliente,\n  ErroGeral,\n  ErroDTO,\n  OrdemServiceGrupoServiceDTO,\n  GrupoServico,\n  UnidadeGrupoServico,\n  TipoGrupoServico,\n  GrupoServicoService,\n  UnidadeGrupoServicoService,\n  TipoGrupoServicoService,\n  OrdemServicoGrupoServicoService,\n} from 'src/app/modules/shared';\nimport Swal from 'sweetalert2';\n\nimport { ToastrService } from 'ngx-toastr';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-atualizar',\n  templateUrl: './atualizar.component.html',\n  styleUrls: ['./atualizar.component.css'],\n})\nexport class AtualizarComponent implements OnInit {\n  // VARIAVEIS CLASSE PRINCIPAL\n\n  erroGeral = {} as ErroGeral;\n\n  erroDTO = {} as ErroDTO;\n\n  startDate = new Date();\n\n  private subscriptions: Subscription[] = [];\n\n  ordemServico = {} as OrdemServico;\n\n  ordemServicoCadastrada = {} as OrdemServico;\n\n  ordemServicoGrupoServico = {} as OrdemServiceGrupoServiceDTO;\n\n  form: FormGroup;\n\n  // VARIAVEIS CLIENTE\n\n  clienteSelecionado = false;\n\n  dadosCliente = false;\n\n  clientes: Cliente[] = [];\n\n  cliente = {} as Cliente;\n\n  clienteFiltrados: Cliente[] = [];\n\n  // VARIAVEIS GRUPO DE SERVIÇO\n\n  grupoServicoSelecionado = false;\n\n  dadosGrupoServico = false;\n\n  grupoServicos: GrupoServico[] = [];\n\n  grupoServicosFiltrados: GrupoServico[] = [];\n\n  grupoServico = {} as GrupoServico;\n\n  formGrupoServico: FormGroup;\n\n  unidadeGrupoServicos: UnidadeGrupoServico[] = [];\n\n  unidadeGrupoServico = {} as UnidadeGrupoServico;\n\n  tipoGrupoServicos: TipoGrupoServico[] = [];\n\n  tipoGrupoServico = {} as TipoGrupoServico;\n\n  totalServicos = 0;\n\n  ordemServicoId: number;\n\n  constructor(\n    private route: ActivatedRoute,\n    private clienteService: ClienteService,\n    private grupoServicoService: GrupoServicoService,\n    private uGSService: UnidadeGrupoServicoService,\n    private tGSService: TipoGrupoServicoService,\n    private toast: ToastrService,\n    private router: Router,\n    private fb: FormBuilder,\n    private ordemServicoService: OrdemServicoService,\n    private ordemServicoGrupoServicoService: OrdemServicoGrupoServicoService,\n  ) {}\n\n  ngOnInit(): void {\n    this.ordemServicoId = Number(this.route.snapshot.paramMap.get('osid'));\n    this.criarForm();\n    this.carregarClientes();\n    this.carregarGrupoServico();\n    this.criarFormGrupoServico();\n    this.carregaDadosUGS();\n    this.carregaDadosTGS();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  criarForm(): void {\n    this.form = this.fb.group({\n      codigoSupergas: ['', Validators.required],\n      data: ['', Validators.required],\n      cliente: ['', Validators.required],\n    });\n  }\n\n  cadastrarOrdemServico(): void {\n    if (this.form.invalid || this.formGrupoServico.invalid) {\n      this.toast.error('Formulário com campos invalidos', 'Erro!', {\n        timeOut: 4000,\n      });\n      this.toucheCamposFormulario();\n      return;\n    }\n\n    this.ordemServico.codigoSupergas = Number(\n      this.form.get('codigoSupergas').value,\n    );\n    this.ordemServico.data = this.form.get('data').value;\n    this.ordemServico.cliente = this.cliente;\n    this.ordemServico.status = 1;\n\n    if (this.ordemServicoCadastrada.id) {\n      this.adicionarGrupoDeServioOSAtual();\n    } else {\n      this.subscriptions.push(\n        this.ordemServicoService.insert(this.ordemServico).subscribe(\n          (data) => {\n            const msg = 'Ordem de serviço cadastrado com sucesso!';\n            this.ordemServicoCadastrada = data;\n            Swal.fire({\n              title: msg,\n              icon: 'success',\n              showConfirmButton: false,\n              timer: 2000,\n            });\n            this.adicionarGrupoDeServioOSAtual();\n          },\n          (err) => {\n            const msg = err.error;\n            Swal.fire({\n              title: msg,\n              icon: 'error',\n              showConfirmButton: false,\n              timer: 2000,\n            });\n          },\n        ),\n      );\n    }\n  }\n\n  toucheCamposFormulario(): void {\n    this.form.get('codigoSupergas').markAsTouched();\n    this.form.get('data').markAsTouched();\n    this.form.get('cliente').markAsTouched();\n  }\n\n  refresh(): void {\n    window.location.reload();\n  }\n\n  // ///// FUÇÕES DE CLIENTE  \\\\\\\\\\\\\\\\\\\n\n  filtraUsuarioPeloNome(nome: string): void {\n    this.clienteSelecionado = true;\n    this.dadosCliente = false;\n    if (!nome) {\n      this.clienteFiltrados = this.clientes;\n    } else {\n      this.clienteFiltrados = this.clientes.filter((x) =>\n        x.nome.trim().toLowerCase().includes(nome.trim().toLowerCase()),\n      );\n    }\n  }\n\n  dadosClienteSelecionado(id: number): void {\n    this.cliente = this.clientes.find((x) => x.id === id);\n\n    if (!this.cliente) {\n      const msg = 'Erro ao carregar cliente';\n      Swal.fire({\n        title: msg,\n        icon: 'error',\n        showConfirmButton: false,\n        timer: 2000,\n      });\n    }\n\n    this.populandoFomularioCliente();\n    this.clienteSelecionado = false;\n  }\n\n  populandoFomularioCliente(): void {\n    this.dadosCliente = true;\n    this.form.patchValue({\n      cliente: this.cliente.nome,\n      data: this.ordemServicoCadastrada.data,\n    });\n  }\n\n  carregarClientes(): void {\n    this.subscriptions.push(\n      this.clienteService.getAll().subscribe(\n        (data) => {\n          this.clientes = data;\n          this.carregarDadosOsAtual();\n        },\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n      ),\n    );\n  }\n\n  // ///// FUÇÕES DE GRUPO DE SERVIÇO  \\\\\\\\\\\\\\\\\\\n\n  criarFormGrupoServico(): void {\n    this.formGrupoServico = this.fb.group({\n      codigoSapItem: ['', Validators.required],\n      descSapItem: ['', Validators.required],\n      valorUnitario: ['', Validators.required],\n      quantidade: ['', Validators.required],\n      unidadeGrupoServico: ['', Validators.required],\n      descServico: ['', Validators.required],\n      tipoGrupoServico: ['', Validators.required],\n    });\n  }\n\n  limparCodSupergas(): void {\n    this.form.patchValue({\n      codigoSupergas: null,\n    });\n  }\n\n  filtraGrupoServicoCodSupergas(codSap: string): void {\n    this.grupoServicoSelecionado = true;\n    this.dadosGrupoServico = false;\n    if (!codSap) {\n      this.grupoServicosFiltrados = this.grupoServicos;\n    } else {\n      this.grupoServicosFiltrados = this.grupoServicos.filter((x) =>\n        x.codigoSapItem\n          .toString()\n          .trim()\n          .toLowerCase()\n          .includes(codSap.toLowerCase().trim()),\n      );\n    }\n  }\n\n  carregarGrupoServico(): void {\n    this.subscriptions.push(\n      this.grupoServicoService.getAll().subscribe(\n        (data) => {\n          this.grupoServicos = data;\n        },\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n      ),\n    );\n  }\n\n  dadosGrupoServicoSelecionado(id: number): void {\n    this.grupoServico = this.grupoServicos.find((x) => x.id === id);\n    if (!this.grupoServico) {\n      const msg = 'Erro ao carregar cliente';\n      Swal.fire({\n        title: msg,\n        icon: 'error',\n        showConfirmButton: false,\n        timer: 2000,\n      });\n    }\n    this.populandoCodGrupoServico();\n    this.grupoServicoSelecionado = false;\n  }\n\n  populandoCodGrupoServico(): void {\n    this.dadosGrupoServico = true;\n    this.form.patchValue({\n      codigoSupergas: this.grupoServico.codigoSapItem,\n    });\n\n    this.populandoFormularioGrupoServico();\n  }\n\n  populandoFormularioGrupoServico(): void {\n    this.formGrupoServico.patchValue({\n      codigoSapItem: this.grupoServico.codigoSapItem,\n      descSapItem: this.grupoServico.descSapItem,\n      valorUnitario: this.grupoServico.valorUnitario,\n      quantidade: 1,\n      unidadeGrupoServico: this.grupoServico.unidadeGrupoServico.id,\n      descServico: this.grupoServico.descServico,\n      tipoGrupoServico: this.grupoServico.tipoGrupoServico.id,\n    });\n  }\n\n  carregaDadosUGS(): void {\n    this.subscriptions.push(\n      this.uGSService.getAll().subscribe(\n        (data) => {\n          this.unidadeGrupoServicos = data;\n        },\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n      ),\n    );\n  }\n\n  carregaDadosTGS(): void {\n    this.subscriptions.push(\n      this.tGSService.getAll().subscribe(\n        (data) => {\n          this.tipoGrupoServicos = data;\n        },\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n      ),\n    );\n  }\n\n  adicionarGrupoDeServioOSAtual(): void {\n    this.ordemServicoGrupoServico.grupoServicoId = this.grupoServico.id;\n    this.ordemServicoGrupoServico.ordemServicoId = this.ordemServicoCadastrada.id;\n    this.ordemServicoGrupoServico.quantidade = this.formGrupoServico.get(\n      'quantidade',\n    ).value;\n    this.ordemServicoGrupoServico.valor = this.grupoServico.valorUnitario;\n\n    this.subscriptions.push(\n      this.ordemServicoGrupoServicoService\n        .insert(this.ordemServicoGrupoServico)\n        .subscribe(\n          (data) => this.carregarDadosOsAtual(),\n          (err) => {\n            const msg = err.error;\n            Swal.fire({\n              title: msg,\n              icon: 'error',\n              showConfirmButton: false,\n              timer: 2000,\n            });\n          },\n        ),\n    );\n  }\n\n  carregarDadosOsAtual(): void {\n    this.subscriptions.push(\n      this.ordemServicoService.findById(this.ordemServicoId).subscribe(\n        (data) => {\n          this.ordemServicoCadastrada = data;\n          if (this.ordemServicoCadastrada.status === 0) {\n            this.router.navigate([\n              `/order-service/visualizar/${this.ordemServicoCadastrada.id}`,\n            ]);\n          }\n          this.quandoServicoGrupoServico();\n          this.dadosClienteSelecionado(this.ordemServicoCadastrada.cliente.id);\n        },\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n      ),\n    );\n    this.limparCodSupergas();\n  }\n\n  quandoServicoGrupoServico(): void {\n    const idOS = this.ordemServicoCadastrada.id;\n    this.totalServicos = 0;\n\n    this.ordemServicoCadastrada.grupoServico.forEach((x) => {\n      this.ordemServicoGrupoServicoService.findById(idOS, x.id).subscribe(\n        (data) => {\n          x.quantidade = data.quantidade;\n          x.valorUnitario = data.valor;\n          this.totalServicos += data.quantidade * data.valor;\n          return x;\n        },\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n      );\n    });\n  }\n\n  finalizarOrdemDeServico(): void {\n    this.ordemServicoCadastrada.status = 0;\n    this.subscriptions.push(\n      this.ordemServicoService.update(this.ordemServicoCadastrada).subscribe(\n        (data) => {\n          const msg = 'Ordem de serviço fechada com sucesso';\n          Swal.fire({\n            title: msg,\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n\n          setTimeout(() => {\n            this.refresh();\n          }, 1900);\n        },\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n      ),\n    );\n  }\n\n  removerItemServicoAtual(idOS: number, idGS: number): void {\n    this.subscriptions.push(\n      this.ordemServicoGrupoServicoService.delete(idOS, idGS).subscribe(\n        (data) => this.carregarDadosOsAtual(),\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n      ),\n    );\n  }\n\n  cadastrarGrupoServico(): void {\n    if (this.form.invalid) {\n      this.toast.error('Formulário com campos invalidos', 'Erro!', {\n        timeOut: 4000,\n      });\n      this.toucheCamposFormulario();\n      return;\n    }\n\n    this.grupoServico = this.form.value;\n    const unidadeGrupoServicoId = Number(\n      this.form.get('unidadeGrupoServico').value,\n    );\n    const tipoGrupoServicoId = Number(this.form.get('tipoGrupoServico').value);\n\n    this.grupoServico.unidadeGrupoServico = this.unidadeGrupoServicos.find(\n      (x) => x.id === unidadeGrupoServicoId,\n    );\n\n    this.grupoServico.tipoGrupoServico = this.tipoGrupoServicos.find(\n      (x) => x.id === tipoGrupoServicoId,\n    );\n\n    this.subscriptions.push(\n      this.grupoServicoService.insert(this.grupoServico).subscribe(\n        (data) => {\n          const msg = 'Grupo de serviço cadastrado com sucesso!';\n\n          Swal.fire({\n            title: msg,\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n      ),\n    );\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n        <div class=\"wrapper wrapper-content animated fadeInRight\">\n          <div class=\"row\">\n              <div class=\"col-lg-12\">\n                  <div class=\"ibox float-e-margins\">\n                      <div class=\"ibox-title\">\n                          <h5>Formulário Para Cadastrar Ordem de Serviço &nbsp;&nbsp;<b class=\"text-danger\"><i class='fa fa-exclamation'></i> Campos obrigatórios</b></h5>\n                          <div class=\"ibox-tools\">\n                              <a class=\"collapse-link\">\n                                  <i class=\"fa fa-chevron-up\"></i>\n                              </a>\n                          </div>\n                      </div>\n                      <div class=\"ibox-content\">\n                          <form class=\"form-horizontal\" [formGroup]=\"form\" novalidate>\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Cliente <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\">\n                                <div class=\"col-md-8\">\n                                  <input type=\"text\"\n                                    formControlName=\"cliente\"\n                                    name=\"cliente\"\n                                    id=\"cliente\"\n                                    class=\"form-control\"\n                                    placeholder=\"digite o nome do cliente\"\n                                    aria-label=\"Search\"\n                                    autocomplete=\"off\"\n                                    #termoPesquisa\n                                    (keyup)=\"filtraUsuarioPeloNome(termoPesquisa.value)\"\n                                  >\n                                  <ul class=\"list-group\" style=\"position: absolute; z-index: 999; background-color: #fff;\" *ngIf=\"clienteSelecionado\">\n                                    <li class=\"list-group-item\" *ngFor=\"let item of clienteFiltrados\">\n                                      <a (click)=\"dadosClienteSelecionado(item.id)\">\n                                          {{ item.nome }}\n                                      </a>\n                                    </li>\n                                  </ul>\n                                </div>\n                                <br>\n                                <div class=\"col-sm-12\" *ngIf=\"dadosCliente\">\n\n                                  <div class=\"col-sm-8\">\n                                      <h3><strong>{{ cliente.nome }}</strong></h3>\n                                      <!-- <p><i class=\"fa fa-map-marker\"></i> {{ cliente.enderecos }} </p> -->\n                                      <address>\n                                          <strong>Cod. SuperGas {{ cliente.codigoSupergas }}</strong>\n                                          <p *ngFor=\"let endereco of cliente.enderecos\">\n                                            {{ endereco.logradouro }}, {{ endereco.numero }}\n                                            <br>\n                                            {{ endereco.bairro }},\n                                            <br>\n                                            {{ endereco.cidade.nome }}, {{ endereco.cidade.estado.uf }}\n                                            <br> cep: {{endereco.cep}}\n                                          </p>\n                                          <label title=\"Phone\">Fone:</label> {{ cliente.telefone }}\n                                      </address>\n                                  </div>\n                                </div>\n\n                                <small *ngIf=\"form.get('cliente').valid && form.get('cliente').touched\" class=\"form-text text-success\" >ok</small>\n                                <small *ngIf=\"!form.get('cliente').valid && form.get('cliente').touched\"class=\"form-text text-danger\" >Campo cliente requerido</small>\n                              </div>\n                            </div>\n\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Cod. Supergas <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\">\n                                <div class=\"col-md-8\">\n                                  <input type=\"text\"\n                                    formControlName=\"codigoSupergas\"\n                                    name=\"codigoSupergas\"\n                                    id=\"codigoSupergas\"\n                                    class=\"form-control\"\n                                    placeholder=\"digite o cod. supergas\"\n                                    aria-label=\"Search\"\n                                    required\n                                    autocomplete=\"off\"\n                                    #grupoServicoPesquisa\n                                    (keyup)=\"filtraGrupoServicoCodSupergas(grupoServicoPesquisa.value)\"\n                                  >\n                                  <ul class=\"list-group\" style=\"position: absolute; z-index: 999; background-color: #fff;\" *ngIf=\"grupoServicoSelecionado\">\n                                    <li class=\"list-group-item\" *ngFor=\"let item of grupoServicosFiltrados\">\n                                      <a (click)=\"dadosGrupoServicoSelecionado(item.id)\">\n                                          {{ item.codigoSapItem }}\n                                      </a>\n                                    </li>\n                                  </ul>\n                                  <small *ngIf=\"form.get('codigoSupergas').valid && form.get('codigoSupergas').touched\" class=\"form-text text-success\" >ok</small>\n                                  <small *ngIf=\"!form.get('codigoSupergas').valid && form.get('codigoSupergas').touched\"class=\"form-text text-danger\" >Campo Cod. Supergas requerido</small>\n                                </div>\n                                <br>\n                                <div class=\"col-sm-12\" *ngIf=\"form.get('codigoSupergas').valid\">\n                                  <form class=\"form-horizontal\" style=\"margin-top: 20px;\" [formGroup]=\"formGrupoServico\" novalidate>\n                                      <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Código Sap <i class='fa fa-exclamation text-danger'></i></label>\n                                          <div class=\"col-sm-6\">\n                                              <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-vcard'></i></span>\n                                                  <input type=\"text\" class=\"form-control\" formControlName=\"codigoSapItem\" name=\"codigoSapItem\" required></div>\n                                                  <small *ngIf=\"formGrupoServico.get('codigoSapItem').valid && formGrupoServico.get('codigoSapItem').touched\" class=\"form-text text-success\" >ok</small>\n                                                  <small *ngIf=\"!formGrupoServico.get('codigoSapItem').valid && formGrupoServico.get('codigoSapItem').touched\"class=\"form-text text-danger\" >Campo código sap requerido</small>\n                                          </div>\n                                      </div>\n                                      <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Descrição Sap <i class='fa fa-exclamation text-danger'></i></label>\n                                          <div class=\"col-sm-6\">\n                                              <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-id-card'></i></span>\n                                                  <input type=\"text\" formControlName=\"descSapItem\" class=\"form-control\" name=\"descSapItem\" required></div>\n                                                  <small *ngIf=\"formGrupoServico.get('descSapItem').valid && formGrupoServico.get('descSapItem').touched\" class=\"form-text text-success\" >ok</small>\n                                                  <small *ngIf=\"!formGrupoServico.get('descSapItem').valid && formGrupoServico.get('descSapItem').touched\"class=\"form-text text-danger\" >Campo descrição sap requerido</small>\n                                          </div>\n                                      </div>\n\n                                      <div class=\"form-group\" id=\"data_1\"><label class=\"col-sm-2 control-label\">Valor Unitário <i class='fa fa-exclamation text-danger'></i></label>\n                                          <div class=\"col-sm-6\">\n                                              <div class=\"input-group date m-b\">\n                                                  <span class=\"input-group-addon\"><i class=\"fa fa-dollar\"></i></span>\n                                                  <input type=\"text\" formControlName=\"valorUnitario\" class=\"form-control\" name=\"valorUnitario\" required>\n                                              </div>\n                                                <small *ngIf=\"formGrupoServico.get('valorUnitario').valid && formGrupoServico.get('valorUnitario').touched\" class=\"form-text text-success\" >ok</small>\n                                                <small *ngIf=\"!formGrupoServico.get('valorUnitario').valid && formGrupoServico.get('valorUnitario').touched\"class=\"form-text text-danger\" >Campo valor unitário requerido</small>\n\n                                          </div>\n                                      </div>\n                                      <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Quantidade <i class='fa fa-exclamation text-danger'></i></label>\n                                        <div class=\"col-sm-6\">\n                                            <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-vcard'></i></span>\n                                                <input type=\"text\" class=\"form-control\" formControlName=\"quantidade\" name=\"quantidade\" required></div>\n                                                <small *ngIf=\"formGrupoServico.get('quantidade').valid && formGrupoServico.get('quantidade').touched\" class=\"form-text text-success\" >ok</small>\n                                                <small *ngIf=\"!formGrupoServico.get('quantidade').valid && formGrupoServico.get('quantidade').touched\"class=\"form-text text-danger\" >Quantidade requerido</small>\n                                        </div>\n                                      </div>\n                                      <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Serviço desc.<i class='fa fa-exclamation text-danger'></i></label>\n                                        <div class=\"col-sm-6\">\n                                          <div class=\"input-group date m-b\">\n                                              <span class=\"input-group-addon\"><i class=\"fa fa-vcard\"></i></span>\n                                              <input type=\"text\" formControlName=\"descServico\" class=\"form-control\" name=\"descServico\" required>\n                                          </div>\n                                            <small *ngIf=\"formGrupoServico.get('descServico').valid && formGrupoServico.get('descServico').touched\" class=\"form-text text-success\" >ok</small>\n                                            <small *ngIf=\"!formGrupoServico.get('descServico').valid && formGrupoServico.get('descServico').touched\"class=\"form-text text-danger\" >Campo descrição servico obrigatório</small>\n                                        </div>\n                                      </div>\n                                      <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Unidade G. Servico <i class='fa fa-exclamation text-danger'></i></label>\n                                          <div class=\"col-sm-10\">\n                                              <div class=\"col-lg-6 m-l-n\">\n                                                  <select class='form-control' formControlName=\"unidadeGrupoServico\" name='unidadeGrupoServico' required>\n                                                    <option *ngFor=\"let item of unidadeGrupoServicos\" value='{{ item.id }}'>{{ item.nome }}</option>\n                                                  </select>\n                                                  <small *ngIf=\"formGrupoServico.get('unidadeGrupoServico').valid && formGrupoServico.get('unidadeGrupoServico').touched\" class=\"form-text text-success\" >ok</small>\n                                                  <small *ngIf=\"!formGrupoServico.get('unidadeGrupoServico').valid && formGrupoServico.get('unidadeGrupoServico').touched\"class=\"form-text text-danger\" >Campo unidade grupo servico requerido</small>\n                                              </div>\n                                          </div>\n                                      </div>\n\n                                      <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Tipo G. Servico <i class='fa fa-exclamation text-danger'></i></label>\n                                        <div class=\"col-sm-10\">\n                                            <div class=\"col-lg-6 m-l-n\">\n                                                <select class='form-control' formControlName=\"tipoGrupoServico\" name='tipoGrupoServico' required>\n                                                  <option *ngFor=\"let item of tipoGrupoServicos\" value='{{ item.id }}'>{{ item.descricao }}</option>\n                                                </select>\n                                                <small *ngIf=\"formGrupoServico.get('tipoGrupoServico').valid && formGrupoServico.get('tipoGrupoServico').touched\" class=\"form-text text-success\" >ok</small>\n                                                <small *ngIf=\"!formGrupoServico.get('tipoGrupoServico').valid && formGrupoServico.get('tipoGrupoServico').touched\"class=\"form-text text-danger\" >Campo tipo grupo servico requerido</small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"hr-line-dashed\"></div>\n                                  </form>\n                                </div>\n                              </div>\n                            </div>\n\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Data <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\" >\n                                  <div class=\"input-group date m-b\">\n                                      <span class=\"input-group-addon\">\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                      </span>\n                                      <input matInput [matDatepicker]=\"picker\" disabled formControlName=\"data\" class=\"form-control\">\n                                      <mat-datepicker #picker disabled=\"false\" [startAt]=\"startDate\"></mat-datepicker>\n                                      <small *ngIf=\"form.get('data').valid && form.get('data').touched\" class=\"form-text text-success\" >ok</small>\n                                      <small *ngIf=\"!form.get('data').valid && form.get('data').touched\"class=\"form-text text-danger\" >Campo data requerido</small>\n                                  </div>\n                              </div>\n                            </div>\n\n\n                            <div class=\"hr-line-dashed\"></div>\n                            <div class=\"form-group\">\n                                <div class=\"col-sm-4 col-sm-offset-2\">\n                                    <button class=\"btn btn-w-m btn-warning\" type=\"reset\"><i class=\"fa fa-close\"></i> Limpar</button>\n                                    <button class=\"btn btn-w-m btn-primary\" type=\"button\" (click)=\"cadastrarOrdemServico()\" style=\"margin-left: 20px;\"><i class=\"fa fa-check\"></i> Adicionar Serviço</button>\n                                </div>\n                            </div>\n                          </form>\n                      </div>\n                  </div>\n              </div>\n          </div>\n\n          <div class=\"ibox-content\" *ngIf=\"ordemServicoCadastrada.id\">\n            <h3>Serviços da OS atual</h3>\n            <div class=\"table-responsive\">\n                <table class='table table-striped table-bordered table-hover dataTables-example'>\n                  <thead>\n                    <tr>\n                      <th>Código Sap</th>\n                      <th>Descrição Sap</th>\n                      <th>Valor Unitário</th>\n                      <th>Quantidade</th>\n                      <th>Unidade Grupo Serviço</th>\n                      <th>Tipo Grupo Servico</th>\n                      <th>Ação</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr class='gradeX' *ngFor=\"let item of ordemServicoCadastrada.grupoServico\">\n                      <td> {{ item.codigoSapItem }} </td>\n                      <td> {{ item.descSapItem }} </td>\n                      <td> {{ item.valorUnitario | currency:'BRL':true }} </td>\n                      <td> {{ item.quantidade }} </td>\n                      <td> {{ item.unidadeGrupoServico?.nome }} </td>\n                      <td> {{ item.tipoGrupoServico.descricao }} </td>\n\n                      <td>\n                          <Button class=\"btn btn-outline btn-danger\" (click)=\"removerItemServicoAtual(ordemServicoCadastrada.id, item.id)\"  style=\"margin-right: 5px;\">Remover</Button>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th></th>\n                      <th></th>\n                      <th></th>\n                      <th></th>\n                      <th></th>\n                      <th>Total</th>\n                      <th>{{ totalServicos | currency:'BRL':true }}</th>\n\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n              <div class=\"hr-line-dashed\"></div>\n              <button class=\"btn btn-w-m btn-danger pull-right m-t-n-xs\" type=\"button\" (click)=\"finalizarOrdemDeServico()\" style=\"margin-left: 20px; margin-bottom: 25px;\"><i class=\"fa fa-check\"></i> Finalizar Ordem de Serviço</button>\n              <br><br>\n          </div>\n      </div>\n    </div>\n</div>\n","export * from './atualizar.component';\n","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport {\n  Cliente,\n  ClienteService,\n  OrdemServicoService,\n  OrdemServico,\n  GrupoServico,\n  GrupoServicoService,\n  UnidadeGrupoServico,\n  TipoGrupoServico,\n  ErroGeral,\n  ErroDTO,\n  TipoGrupoServicoService,\n  UnidadeGrupoServicoService,\n  OrdemServicoGrupoServicoService,\n  OrdemServiceGrupoServiceDTO,\n} from 'src/app/modules/shared';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\n\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-cadastrar',\n  templateUrl: './cadastrar.component.html',\n  styleUrls: ['./cadastrar.component.css'],\n})\nexport class CadastrarComponent implements OnInit {\n  // VARIAVEIS CLASSE PRINCIPAL\n\n  erroGeral = {} as ErroGeral;\n\n  erroDTO = {} as ErroDTO;\n\n  startDate = new Date();\n\n  private subscriptions: Subscription[] = [];\n\n  ordemServico = {} as OrdemServico;\n\n  ordemServicoCadastrada = {} as OrdemServico;\n\n  ordemServicoGrupoServico = {} as OrdemServiceGrupoServiceDTO;\n\n  form: FormGroup;\n\n  // VARIAVEIS CLIENTE\n\n  clienteSelecionado = false;\n\n  dadosCliente = false;\n\n  clientes: Cliente[] = [];\n\n  cliente = {} as Cliente;\n\n  clienteFiltrados: Cliente[] = [];\n\n  // VARIAVEIS GRUPO DE SERVIÇO\n\n  grupoServicoSelecionado = false;\n\n  dadosGrupoServico = false;\n\n  grupoServicos: GrupoServico[] = [];\n\n  grupoServicosFiltrados: GrupoServico[] = [];\n\n  grupoServico = {} as GrupoServico;\n\n  formGrupoServico: FormGroup;\n\n  unidadeGrupoServicos: UnidadeGrupoServico[] = [];\n\n  unidadeGrupoServico = {} as UnidadeGrupoServico;\n\n  tipoGrupoServicos: TipoGrupoServico[] = [];\n\n  tipoGrupoServico = {} as TipoGrupoServico;\n\n  totalServicos = 0;\n\n  constructor(\n    private clienteService: ClienteService,\n    private grupoServicoService: GrupoServicoService,\n    private uGSService: UnidadeGrupoServicoService,\n    private tGSService: TipoGrupoServicoService,\n    private toast: ToastrService,\n    private fb: FormBuilder,\n    private ordemServicoService: OrdemServicoService,\n    private ordemServicoGrupoServicoService: OrdemServicoGrupoServicoService,\n  ) {}\n\n  ngOnInit(): void {\n    this.criarForm();\n    this.carregarClientes();\n    this.carregarGrupoServico();\n    this.criarFormGrupoServico();\n    this.carregaDadosUGS();\n    this.carregaDadosTGS();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  criarForm(): void {\n    this.form = this.fb.group({\n      codigoSupergas: ['', Validators.required],\n      data: ['', Validators.required],\n      cliente: ['', Validators.required],\n    });\n  }\n\n  cadastrarOrdemServico(): void {\n    if (this.form.invalid || this.formGrupoServico.invalid) {\n      this.toast.error('Formulário com campos invalidos', 'Erro!', {\n        timeOut: 4000,\n      });\n      this.toucheCamposFormulario();\n      return;\n    }\n\n    this.ordemServico.codigoSupergas = Number(\n      this.form.get('codigoSupergas').value,\n    );\n    this.ordemServico.data = this.form.get('data').value;\n    this.ordemServico.cliente = this.cliente;\n    this.ordemServico.status = 1;\n\n    if (this.ordemServicoCadastrada.id) {\n      this.adicionarGrupoDeServioOSAtual();\n    } else {\n      this.subscriptions.push(\n        this.ordemServicoService.insert(this.ordemServico).subscribe(\n          (data) => {\n            const msg = 'Ordem de serviço cadastrado com sucesso!';\n            this.ordemServicoCadastrada = data;\n            Swal.fire({\n              title: msg,\n              icon: 'success',\n              showConfirmButton: false,\n              timer: 2000,\n            });\n            this.adicionarGrupoDeServioOSAtual();\n          },\n          (err) => {\n            const msg = err.error;\n            Swal.fire({\n              title: msg,\n              icon: 'error',\n              showConfirmButton: false,\n              timer: 2000,\n            });\n          },\n        ),\n      );\n    }\n  }\n\n  toucheCamposFormulario(): void {\n    this.form.get('codigoSupergas').markAsTouched();\n    this.form.get('data').markAsTouched();\n    this.form.get('cliente').markAsTouched();\n  }\n\n  refresh(): void {\n    window.location.reload();\n  }\n\n  // ///// FUÇÕES DE CLIENTE  \\\\\\\\\\\\\\\\\\\n\n  filtraUsuarioPeloNome(nome: string): void {\n    this.clienteSelecionado = true;\n    this.dadosCliente = false;\n    if (!nome) {\n      this.clienteFiltrados = this.clientes;\n    } else {\n      this.clienteFiltrados = this.clientes.filter((x) =>\n        x.nome.trim().toLowerCase().includes(nome.trim().toLowerCase()),\n      );\n    }\n  }\n\n  dadosClienteSelecionado(id: number): void {\n    this.cliente = this.clientes.find((x) => x.id === id);\n    if (!this.cliente) {\n      const msg = 'Erro ao carregar cliente';\n      Swal.fire({\n        title: msg,\n        icon: 'error',\n        showConfirmButton: false,\n        timer: 2000,\n      });\n    }\n\n    this.populandoFomularioCliente();\n    this.clienteSelecionado = false;\n  }\n\n  populandoFomularioCliente(): void {\n    this.dadosCliente = true;\n    this.form.patchValue({\n      cliente: this.cliente.nome,\n    });\n  }\n\n  carregarClientes(): void {\n    this.subscriptions.push(\n      this.clienteService.getAll().subscribe(\n        (data) => {\n          this.clientes = data;\n        },\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n      ),\n    );\n  }\n\n  // ///// FUÇÕES DE GRUPO DE SERVIÇO  \\\\\\\\\\\\\\\\\\\n\n  criarFormGrupoServico(): void {\n    this.formGrupoServico = this.fb.group({\n      codigoSapItem: ['', Validators.required],\n      descSapItem: ['', Validators.required],\n      valorUnitario: ['', Validators.required],\n      quantidade: ['', Validators.required],\n      unidadeGrupoServico: ['', Validators.required],\n      descServico: ['', Validators.required],\n      tipoGrupoServico: ['', Validators.required],\n    });\n  }\n\n  limparCodSupergas(): void {\n    this.form.patchValue({\n      codigoSupergas: null,\n    });\n  }\n\n  filtraGrupoServicoCodSupergas(codSap: string): void {\n    this.grupoServicoSelecionado = true;\n    this.dadosGrupoServico = false;\n    if (!codSap) {\n      this.grupoServicosFiltrados = this.grupoServicos;\n    } else {\n      this.grupoServicosFiltrados = this.grupoServicos.filter((x) =>\n        x.codigoSapItem\n          .toString()\n          .trim()\n          .toLowerCase()\n          .includes(codSap.toLowerCase().trim()),\n      );\n    }\n  }\n\n  carregarGrupoServico(): void {\n    this.subscriptions.push(\n      this.grupoServicoService.getAll().subscribe(\n        (data) => {\n          this.grupoServicos = data;\n        },\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n      ),\n    );\n  }\n\n  dadosGrupoServicoSelecionado(id: number): void {\n    this.grupoServico = this.grupoServicos.find((x) => x.id === id);\n    if (!this.grupoServico) {\n      const msg = 'Erro ao carregar cliente';\n      Swal.fire({\n        title: msg,\n        icon: 'error',\n        showConfirmButton: false,\n        timer: 2000,\n      });\n    }\n    this.populandoCodGrupoServico();\n    this.grupoServicoSelecionado = false;\n  }\n\n  populandoCodGrupoServico(): void {\n    this.dadosGrupoServico = true;\n    this.form.patchValue({\n      codigoSupergas: this.grupoServico.codigoSapItem,\n    });\n\n    this.populandoFormularioGrupoServico();\n  }\n\n  populandoFormularioGrupoServico(): void {\n    this.formGrupoServico.patchValue({\n      codigoSapItem: this.grupoServico.codigoSapItem,\n      descSapItem: this.grupoServico.descSapItem,\n      valorUnitario: this.grupoServico.valorUnitario,\n      quantidade: 1,\n      unidadeGrupoServico: this.grupoServico.unidadeGrupoServico.id,\n      descServico: this.grupoServico.descServico,\n      tipoGrupoServico: this.grupoServico.tipoGrupoServico.id,\n    });\n  }\n\n  carregaDadosUGS(): void {\n    this.subscriptions.push(\n      this.uGSService.getAll().subscribe(\n        (data) => {\n          this.unidadeGrupoServicos = data;\n        },\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n      ),\n    );\n  }\n\n  carregaDadosTGS(): void {\n    this.subscriptions.push(\n      this.tGSService.getAll().subscribe(\n        (data) => {\n          this.tipoGrupoServicos = data;\n        },\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n      ),\n    );\n  }\n\n  adicionarGrupoDeServioOSAtual(): void {\n    this.ordemServicoGrupoServico.grupoServicoId = this.grupoServico.id;\n    this.ordemServicoGrupoServico.ordemServicoId = this.ordemServicoCadastrada.id;\n    this.ordemServicoGrupoServico.quantidade = this.formGrupoServico.get(\n      'quantidade',\n    ).value;\n    this.ordemServicoGrupoServico.valor = this.grupoServico.valorUnitario;\n\n    this.subscriptions.push(\n      this.ordemServicoGrupoServicoService\n        .insert(this.ordemServicoGrupoServico)\n        .subscribe(\n          (data) => this.carregarDadosOsAtual(),\n          (err) => {\n            const msg = err.error;\n            Swal.fire({\n              title: msg,\n              icon: 'error',\n              showConfirmButton: false,\n              timer: 2000,\n            });\n          },\n        ),\n    );\n  }\n\n  carregarDadosOsAtual(): void {\n    this.subscriptions.push(\n      this.ordemServicoService\n        .findById(this.ordemServicoCadastrada.id)\n        .subscribe(\n          (data) => {\n            this.ordemServicoCadastrada = data;\n            this.quandoServicoGrupoServico();\n          },\n          (err) => {\n            const msg = err.error;\n            Swal.fire({\n              title: msg,\n              icon: 'error',\n              showConfirmButton: false,\n              timer: 2000,\n            });\n          },\n        ),\n    );\n    this.limparCodSupergas();\n  }\n\n  quandoServicoGrupoServico(): void {\n    const idOS = this.ordemServicoCadastrada.id;\n    this.totalServicos = 0;\n\n    this.ordemServicoCadastrada.grupoServico.forEach((x) => {\n      this.ordemServicoGrupoServicoService.findById(idOS, x.id).subscribe(\n        (data) => {\n          x.quantidade = data.quantidade;\n          x.valorUnitario = data.valor;\n          this.totalServicos += data.quantidade * data.valor;\n          x.subTotal = data.quantidade * data.valor;\n          return x;\n        },\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n      );\n    });\n  }\n\n  finalizarOrdemDeServico(): void {\n    this.ordemServicoCadastrada.status = 0;\n    this.subscriptions.push(\n      this.ordemServicoService.update(this.ordemServicoCadastrada).subscribe(\n        (data) => {\n          const msg = 'Ordem de serviço fechada com sucesso';\n          Swal.fire({\n            title: msg,\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n\n          setTimeout(() => {\n            this.refresh();\n          }, 1900);\n        },\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n      ),\n    );\n  }\n\n  removerItemServicoAtual(idOS: number, idGS: number): void {\n    this.subscriptions.push(\n      this.ordemServicoGrupoServicoService.delete(idOS, idGS).subscribe(\n        (data) => this.carregarDadosOsAtual(),\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n      ),\n    );\n  }\n\n  cadastrarGrupoServico(): void {\n    if (this.form.invalid) {\n      this.toast.error('Formulário com campos invalidos', 'Erro!', {\n        timeOut: 4000,\n      });\n      this.toucheCamposFormulario();\n      return;\n    }\n\n    this.grupoServico = this.form.value;\n    const unidadeGrupoServicoId = Number(\n      this.form.get('unidadeGrupoServico').value,\n    );\n    const tipoGrupoServicoId = Number(this.form.get('tipoGrupoServico').value);\n\n    this.grupoServico.unidadeGrupoServico = this.unidadeGrupoServicos.find(\n      (x) => x.id === unidadeGrupoServicoId,\n    );\n\n    this.grupoServico.tipoGrupoServico = this.tipoGrupoServicos.find(\n      (x) => x.id === tipoGrupoServicoId,\n    );\n\n    this.subscriptions.push(\n      this.grupoServicoService.insert(this.grupoServico).subscribe(\n        (data) => {\n          const msg = 'Grupo de serviço cadastrado com sucesso!';\n\n          Swal.fire({\n            title: msg,\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n      ),\n    );\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n        <div class=\"wrapper wrapper-content animated fadeInRight\">\n          <div class=\"row\">\n              <div class=\"col-lg-12\">\n                  <div class=\"ibox float-e-margins\">\n                      <div class=\"ibox-title\">\n                          <h5>Formulário Para Cadastrar Ordem de Serviço &nbsp;&nbsp;<b class=\"text-danger\"><i class='fa fa-exclamation'></i> Campos obrigatórios</b></h5>\n                          <div class=\"ibox-tools\">\n                              <a class=\"collapse-link\">\n                                  <i class=\"fa fa-chevron-up\"></i>\n                              </a>\n                          </div>\n                      </div>\n                      <div class=\"ibox-content\">\n                          <form class=\"form-horizontal\" [formGroup]=\"form\" novalidate>\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Cliente <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\">\n                                <div class=\"col-md-8\">\n                                  <input type=\"text\"\n                                    formControlName=\"cliente\"\n                                    name=\"cliente\"\n                                    id=\"cliente\"\n                                    class=\"form-control\"\n                                    placeholder=\"digite o nome do cliente\"\n                                    aria-label=\"Search\"\n                                    autocomplete=\"off\"\n                                    #termoPesquisa\n                                    (keyup)=\"filtraUsuarioPeloNome(termoPesquisa.value)\"\n                                  >\n                                  <ul class=\"list-group\" style=\"position: absolute; z-index: 999; background-color: #fff;\" *ngIf=\"clienteSelecionado\">\n                                    <li class=\"list-group-item\" *ngFor=\"let item of clienteFiltrados\">\n                                      <a (click)=\"dadosClienteSelecionado(item.id)\">\n                                          {{ item.nome }}\n                                      </a>\n                                    </li>\n                                  </ul>\n                                </div>\n                                <br>\n                                <div class=\"col-sm-12\" *ngIf=\"dadosCliente\">\n\n                                  <div class=\"col-sm-8\">\n                                      <h3><strong>{{ cliente.nome }}</strong></h3>\n                                      <!-- <p><i class=\"fa fa-map-marker\"></i> {{ cliente.enderecos }} </p> -->\n                                      <address>\n                                          <strong>Cod. SuperGas {{ cliente.codigoSupergas }}</strong>\n                                          <p *ngFor=\"let endereco of cliente.enderecos\">\n                                            {{ endereco.logradouro }}, {{ endereco.numero }}\n                                            <br>\n                                            {{ endereco.bairro }},\n                                            <br>\n                                            {{ endereco.cidade.nome }}, {{ endereco.cidade.estado.uf }}\n                                            <br> cep: {{endereco.cep}}\n                                          </p>\n                                          <label title=\"Phone\">Fone:</label> {{ cliente.telefone }}\n                                      </address>\n                                  </div>\n                                </div>\n\n                                <small *ngIf=\"form.get('cliente').valid && form.get('cliente').touched\" class=\"form-text text-success\" >ok</small>\n                                <small *ngIf=\"!form.get('cliente').valid && form.get('cliente').touched\"class=\"form-text text-danger\" >Campo cliente requerido</small>\n                              </div>\n                            </div>\n\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Cod. Sap <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\">\n                                <div class=\"col-md-8\">\n                                  <input type=\"text\"\n                                    formControlName=\"codigoSupergas\"\n                                    name=\"codigoSupergas\"\n                                    id=\"codigoSupergas\"\n                                    class=\"form-control\"\n                                    placeholder=\"digite o cod. Sap\"\n                                    aria-label=\"Search\"\n                                    required\n                                    autocomplete=\"off\"\n                                    #grupoServicoPesquisa\n                                    (keyup)=\"filtraGrupoServicoCodSupergas(grupoServicoPesquisa.value)\"\n                                  >\n                                  <ul class=\"list-group\" style=\"position: absolute; z-index: 999; background-color: #fff;\" *ngIf=\"grupoServicoSelecionado\">\n                                    <li class=\"list-group-item\" *ngFor=\"let item of grupoServicosFiltrados\">\n                                      <a (click)=\"dadosGrupoServicoSelecionado(item.id)\">\n                                          {{ item.codigoSapItem }}\n                                      </a>\n                                    </li>\n                                  </ul>\n                                  <small *ngIf=\"form.get('codigoSupergas').valid && form.get('codigoSupergas').touched\" class=\"form-text text-success\" >ok</small>\n                                  <small *ngIf=\"!form.get('codigoSupergas').valid && form.get('codigoSupergas').touched\"class=\"form-text text-danger\" >Campo Cod. Supergas requerido</small>\n                                </div>\n                                <br>\n                                <div class=\"col-sm-12\" *ngIf=\"form.get('codigoSupergas').valid\">\n                                  <form class=\"form-horizontal\" style=\"margin-top: 20px;\" [formGroup]=\"formGrupoServico\" novalidate>\n                                      <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Código Sap <i class='fa fa-exclamation text-danger'></i></label>\n                                          <div class=\"col-sm-6\">\n                                              <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-vcard'></i></span>\n                                                  <input type=\"text\" class=\"form-control\" formControlName=\"codigoSapItem\" name=\"codigoSapItem\" required></div>\n                                                  <small *ngIf=\"formGrupoServico.get('codigoSapItem').valid && formGrupoServico.get('codigoSapItem').touched\" class=\"form-text text-success\" >ok</small>\n                                                  <small *ngIf=\"!formGrupoServico.get('codigoSapItem').valid && formGrupoServico.get('codigoSapItem').touched\"class=\"form-text text-danger\" >Campo código sap requerido</small>\n                                          </div>\n                                      </div>\n                                      <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Descrição Sap <i class='fa fa-exclamation text-danger'></i></label>\n                                          <div class=\"col-sm-6\">\n                                              <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-id-card'></i></span>\n                                                  <input type=\"text\" formControlName=\"descSapItem\" class=\"form-control\" name=\"descSapItem\" required></div>\n                                                  <small *ngIf=\"formGrupoServico.get('descSapItem').valid && formGrupoServico.get('descSapItem').touched\" class=\"form-text text-success\" >ok</small>\n                                                  <small *ngIf=\"!formGrupoServico.get('descSapItem').valid && formGrupoServico.get('descSapItem').touched\"class=\"form-text text-danger\" >Campo descrição sap requerido</small>\n                                          </div>\n                                      </div>\n\n                                      <div class=\"form-group\" id=\"data_1\"><label class=\"col-sm-2 control-label\">Valor Unitário <i class='fa fa-exclamation text-danger'></i></label>\n                                          <div class=\"col-sm-6\">\n                                              <div class=\"input-group date m-b\">\n                                                  <span class=\"input-group-addon\"><i class=\"fa fa-dollar\"></i></span>\n                                                  <input type=\"text\" formControlName=\"valorUnitario\" class=\"form-control\" name=\"valorUnitario\" required>\n                                              </div>\n                                                <small *ngIf=\"formGrupoServico.get('valorUnitario').valid && formGrupoServico.get('valorUnitario').touched\" class=\"form-text text-success\" >ok</small>\n                                                <small *ngIf=\"!formGrupoServico.get('valorUnitario').valid && formGrupoServico.get('valorUnitario').touched\"class=\"form-text text-danger\" >Campo valor unitário requerido</small>\n\n                                          </div>\n                                      </div>\n                                      <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Quantidade <i class='fa fa-exclamation text-danger'></i></label>\n                                        <div class=\"col-sm-6\">\n                                            <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-vcard'></i></span>\n                                                <input type=\"text\" class=\"form-control\" formControlName=\"quantidade\" name=\"quantidade\" required></div>\n                                                <small *ngIf=\"formGrupoServico.get('quantidade').valid && formGrupoServico.get('quantidade').touched\" class=\"form-text text-success\" >ok</small>\n                                                <small *ngIf=\"!formGrupoServico.get('quantidade').valid && formGrupoServico.get('quantidade').touched\"class=\"form-text text-danger\" >Quantidade requerido</small>\n                                        </div>\n                                      </div>\n                                      <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Serviço desc.<i class='fa fa-exclamation text-danger'></i></label>\n                                        <div class=\"col-sm-6\">\n                                          <div class=\"input-group date m-b\">\n                                              <span class=\"input-group-addon\"><i class=\"fa fa-vcard\"></i></span>\n                                              <input type=\"text\" formControlName=\"descServico\" class=\"form-control\" name=\"descServico\" required>\n                                          </div>\n                                            <small *ngIf=\"formGrupoServico.get('descServico').valid && formGrupoServico.get('descServico').touched\" class=\"form-text text-success\" >ok</small>\n                                            <small *ngIf=\"!formGrupoServico.get('descServico').valid && formGrupoServico.get('descServico').touched\"class=\"form-text text-danger\" >Campo descrição servico obrigatório</small>\n                                        </div>\n                                      </div>\n                                      <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Unidade G. Servico <i class='fa fa-exclamation text-danger'></i></label>\n                                          <div class=\"col-sm-10\">\n                                              <div class=\"col-lg-6 m-l-n\">\n                                                  <select class='form-control' formControlName=\"unidadeGrupoServico\" name='unidadeGrupoServico' required>\n                                                    <option *ngFor=\"let item of unidadeGrupoServicos\" value='{{ item.id }}'>{{ item.nome }}</option>\n                                                  </select>\n                                                  <small *ngIf=\"formGrupoServico.get('unidadeGrupoServico').valid && formGrupoServico.get('unidadeGrupoServico').touched\" class=\"form-text text-success\" >ok</small>\n                                                  <small *ngIf=\"!formGrupoServico.get('unidadeGrupoServico').valid && formGrupoServico.get('unidadeGrupoServico').touched\"class=\"form-text text-danger\" >Campo unidade grupo servico requerido</small>\n                                              </div>\n                                          </div>\n                                      </div>\n\n                                      <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Tipo G. Servico <i class='fa fa-exclamation text-danger'></i></label>\n                                        <div class=\"col-sm-10\">\n                                            <div class=\"col-lg-6 m-l-n\">\n                                                <select class='form-control' formControlName=\"tipoGrupoServico\" name='tipoGrupoServico' required>\n                                                  <option *ngFor=\"let item of tipoGrupoServicos\" value='{{ item.id }}'>{{ item.descricao }}</option>\n                                                </select>\n                                                <small *ngIf=\"formGrupoServico.get('tipoGrupoServico').valid && formGrupoServico.get('tipoGrupoServico').touched\" class=\"form-text text-success\" >ok</small>\n                                                <small *ngIf=\"!formGrupoServico.get('tipoGrupoServico').valid && formGrupoServico.get('tipoGrupoServico').touched\"class=\"form-text text-danger\" >Campo tipo grupo servico requerido</small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"hr-line-dashed\"></div>\n                                  </form>\n                                </div>\n                              </div>\n                            </div>\n\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Data <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\" >\n                                  <div class=\"input-group date m-b\">\n                                      <span class=\"input-group-addon\">\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                      </span>\n                                      <input matInput [matDatepicker]=\"picker\" disabled formControlName=\"data\" class=\"form-control\">\n                                      <mat-datepicker #picker disabled=\"false\" [startAt]=\"startDate\"></mat-datepicker>\n                                      <small *ngIf=\"form.get('data').valid && form.get('data').touched\" class=\"form-text text-success\" >ok</small>\n                                      <small *ngIf=\"!form.get('data').valid && form.get('data').touched\"class=\"form-text text-danger\" >Campo data requerido</small>\n                                  </div>\n                              </div>\n                            </div>\n\n\n                            <div class=\"hr-line-dashed\"></div>\n                            <div class=\"form-group\">\n                                <div class=\"col-sm-4 col-sm-offset-2\">\n                                    <button class=\"btn btn-w-m btn-warning\" type=\"reset\"><i class=\"fa fa-close\"></i> Limpar</button>\n                                    <button class=\"btn btn-w-m btn-primary\" type=\"button\" (click)=\"cadastrarOrdemServico()\" style=\"margin-left: 20px;\"><i class=\"fa fa-check\"></i> Adicionar Serviço</button>\n                                </div>\n                            </div>\n                          </form>\n                      </div>\n                  </div>\n              </div>\n          </div>\n\n          <div class=\"ibox-content\" *ngIf=\"ordemServicoCadastrada.id\">\n            <h3>Serviços da OS atual</h3>\n            <div class=\"table-responsive\">\n                <table class='table table-striped table-bordered table-hover dataTables-example'>\n                  <thead>\n                    <tr>\n                      <th>Código Sap</th>\n                      <th>Descrição Sap</th>\n                      <th>Unidade Grupo Serviço</th>\n                      <th>Tipo Grupo Servico</th>\n                      <th>Quantidade</th>\n                      <th>Valor Unitário</th>\n                      <th>Sub Total</th>\n                      <th>Ação</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr class='gradeX' *ngFor=\"let item of ordemServicoCadastrada.grupoServico\">\n                      <td> {{ item.codigoSapItem }} </td>\n                      <td> {{ item.descSapItem }} </td>\n                      <td> {{ item.unidadeGrupoServico?.nome }} </td>\n                      <td> {{ item.tipoGrupoServico.descricao }} </td>\n                      <td> {{ item.quantidade }} </td>\n                      <td> {{ item.valorUnitario | currency:'BRL':true }} </td>\n                      <td> {{ item.subTotal | currency:'BRL':true }} </td>\n\n                      <td>\n                          <Button class=\"btn btn-outline btn-danger\" (click)=\"removerItemServicoAtual(ordemServicoCadastrada.id, item.id)\"  style=\"margin-right: 5px;\">Remover</Button>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th></th>\n                      <th></th>\n                      <th></th>\n                      <th></th>\n                      <th></th>\n                      <th>Total</th>\n                      <th>{{ totalServicos | currency:'BRL':true }}</th>\n                      <th></th>\n\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n              <div class=\"hr-line-dashed\"></div>\n              <button class=\"btn btn-w-m btn-danger pull-right m-t-n-xs\" type=\"button\" (click)=\"finalizarOrdemDeServico()\" style=\"margin-left: 20px; margin-bottom: 25px;\"><i class=\"fa fa-check\"></i> Finalizar Ordem de Serviço</button>\n              <br><br>\n          </div>\n      </div>\n    </div>\n</div>\n","export * from './cadastrar.component';\n","export * from './atualizar';\nexport * from './cadastrar';\nexport * from './listar';\nexport * from './visualizar';\nexport * from './order-service.component';\n","export * from './listar.component';\n","import { Component, OnInit } from '@angular/core';\nimport {\n  OrdemServico,\n  OrdemServicoService,\n  OrdemServicoHasGrupoServico,\n  OrdemServicoGrupoServicoService,\n  GerarRelatorio,\n} from 'src/app/modules/shared';\nimport { Subscription } from 'rxjs';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport * as html2pdf from 'html2pdf.js';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-listar',\n  templateUrl: './listar.component.html',\n  styleUrls: ['./listar.component.css'],\n})\nexport class ListarComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  ordemServicos: OrdemServico[] = [];\n\n  ordemServicosRelatorio: OrdemServico[] = [];\n\n  ordemServicosGrupoServico: OrdemServicoHasGrupoServico[] = [];\n\n  oSGS = {} as OrdemServicoHasGrupoServico;\n\n  startDate = new Date();\n\n  mostrarRelatorioImpressao = false;\n\n  form: FormGroup;\n\n  relatorioFormulario = false;\n\n  valorTotal = 0;\n\n  dadosRelatorio = {} as GerarRelatorio;\n\n  nomeRelatorio: string;\n\n  constructor(\n    private ordemServicoService: OrdemServicoService,\n    private fb: FormBuilder,\n    private ordemServicoGrupoServicoService: OrdemServicoGrupoServicoService,\n  ) {}\n\n  ngOnInit(): void {\n    this.criarForm();\n    this.carregaDadosOrdemServicos();\n    this.carregaDadosOSGS();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  criarForm(): void {\n    this.form = this.fb.group({\n      nomerelatorio: ['', Validators.required],\n      datainicio: ['', Validators.required],\n      datafim: ['', Validators.required],\n    });\n  }\n\n  carregaDadosOrdemServicos(): void {\n    this.subscriptions.push(\n      this.ordemServicoService.getAll().subscribe(\n        (data) => {\n          this.ordemServicos = data;\n        },\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 3000,\n          });\n        },\n      ),\n    );\n  }\n\n  habilitarDesabilitarFormRelatorio(): void {\n    this.relatorioFormulario = !this.relatorioFormulario;\n    this.mostrarRelatorioImpressao = false;\n  }\n\n  gerarRelatorio(): void {\n    if (this.form.invalid) {\n      return;\n    }\n\n    this.dadosRelatorio = this.form.value;\n    this.nomeRelatorio = this.dadosRelatorio.nomerelatorio;\n\n    if (this.dadosRelatorio.datainicio > this.dadosRelatorio.datafim) {\n      const msg = 'Data inicio não pode ser maior que data fim!';\n      Swal.fire({\n        title: msg,\n        icon: 'error',\n        showConfirmButton: false,\n        timer: 3000,\n      });\n      return;\n    }\n    this.valorTotal = 0;\n    this.ordemServicosRelatorio = [];\n    this.ordemServicos.forEach((x) => {\n      x.valorTotalOS = 0;\n      x.data = new Date(x.data);\n\n      if (\n        x.data >= this.dadosRelatorio.datainicio &&\n        x.data <= this.dadosRelatorio.datafim\n      ) {\n        x.grupoServico.forEach((gs) => {\n          this.oSGS = this.ordemServicosGrupoServico.find((osgs) => {\n            return (\n              osgs.id.grupoServico.id === gs.id &&\n              osgs.id.ordemServico.id === x.id\n            );\n          });\n\n          if (this.oSGS) {\n            x.valorTotalOS += this.oSGS.quantidade * this.oSGS.valor;\n          }\n        });\n        this.valorTotal += x.valorTotalOS;\n        this.ordemServicosRelatorio.push(x);\n      }\n    });\n\n    const msg = 'Relatorio gerado com sucesso!';\n    Swal.fire({\n      title: msg,\n      icon: 'success',\n      showConfirmButton: false,\n      timer: 2000,\n    });\n\n    this.mostrarRelatorioImpressao = true;\n  }\n\n  gerarPDF(): void {\n    const content: Element = document.getElementById('relatoriomensal');\n\n    const options = {\n      margin: 1,\n      filename: `${this.nomeRelatorio}.pdf`,\n      image: { type: 'jpeg' },\n      html2canvas: { scale: 2 },\n      jsPDF: { orientation: 'portrait' },\n    };\n\n    html2pdf().set(options).from(content).save();\n  }\n\n  carregaDadosOSGS(): void {\n    this.subscriptions.push(\n      this.ordemServicoGrupoServicoService.getAll().subscribe(\n        (data) => {\n          this.ordemServicosGrupoServico = data;\n        },\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 3000,\n          });\n        },\n      ),\n    );\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n\n      <div class=\"wrapper wrapper-content animated fadeInRight\">\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <div class=\"ibox float-e-margins\">\n                    <div class=\"ibox-title\">\n                        <h5>Tabela de registros de todas as OS</h5>\n                        <div class=\"ibox-tools\">\n                            <a class=\"collapse-link\">\n                                <i class=\"fa fa-chevron-up\"></i>\n                            </a>\n                        </div>\n\n                    </div>\n\n                    <div class=\"ibox-content\">\n                      <button class=\"btn btn-primary btn-outline\" (click)=\"habilitarDesabilitarFormRelatorio()\">Gerar relatorio</button>\n                      <button class=\"btn btn-outline btn-success pull-right\" *ngIf=\"mostrarRelatorioImpressao\" (click)=\"gerarPDF()\">Exportar Relatorio PDF</button>\n                    </div>\n                    <div class=\"ibox-content\" *ngIf=\"relatorioFormulario\">\n                      <div class=\"inbox-content\">\n                        <form class=\"form-horizontal\" [formGroup]=\"form\" novalidate>\n                          <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Nome Relatorio <i class='fa fa-exclamation text-danger'></i></label>\n                            <div class=\"col-sm-10\">\n                              <div class=\"col-md-8\">\n                                <input type=\"text\" class=\"form-control\" formControlName=\"nomerelatorio\" name=\"nomerelatorio\" required>\n                                <small *ngIf=\"form.get('nomerelatorio').valid && form.get('nomerelatorio').touched\" class=\"form-text text-success\" >ok</small>\n                                <small *ngIf=\"!form.get('nomerelatorio').valid && form.get('nomerelatorio').touched\"class=\"form-text text-danger\" >Campo código sap requerido</small>\n                              </div>\n                            </div>\n                          </div>\n\n                          <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Data Inicio<i class='fa fa-exclamation text-danger'></i></label>\n                            <div class=\"col-sm-10\" >\n                                <div class=\"input-group date m-b\">\n                                    <span class=\"input-group-addon\">\n                                      <mat-datepicker-toggle matSuffix [for]=\"datainicio\"></mat-datepicker-toggle>\n                                    </span>\n                                    <input matInput [matDatepicker]=\"datainicio\" disabled formControlName=\"datainicio\" class=\"form-control\">\n                                    <mat-datepicker #datainicio disabled=\"false\" [startAt]=\"startDate\"></mat-datepicker>\n                                    <small *ngIf=\"form.get('datainicio').valid && form.get('datainicio').touched\" class=\"form-text text-success\" >ok</small>\n                                    <small *ngIf=\"!form.get('datainicio').valid && form.get('datainicio').touched\"class=\"form-text text-danger\" >Campo data requerido</small>\n                                </div>\n                            </div>\n                          </div>\n\n                          <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Data Fim<i class='fa fa-exclamation text-danger'></i></label>\n                            <div class=\"col-sm-10\" >\n                                <div class=\"input-group date m-b\">\n                                    <span class=\"input-group-addon\">\n                                      <mat-datepicker-toggle matSuffix [for]=\"datafim\"></mat-datepicker-toggle>\n                                    </span>\n                                    <input matInput [matDatepicker]=\"datafim\" disabled formControlName=\"datafim\" class=\"form-control\">\n                                    <mat-datepicker #datafim disabled=\"false\" [startAt]=\"startDate\"></mat-datepicker>\n                                    <small *ngIf=\"form.get('datafim').valid && form.get('datafim').touched\" class=\"form-text text-success\" >ok</small>\n                                    <small *ngIf=\"!form.get('datafim').valid && form.get('datafim').touched\"class=\"form-text text-danger\" >Campo data requerido</small>\n                                </div>\n                            </div>\n                          </div>\n                          <div class=\"hr-line-dashed\"></div>\n                            <div class=\"form-group\">\n                                <div class=\"col-sm-4 col-sm-offset-2\">\n                                    <button class=\"btn btn-w-m btn-warning\" type=\"button\" (click)=\"habilitarDesabilitarFormRelatorio()\"><i class=\"fa fa-close\"></i> Cancelar</button>\n                                    <button class=\"btn btn-w-m btn-primary\" type=\"button\" (click)=\"gerarRelatorio()\" style=\"margin-left: 20px;\"><i class=\"fa fa-check\"></i> Gerar relatorio</button>\n                                </div>\n                            </div>\n                        </form>\n                      </div>\n                    </div>\n                    <div class=\"ibox-content\" *ngIf=\"mostrarRelatorioImpressao\">\n                      <h1>Relatorio para impressão</h1>\n                      <br>\n                      <div id=\"relatoriomensal\" #relatoriomensal>\n                        <div>\n                          <img src=\"../../../../../../assets/CCOS/logo-relatorio.jpeg\" alt=\"logorelatorio\">\n                          <img src=\"../../../../../../assets/CCOS/logo-empresa.jpeg\" alt=\"logo-empresa\">\n                        </div>\n                        <H2>AB SERVIÇOS MECÂNICOS - CAPEX - REF. {{ nomeRelatorio }}</H2>\n                        <div class=\"table-responsive\">\n                          <table class=\"table table-striped table-bordered table-hover dataTables-example\">\n                            <thead>\n                              <tr>\n                                <th>EQP</th>\n                                <th>DIA</th>\n                                <th>CLIENTE</th>\n                                <th>MUNICIPIO</th>\n                                <th>VALOR</th>\n                                <th>PST</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor=\"let item of ordemServicosRelatorio\">\n                                <td>1</td>\n                                <td>{{ item.data | date: 'dd/MM/y' }}</td>\n                                <td>{{ item.cliente?.nome }}</td>\n                                <td *ngFor=\"let item2 of item.cliente?.enderecos\">\n                                  {{ item2.cidade.nome }} - {{ item2.cidade.estado.nome }}\n                                </td>\n                                <td>{{ item?.valorTotalOS | currency:'BRL':true }}</td>\n                                <td>01</td>\n                              </tr>\n                            </tbody>\n                            <thead>\n                              <tr>\n                                <th></th>\n                                <th></th>\n                                <th></th>\n                                <th>Total</th>\n                                <th>{{ valorTotal | currency:'BRL':true }}</th>\n                                <th></th>\n                              </tr>\n                            </thead>\n                          </table>\n                        </div>\n                        <br>\n                        <div class=\"hr-line-dashed\"></div>\n                        <br>\n\n                      </div>\n                    </div>\n                    <div class=\"ibox-content\" *ngIf=\"!relatorioFormulario\">\n                        <h2 *ngIf=\"ordemServicos.length <= 0\">\n                          Nenhum ordem de servico Cadastrada <br>\n                          <a href=\"/order-service/cadastrar\">\n                            <Button class=\"btn btn-outline btn-primary\" style=\"margin-top: 20px;\">Cadastrar Nova Ordem de Serviço</Button>\n                          </a>\n                        </h2>\n\n                        <div class=\"table-responsive\" *ngIf=\"ordemServicos.length > 0\">\n                            <table class='table table-striped table-bordered table-hover dataTables-example'>\n                              <thead>\n                                <tr>\n                                <th>Código Supergas</th>\n                                <th>Data</th>\n                                <th>Cliente</th>\n                                <th>Status</th>\n                                <th>Ação</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr class='gradeX' *ngFor=\"let item of ordemServicos\">\n                                  <td> {{ item.codigoSupergas }} </td>\n                                  <td> {{ item.data | date: 'd/MM/y' }} </td>\n                                  <td> {{ item.cliente.nome }}</td>\n                                  <td> {{ item.status === 1 ? 'Aberto' : 'Fechado' }}</td>\n                                  <td>\n                                    <a href=\"/order-service/{{ item.status === 1 ? 'atualizar' : 'visualizar' }}/{{item.id}}\">\n                                      <Button *ngIf=\"item.status === 1\" class=\"btn btn-outline btn-primary\" style=\"margin-right: 5px;\">Editar</Button>\n                                      <Button *ngIf=\"item.status === 0\" class=\"btn btn-outline btn-success\" style=\"margin-right: 5px;\">Detalhes</Button>\n                                    </a>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({ template: `<router-outlet></router-outlet>` })\nexport class OrderServiceComponent {}\n","export * from './visualizar.component';\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport * as html2pdf from 'html2pdf.js';\nimport {\n  OrdemServicoService,\n  OrdemServico,\n  OrdemServicoGrupoServicoService,\n} from 'src/app/modules/shared';\nimport { Subscription } from 'rxjs';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-visualizar',\n  templateUrl: './visualizar.component.html',\n  styleUrls: ['./visualizar.component.css'],\n})\nexport class VisualizarComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  ordemServicoId: number;\n\n  ordemServico = {} as OrdemServico;\n\n  relatorio = 'OrdemDeServico';\n\n  totalServicos: number;\n\n  constructor(\n    private route: ActivatedRoute,\n    private ordemServicoService: OrdemServicoService,\n    private ordemServicoGrupoServicoService: OrdemServicoGrupoServicoService,\n  ) {}\n\n  ngOnInit(): void {\n    this.ordemServicoId = Number(this.route.snapshot.paramMap.get('osid'));\n    this.carregaDadosOS();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  carregaDadosOS(): void {\n    this.subscriptions.push(\n      this.ordemServicoService.findById(this.ordemServicoId).subscribe(\n        (data) => {\n          this.ordemServico = data;\n          this.quandoServicoGrupoServico();\n        },\n        (err) => console.error(err),\n      ),\n    );\n  }\n\n  quandoServicoGrupoServico(): void {\n    const idOS = this.ordemServicoId;\n    this.totalServicos = 0;\n\n    this.ordemServico.grupoServico.forEach((x) => {\n      this.ordemServicoGrupoServicoService.findById(idOS, x.id).subscribe(\n        (data) => {\n          x.quantidade = data.quantidade;\n          x.valorUnitario = data.valor;\n          this.totalServicos += data.quantidade * data.valor;\n          x.subTotal = 0;\n          x.subTotal = data.quantidade * data.valor;\n          return x;\n        },\n        (err) => {\n          const msg = err.error;\n          Swal.fire({\n            title: msg,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        },\n      );\n    });\n  }\n\n  gerarPDF(): void {\n    const options = {\n      filename: `${this.relatorio}.pdf`,\n      image: { type: 'jpeg' },\n      html2canvas: {},\n      jsPDF: { orientation: 'portrait' },\n    };\n\n    const content: Element = document.getElementById('relatorioUsuario');\n\n    html2pdf().from(content).set(options).save();\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n  <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n      <div>\n        <h3>Os para impressão</h3>\n        <button class=\"btn btn-primary btn-outline pull-right\" style=\"margin-left: 10px;\" (click)=\"gerarPDF()\">Exportar OS para PDF</button>\n      </div>\n      <div id=\"relatorioUsuario\">\n        <div>\n          <img src=\"../../../../../../assets/CCOS/logo-relatorio.jpeg\" alt=\"logorelatorio\">\n          <img src=\"../../../../../../assets/CCOS/logo-empresa.jpeg\" alt=\"logo-empresa\">\n        </div>\n        <h1>CCOS - Serviços DF</h1>\n        <h2>{{ordemServico.cliente?.nome}}</h2>\n        <address>\n          <strong>Cod. SuperGas {{ ordemServico.cliente?.codigoSupergas }}</strong>\n          <p *ngFor=\"let endereco of ordemServico.cliente?.enderecos\">\n            {{ endereco.logradouro }}, {{ endereco.numero }}\n            <br>\n            {{ endereco.bairro }},\n            <br>\n            {{ endereco.cidade.nome }}, {{ endereco.cidade.estado.uf }}\n            <br> cep: {{endereco.cep}}\n          </p>\n          <label title=\"Phone\">Fone:</label> {{ ordemServico.cliente?.telefone }}\n        </address>\n        <div class=\"hr-line-dashed\"></div>\n        <div class=\"table-responsive\">\n          <table class='table table-striped table-bordered table-hover dataTables-example'>\n            <thead>\n              <tr>\n                <th>Código Sap</th>\n                <th>Descrição Sap</th>\n                <th>Unidade Grupo Serviço</th>\n                <th>Tipo Grupo Servico</th>\n                <th>Quantidade</th>\n                <th>Valor Unitário</th>\n                <th>Sub Total</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr class='gradeX' *ngFor=\"let item of ordemServico.grupoServico\">\n                <td> {{ item.codigoSapItem }} </td>\n                <td> {{ item.descSapItem }} </td>\n                <td> {{ item.unidadeGrupoServico?.nome }} </td>\n                <td> {{ item.tipoGrupoServico.descricao }} </td>\n                <td> {{ item.quantidade }} </td>\n                <td> {{ item.valorUnitario | currency:'BRL':true }} </td>\n                <td> {{ item.subTotal | currency:'BRL':true }} </td>\n              </tr>\n              <tr>\n                <th></th>\n                <th></th>\n                <th></th>\n                <th></th>\n                <th></th>\n                <th>Total</th>\n                <th>{{ totalServicos | currency:'BRL':true }}</th>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div class=\"hr-line-dashed\"></div>\n      </div>\n\n    <button class=\"btn btn-primary btn-outline pull-right\" onclick=\"history.go(-1);\">Voltar</button>\n    <br>\n    <div class=\"hr-line-dashed\"></div>\n    <br>\n  </div>\n</div>\n","export * from './order-service.module';\nexport * from './router-order-service.module';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RouterModule } from '@angular/router';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';\nimport {\n  AtualizarComponent,\n  CadastrarComponent,\n  ListarComponent,\n  OrderServiceComponent,\n  VisualizarComponent,\n} from './components';\nimport {\n  MenuModule,\n  SharedModule,\n  AppDateAdapter,\n  APP_DATE_FORMATS,\n} from '../../shared';\n\n@NgModule({\n  declarations: [\n    OrderServiceComponent,\n    AtualizarComponent,\n    CadastrarComponent,\n    ListarComponent,\n    VisualizarComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    ReactiveFormsModule,\n    SharedModule,\n    MenuModule,\n    MatDatepickerModule,\n  ],\n  providers: [\n    { provide: DateAdapter, useClass: AppDateAdapter },\n    { provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS },\n  ],\n})\nexport class OrderServiceModule {}\n","import { NgModule } from '@angular/core';\n\nimport { RouterModule, Routes } from '@angular/router';\n\nimport {\n  AtualizarComponent,\n  CadastrarComponent,\n  ListarComponent,\n  OrderServiceComponent,\n  VisualizarComponent,\n} from './components';\nimport { AutenticaRotaSerivce, AuthGuardService } from '../../shared';\n\nexport const OrderServiceRoutes: Routes = [\n  {\n    path: 'order-service',\n    component: OrderServiceComponent,\n    canActivate: [AuthGuardService],\n\n    children: [\n      {\n        path: 'pesquisar',\n        component: ListarComponent,\n        canActivate: [AutenticaRotaSerivce],\n      },\n      {\n        path: 'cadastrar',\n        component: CadastrarComponent,\n        canActivate: [AutenticaRotaSerivce],\n      },\n      { path: 'atualizar/:osid', component: AtualizarComponent },\n      { path: 'visualizar/:osid', component: VisualizarComponent },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(OrderServiceRoutes)],\n\n  exports: [RouterModule],\n})\nexport class OrderServiceRoutingModule {}\n","export * from './autentication';\nexport * from './system';\nexport * from './shared';\nexport * from './ccos';\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-barra-de-menu',\n  templateUrl: './barra-de-menu.component.html',\n  styleUrls: ['./barra-de-menu.component.css'],\n})\nexport class BarraDeMenuComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  logoff() {\n    localStorage.clear();\n  }\n}\n","<nav class=\"navbar navbar-static-top white-bg\" role=\"navigation\" style=\"margin-bottom: 0\">\n  <div class=\"navbar-header\">\n      <a class=\"navbar-minimalize minimalize-styl-2 btn btn-primary \" href=\"#\"><i class=\"fa fa-bars\"></i> </a>\n  </div>\n    <ul class=\"nav navbar-top-links navbar-right\">\n        <li>\n            <span class=\"m-r-sm text-muted welcome-message\">Bem-vindo ao CCOS - Serviços DF</span>\n        </li>\n        <!-- <li class=\"dropdown\">\n            <a class=\"dropdown-toggle count-info\" data-toggle=\"dropdown\" href=\"#\">\n                <i class=\"fa fa-envelope\"></i>  <span class=\"label label-warning\">16</span>\n            </a>\n            <ul class=\"dropdown-menu dropdown-messages\">\n                <li>\n                    <div class=\"dropdown-messages-box\">\n                        <a href=\"profile.html\" class=\"pull-left\">\n                            <img alt=\"image\" class=\"img-circle\" src=\"../../../../../../assets/img/a7.jpg\">\n                        </a>\n                        <div>\n                            <small class=\"pull-right\">46h ago</small>\n                            <strong>Mike Loreipsum</strong> started following <strong>Monica Smith</strong>. <br>\n                            <small class=\"text-muted\">3 days ago at 7:58 pm - 10.06.2014</small>\n                        </div>\n                    </div>\n                </li>\n                <li class=\"divider\"></li>\n                <li>\n                    <div class=\"dropdown-messages-box\">\n                        <a href=\"profile.html\" class=\"pull-left\">\n                            <img alt=\"image\" class=\"img-circle\" src=\"../../../../../../assets/img/a4.jpg\">\n                        </a>\n                        <div>\n                            <small class=\"pull-right text-navy\">5h ago</small>\n                            <strong>Chris Johnatan Overtunk</strong> started following <strong>Monica Smith</strong>. <br>\n                            <small class=\"text-muted\">Yesterday 1:21 pm - 11.06.2014</small>\n                        </div>\n                    </div>\n                </li>\n                <li class=\"divider\"></li>\n                <li>\n                    <div class=\"dropdown-messages-box\">\n                        <a href=\"profile.html\" class=\"pull-left\">\n                            <img alt=\"image\" class=\"img-circle\" src=\"../../../../../../assets/img/profile.jpg\">\n                        </a>\n                        <div>\n                            <small class=\"pull-right\">23h ago</small>\n                            <strong>Monica Smith</strong> love <strong>Kim Smith</strong>. <br>\n                            <small class=\"text-muted\">2 days ago at 2:30 am - 11.06.2014</small>\n                        </div>\n                    </div>\n                </li>\n                <li class=\"divider\"></li>\n                <li>\n                    <div class=\"text-center link-block\">\n                        <a href=\"mailbox.html\">\n                            <i class=\"fa fa-envelope\"></i> <strong>Read All Messages</strong>\n                        </a>\n                    </div>\n                </li>\n            </ul>\n        </li> -->\n        <!-- <li class=\"dropdown\">\n            <a class=\"dropdown-toggle count-info\" data-toggle=\"dropdown\" href=\"#\">\n                <i class=\"fa fa-bell\"></i>  <span class=\"label label-primary\">8</span>\n            </a>\n            <ul class=\"dropdown-menu dropdown-alerts\">\n                <li>\n                    <a href=\"mailbox.html\">\n                        <div>\n                            <i class=\"fa fa-envelope fa-fw\"></i> You have 16 messages\n                            <span class=\"pull-right text-muted small\">4 minutes ago</span>\n                        </div>\n                    </a>\n                </li>\n                <li class=\"divider\"></li>\n                <li>\n                    <a href=\"profile.html\">\n                        <div>\n                            <i class=\"fa fa-twitter fa-fw\"></i> 3 New Followers\n                            <span class=\"pull-right text-muted small\">12 minutes ago</span>\n                        </div>\n                    </a>\n                </li>\n                <li class=\"divider\"></li>\n                <li>\n                    <a href=\"grid_options.html\">\n                        <div>\n                            <i class=\"fa fa-upload fa-fw\"></i> Server Rebooted\n                            <span class=\"pull-right text-muted small\">4 minutes ago</span>\n                        </div>\n                    </a>\n                </li>\n                <li class=\"divider\"></li>\n                <li>\n                    <div class=\"text-center link-block\">\n                        <a href=\"notifications.html\">\n                            <strong>See All Alerts</strong>\n                            <i class=\"fa fa-angle-right\"></i>\n                        </a>\n                    </div>\n                </li>\n            </ul>\n        </li> -->\n\n\n        <li>\n            <a href=\"/login\" (click)=\"logoff()\">\n                <i class=\"fa fa-sign-out\"></i> SAIR\n            </a>\n        </li>\n\n    </ul>\n</nav>\n","export * from './barra-de-menu.component';\n","export * from './menu';\nexport * from './barra-de-menu';\nexport * from './not-found';\n","export * from './menu.module';\n","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Usuario, Permissoes, PerfilPermissaoDTO } from '../../models';\nimport { StorangeService, PerfilPermissaoService } from '../../services';\nimport { API_CONFIG } from '../../config';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css'],\n})\nexport class MenuComponent implements OnInit {\n  usuario = {} as Usuario;\n\n  baseUrlServidor = API_CONFIG.baseUrl;\n\n  permissoes: Permissoes[];\n\n  permissoesFiltradas: Permissoes[];\n\n  private subscriptions: Subscription[] = [];\n\n  perfilPermissaoDTO = {} as PerfilPermissaoDTO;\n\n  constructor(\n    private storange: StorangeService,\n    private perfilPermissaoService: PerfilPermissaoService,\n  ) {}\n\n  ngOnInit(): void {\n    this.usuario = this.storange.getLocalUser();\n    this.permissoes = this.usuario.perfil.permissoes;\n    this.permissoesFiltradas = this.permissoes;\n    this.filtrarPermissoesStatus();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  logoff(): void {\n    localStorage.clear();\n  }\n\n  filtrarPermissoesStatus(): void {\n    this.permissoes.forEach((x) => {\n      this.subscriptions.push(\n        this.perfilPermissaoService\n          .getId(this.usuario.perfil.id, x.id)\n          .subscribe((data) => {\n            this.perfilPermissaoDTO = data;\n            if (this.perfilPermissaoDTO.status === 0) {\n              this.permissoesFiltradas = this.permissoesFiltradas.filter(\n                (p) => {\n                  return p.id !== x.id;\n                },\n              );\n              return data;\n            }\n            return data;\n          }),\n      );\n    });\n  }\n\n  retornaicone(descricao: string): string {\n    switch (descricao) {\n      case 'Usuário':\n        return 'user';\n      case 'Perfil':\n        return 'users';\n      case 'Permissão':\n        return 'lock';\n      case 'Dashboard':\n        return 'dashboard';\n      case 'Home':\n        return 'home';\n      case 'Log':\n        return 'copy';\n      case 'Cliente':\n        return 'id-badge';\n      case 'Ordem De Serviço':\n        return 'gears';\n      case 'Grupo de Serviço':\n        return 'gear';\n      default:\n        return 'drupal';\n    }\n  }\n}\n","<nav class=\"navbar-default navbar-static-side\" role=\"navigation\">\n  <div class=\"sidebar-collapse\">\n      <ul class=\"nav metismenu\" id=\"side-menu\">\n\n        <!-- PERFIL DE USUARIO LOGADO -->\n        <li class=\"nav-header\">\n              <div class=\"dropdown profile-element\"> <span>\n                      <img *ngIf=\"usuario.imageProfile\" alt=\"image\" class=\"img-circle\" src=\"data:image/jpeg;base64,{{ usuario.imageProfile }}\" style=\"width: 70px; height: 70px;\"/>\n                      <img *ngIf=\"!usuario.imageProfile\" alt=\"image\" class=\"img-circle\" src=\"../../../../../assets/img/user-default.png\" style=\"width: 70px; height: 70px;\"/>\n                       </span>\n                  <a data-toggle=\"dropdown\" class=\"dropdown-toggle\" href=\"#\">\n                      <span class=\"clear\"> <span class=\"block m-t-xs\"> <strong class=\"font-bold\">{{ usuario.nome }}</strong>\n                       </span> <span class=\"text-muted text-xs block\">{{ usuario.perfil?.nome }} <b class=\"caret\"></b></span> </span> </a>\n                  <ul class=\"dropdown-menu animated fadeInRight m-t-xs\">\n                      <li><a href=\"/usuario/perfil\">Profile</a></li>\n                      <li class=\"divider\"></li>\n                      <li><a href=\"/login\" (click)=\"logoff()\">Logout</a></li>\n                  </ul>\n              </div>\n              <div class=\"logo-element\">\n                  CCOS\n              </div>\n          </li>\n\n          <!-- MENU LATERAL -->\n          <li *ngFor=\"let item of permissoesFiltradas\">\n            <a *ngIf=\"!item.permissaoPai\" href=\"{{ item.url }}\">\n              <i class=\"fa fa-{{retornaicone(item.descricao) }}\"></i>\n              <span class=\"nav-label\">{{ item.descricao }}</span>\n              <span class=\"fa arrow\" *ngIf=\"(item.descricao != 'Home' && item.descricao != 'Dashboard')\"></span>\n            </a>\n            <ul class=\"nav nav-second-level\" *ngIf=\"(item.descricao != 'Home' && item.descricao != 'Dashboard')\">\n              <li *ngFor=\"let item2 of permissoesFiltradas\">\n                <a *ngIf=\"item.id == item2.permissaoPai?.id\" href=\"{{ item2.url }}\">{{ item2.descricao }}</a>\n              </li>\n            </ul>\n          </li>\n        </ul>\n  </div>\n</nav>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { MenuComponent } from './menu.component';\n\n@NgModule({\n  declarations: [MenuComponent],\n  imports: [CommonModule, RouterModule],\n  exports: [MenuComponent],\n})\nexport class MenuModule {}\n","export * from './not-found.component';\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css'],\n})\nexport class NotFoundComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"middle-box text-center animated fadeInDown\">\n  <h1>404</h1>\n  <h2 class=\"font-bold\">Página não encontrada</h2>\n\n  <div class=\"error-desc\">\n    <h3>\n      Desculpe, mas a página que você está procurando não foi encontrada. Tente verificar o URL em busca de erros e pressione o botão de atualização no seu navegador\n      ou tente encontrar outra coisa em nosso aplicativo. Caso deseje clique no botão voltar abaixo para retorna a ultima página.\n    </h3>\n      <form class=\"form-inline m-t\" role=\"form\">\n          <button type=\"button\" onclick='history.go(-1)' class=\"btn btn-primary\">Voltar</button>\n      </form>\n  </div>\n</div>\n\n<!-- Mainly scripts -->\n<script src=\"../../../../../assets/js/jquery-3.1.1.min.js\"></script>\n<script src=\"../../../../../assets/js/bootstrap.min.js\"></script>\n","export const API_CONFIG = {\n  baseUrl: 'http://localhost:7780',\n  // baseUrl: 'https://core-base-springboot-api.herokuapp.com',\n};\n","export * from './api.config';\nexport * from './storangeKeys.config';\n","export const STORAGE_KEYS = {\n  tokenUser: '@corebase:token',\n  localUser: '@corebase:user',\n  localAllUsers: '@corebase:alluser',\n  localProfiles: '@corebase:perfils',\n  localPermitions: '@corebase:permissoes',\n  localpefpems: '@corebase:perfilpermissoes',\n  localinfoUser: '@corebase:infoUserLogged',\n};\n","export * from './mascara.directive';\n","import { Directive, HostListener, Input, ElementRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\n@Directive({\n  selector: '[mascara]',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: MascaraDirective,\n      multi: true,\n    },\n  ],\n})\nexport class MascaraDirective implements ControlValueAccessor {\n  onTouched: any;\n\n  onChange: any;\n\n  @Input('mascara') mascara: string;\n\n  constructor(private el: ElementRef) {}\n\n  writeValue(value: any) {\n    if (value) {\n      this.el.nativeElement.value = this.aplicarMascara(value);\n    }\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  @HostListener('keyup', ['$event'])\n  onKeyup($event: any) {\n    const valor: string = $event.target.value.replace(/\\D/g, '');\n\n    // retorna caso pressionado backspace\n    if ($event.keyCode === 8) {\n      this.onChange(valor);\n      return;\n    }\n\n    const pad = this.mascara.replace(/\\D/g, '').replace(/9/g, '_');\n    if (valor.length <= pad.length) {\n      this.onChange(valor);\n    }\n\n    $event.target.value = this.aplicarMascara(valor);\n  }\n\n  @HostListener('blur', ['$event'])\n  onBlur($event: any) {\n    if ($event.target.value.length === this.mascara.length) {\n      return;\n    }\n    this.onChange('');\n    $event.target.value = '';\n  }\n\n  aplicarMascara(valor: string): string {\n    valor = valor.replace(/\\D/g, '');\n    const pad = this.mascara.replace(/\\D/g, '').replace(/9/g, '_');\n    const valorMask = valor + pad.substring(0, pad.length - valor.length);\n    let valorMaskPos = 0;\n\n    valor = '';\n    for (let i = 0; i < this.mascara.length; i++) {\n      if (isNaN(parseInt(this.mascara.charAt(i)))) {\n        valor += this.mascara.charAt(i);\n      } else {\n        valor += valorMask[valorMaskPos++];\n      }\n    }\n\n    if (valor.indexOf('_') > -1) {\n      valor = valor.substr(0, valor.indexOf('_'));\n    }\n\n    return valor;\n  }\n}\n","export * from './shared.module';\nexport * from './components';\nexport * from './models';\nexport * from './services';\nexport * from './shared.module';\nexport * from './validators';\nexport * from './util';\nexport * from './interceptors';\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { API_CONFIG } from '../config/api.config';\n\nimport { StorangeService } from '../services';\n\n@Injectable()\nexport class Authinterceptor implements HttpInterceptor {\n  constructor(public storage: StorangeService) {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler,\n  ): Observable<HttpEvent<any>> {\n    const localUser = this.storage.getLocalTokenUser();\n\n    const N = API_CONFIG.baseUrl.length;\n    const requestToAPI = req.url.substring(0, N) === API_CONFIG.baseUrl;\n\n    if (localUser && requestToAPI) {\n      const authReq = req.clone({\n        headers: req.headers.set('Authorization', `Bearer ${localUser.token}`),\n      });\n\n      return next.handle(authReq);\n    }\n    return next.handle(req);\n  }\n}\n","export * from './auth.interceptor';\n","/**\n * @author Mardonio S Costa\n * @since 0.0.1\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'cpfMask',\n})\nexport class CpfPipe implements PipeTransform {\n  /**\n   * Formata um CPF ou retorna seu valor passado caso inválido.\n   * O CPF informado deve ser composto por 11 caracteres numéricos.\n   *\n   * @param string cpf\n   * @return string\n   */\n  transform(cpf: string): string {\n    if (!cpf) {\n      return '';\n    }\n\n    const cpfValor = cpf.replace(/\\D/g, '');\n\n    if (cpfValor.length !== 11) {\n      return cpf;\n    }\n\n    const cpfLista = cpfValor.match(/^(\\d{3})(\\d{3})(\\d{3})(\\d{2})$/);\n\n    if (cpfLista && cpfLista.length === 5) {\n      cpf = `${cpfLista[1]}.${cpfLista[2]}.${cpfLista[3]}-${cpfLista[4]}`;\n    }\n\n    return cpf;\n  }\n}\n","export * from './cpf.pipe';\n","export * from './login.service';\nexport * from './user-logged.service';\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Login, Forgot, TokenUser } from '../../models';\nimport { API_CONFIG } from '../../config';\nimport { StorangeService } from '../storange.service';\n\n@Injectable()\nexport class LoginService {\n  private readonly PATH: string = '/auth';\n\n  helper = new JwtHelperService();\n\n  constructor(\n    private http: HttpClient,\n    private localStorangeService: StorangeService,\n  ) {}\n\n  logar(login: Login): Observable<any> {\n    return this.http.post(`${API_CONFIG.baseUrl}/login`, login, {\n      observe: 'response',\n      responseType: 'text',\n    });\n  }\n\n  successLogin(authorizationValue: string): void {\n    const tok = authorizationValue.substring(7);\n\n    const { sub } = this.helper.decodeToken(tok);\n    const tokenUser: TokenUser = {\n      token: tok,\n      email: sub,\n    };\n\n    this.localStorangeService.setLocalTokenUser(tokenUser);\n  }\n\n  logout(): void {\n    this.localStorangeService.setLocalTokenUser(null);\n  }\n\n  forgot(email: Forgot): Observable<any> {\n    return this.http.post(`${API_CONFIG.baseUrl + this.PATH}/forgot`, email);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { StorangeService } from '../storange.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserLoggedService {\n  constructor(private storange: StorangeService) {}\n\n  userLogged(): boolean {\n    const localUser = this.storange.getLocalUser();\n    return !!localUser;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Cliente, NewClienteDTO } from '../../models';\nimport { API_CONFIG } from '../../config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ClienteService {\n  private readonly PATH: string = '/clientes';\n\n  constructor(private http: HttpClient) {}\n\n  getAll(): Observable<Cliente[]> {\n    return this.http.get<Cliente[]>(API_CONFIG.baseUrl + this.PATH);\n  }\n\n  insert(clienteDTO: NewClienteDTO): Observable<any> {\n    return this.http.post(API_CONFIG.baseUrl + this.PATH, clienteDTO);\n  }\n\n  update(cliente: Cliente): Observable<any> {\n    return this.http.put(\n      `${API_CONFIG.baseUrl + this.PATH}/${cliente.id}`,\n      cliente,\n    );\n  }\n\n  findById(id: number): Observable<Cliente> {\n    return this.http.get<Cliente>(`${API_CONFIG.baseUrl + this.PATH}/${id}`);\n  }\n}\n","// https://viacep.com.br/ws/72015035/json\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { DadosCEP } from '../../models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConsultaCEPService {\n  private readonly PATH: string = 'https://viacep.com.br/ws/';\n\n  constructor(private http: HttpClient) {}\n\n  getDadosCep(cep: string): Observable<DadosCEP> {\n    return this.http.get<DadosCEP>(`${this.PATH + cep}/json`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Estado, Cidade } from '../../models';\nimport { API_CONFIG } from '../../config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EnderecoService {\n  private readonly PATHUF: string = '/estados';\n\n  constructor(private http: HttpClient) {}\n\n  getAllEstados(): Observable<Estado[]> {\n    return this.http.get<Estado[]>(API_CONFIG.baseUrl + this.PATHUF);\n  }\n\n  getAllEstadoCidades(idEstado: number): Observable<Cidade[]> {\n    return this.http.get<Cidade[]>(\n      `${API_CONFIG.baseUrl + this.PATHUF}/${idEstado}/cidades`,\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { GrupoServico } from '../../models';\nimport { API_CONFIG } from '../../config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GrupoServicoService {\n  private readonly PATH: string = '/grupoServicos';\n\n  constructor(private http: HttpClient) {}\n\n  getAll(): Observable<GrupoServico[]> {\n    return this.http.get<GrupoServico[]>(API_CONFIG.baseUrl + this.PATH);\n  }\n\n  insert(grupoServico: GrupoServico): Observable<any> {\n    return this.http.post(API_CONFIG.baseUrl + this.PATH, grupoServico);\n  }\n\n  findById(id: number): Observable<GrupoServico> {\n    return this.http.get<GrupoServico>(\n      `${API_CONFIG.baseUrl + this.PATH}/${id}`,\n    );\n  }\n\n  update(grupoServico: GrupoServico): Observable<any> {\n    return this.http.put(\n      `${API_CONFIG.baseUrl + this.PATH}/${grupoServico.id}`,\n      grupoServico,\n    );\n  }\n}\n","export * from './unidade-grupo-servico.service';\nexport * from './tipo-grupo-servico.service';\nexport * from './cliente.service';\nexport * from './grupo-servico.service';\nexport * from './ordem-servico.service';\nexport * from './consultacep.service';\nexport * from './endereco.service';\nexport * from './ordem-servico-grupo-servico.service';\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {\n  OrdemServicoHasGrupoServico,\n  OrdemServiceGrupoServiceDTO,\n} from '../../models';\nimport { API_CONFIG } from '../../config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrdemServicoGrupoServicoService {\n  private readonly PATH: string = '/ordemServicogrupoServico';\n\n  constructor(private http: HttpClient) {}\n\n  getAll(): Observable<OrdemServicoHasGrupoServico[]> {\n    return this.http.get<OrdemServicoHasGrupoServico[]>(\n      API_CONFIG.baseUrl + this.PATH,\n    );\n  }\n\n  findById(\n    idOS: number,\n    idGS: number,\n  ): Observable<OrdemServicoHasGrupoServico> {\n    return this.http.get<OrdemServicoHasGrupoServico>(\n      `${API_CONFIG.baseUrl + this.PATH}/${idOS}/${idGS}`,\n    );\n  }\n\n  insert(\n    ordemServicoHasGrupoServico: OrdemServiceGrupoServiceDTO,\n  ): Observable<any> {\n    return this.http.post(\n      API_CONFIG.baseUrl + this.PATH,\n      ordemServicoHasGrupoServico,\n    );\n  }\n\n  delete(idOS: number, idGS: number): Observable<any> {\n    return this.http.delete(\n      `${API_CONFIG.baseUrl + this.PATH}/${idOS}/${idGS}`,\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { OrdemServico } from '../../models';\nimport { API_CONFIG } from '../../config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrdemServicoService {\n  private readonly PATH: string = '/ordemServicos';\n\n  constructor(private http: HttpClient) {}\n\n  getAll(): Observable<OrdemServico[]> {\n    return this.http.get<OrdemServico[]>(API_CONFIG.baseUrl + this.PATH);\n  }\n\n  insert(ordemServico: OrdemServico): Observable<any> {\n    return this.http.post(API_CONFIG.baseUrl + this.PATH, ordemServico);\n  }\n\n  findById(id: number): Observable<OrdemServico> {\n    return this.http.get<OrdemServico>(\n      `${API_CONFIG.baseUrl + this.PATH}/${id}`,\n    );\n  }\n\n  update(ordemServico: OrdemServico): Observable<any> {\n    return this.http.put(\n      `${API_CONFIG.baseUrl + this.PATH}/${ordemServico.id}`,\n      ordemServico,\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { TipoGrupoServico } from '../../models';\nimport { API_CONFIG } from '../../config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TipoGrupoServicoService {\n  private readonly PATH: string = '/tipoGrupoServicos';\n\n  constructor(private http: HttpClient) {}\n\n  getAll(): Observable<TipoGrupoServico[]> {\n    return this.http.get<TipoGrupoServico[]>(API_CONFIG.baseUrl + this.PATH);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { UnidadeGrupoServico } from '../../models';\nimport { API_CONFIG } from '../../config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnidadeGrupoServicoService {\n  private readonly PATH: string = '/unidadeGrupoServicos';\n\n  constructor(private http: HttpClient) {}\n\n  getAll(): Observable<UnidadeGrupoServico[]> {\n    return this.http.get<UnidadeGrupoServico[]>(API_CONFIG.baseUrl + this.PATH);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  Router,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { StorangeService } from '../storange.service';\n\n@Injectable()\nexport class AutenticaRotaSerivce implements CanActivate {\n  constructor(\n    private router: Router,\n    private storageService: StorangeService,\n  ) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot,\n  ): boolean {\n    const userLogged = this.storageService.getLocalUser();\n\n    const pp = this.storageService.getLocalPP();\n\n    if (!pp) {\n      localStorage.clear();\n      return false;\n    }\n\n    const { url } = state;\n\n    const urlValida = userLogged.perfil?.permissoes?.find((u) => u.url === url);\n\n    if (urlValida) {\n      const statusURLPerfil = pp.find(\n        (p) =>\n          p.perfilId === userLogged.perfil?.id &&\n          p.permissaoId === urlValida.id,\n      );\n\n      if (statusURLPerfil.status === 1) {\n        return true;\n      }\n    }\n    this.router.navigate(['/home']);\n    return false;\n  }\n}\n","export * from './user-guard.service';\nexport * from './logged-guard.service';\nexport * from './autentica-rota-user.service';\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { StorangeService } from '../storange.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n  constructor(\n    private router: Router,\n    private storageService: StorangeService,\n  ) {}\n\n  canActivate(): boolean {\n    const userLogged = this.storageService.getLocalUser();\n    if (userLogged) {\n      if (userLogged.status === 1) {\n        return true;\n      }\n    }\n\n    this.storageService.setLocalUser(null);\n    this.router.navigate(['/login']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { UsuarioService } from '../system';\nimport { StorangeService } from '../storange.service';\n\n@Injectable()\nexport class UserGuardService implements CanActivate {\n  constructor(\n    private router: Router,\n    private usuarioService: UsuarioService,\n    private storageService: StorangeService,\n  ) {}\n\n  canActivate(): boolean {\n    const userLogged = this.storageService.getLocalUser();\n\n    this.router.navigate(['/login']);\n    return false;\n  }\n}\n","export * from './autenticacao';\nexport * from './system';\nexport * from './storange.service';\nexport * from './guard';\nexport * from './ccos';\n","import { Injectable } from '@angular/core';\nimport {\n  Usuario,\n  Perfil,\n  Permissoes,\n  PerfilPermissaoDTO,\n  TokenUser,\n} from '../models';\nimport { STORAGE_KEYS } from '../config';\n\n@Injectable()\nexport class StorangeService {\n  getLocalUser(): Usuario {\n    const usr = localStorage.getItem(STORAGE_KEYS.localUser);\n\n    if (usr == null) {\n      return null;\n    }\n\n    return JSON.parse(usr);\n  }\n\n  setLocalUser(obj: Usuario): void {\n    if (obj == null) {\n      localStorage.removeItem(STORAGE_KEYS.localUser);\n      return;\n    }\n\n    localStorage.setItem(STORAGE_KEYS.localUser, JSON.stringify(obj));\n  }\n\n  getLocalTokenUser(): TokenUser {\n    const tok = localStorage.getItem(STORAGE_KEYS.tokenUser);\n\n    if (tok == null) {\n      return null;\n    }\n\n    return JSON.parse(tok);\n  }\n\n  setLocalTokenUser(obj: TokenUser): void {\n    if (obj == null) {\n      localStorage.removeItem(STORAGE_KEYS.tokenUser);\n      return;\n    }\n\n    localStorage.setItem(STORAGE_KEYS.tokenUser, JSON.stringify(obj));\n  }\n\n  getLocalPerfils(): Perfil[] {\n    const pfs = localStorage.getItem(STORAGE_KEYS.localProfiles);\n\n    if (pfs == null) {\n      return null;\n    }\n\n    return JSON.parse(pfs);\n  }\n\n  setLocalPerfils(obj: Perfil[]): void {\n    if (obj == null) {\n      localStorage.removeItem(STORAGE_KEYS.localProfiles);\n      return;\n    }\n\n    localStorage.setItem(STORAGE_KEYS.localProfiles, JSON.stringify(obj));\n  }\n\n  getLocalPermition(): Permissoes[] {\n    const pms = localStorage.getItem(STORAGE_KEYS.localPermitions);\n\n    if (pms == null) {\n      return null;\n    }\n\n    return JSON.parse(pms);\n  }\n\n  setLocalPermition(obj: Permissoes[]): void {\n    if (obj == null) {\n      localStorage.removeItem(STORAGE_KEYS.localPermitions);\n      return;\n    }\n\n    localStorage.setItem(STORAGE_KEYS.localPermitions, JSON.stringify(obj));\n  }\n\n  getLocalPP(): PerfilPermissaoDTO[] {\n    const pps = localStorage.getItem(STORAGE_KEYS.localpefpems);\n\n    if (pps == null) {\n      return null;\n    }\n\n    return JSON.parse(pps);\n  }\n\n  setLocalPP(obj: PerfilPermissaoDTO[]): void {\n    if (obj == null) {\n      localStorage.removeItem(STORAGE_KEYS.localpefpems);\n      return;\n    }\n\n    localStorage.setItem(STORAGE_KEYS.localpefpems, JSON.stringify(obj));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { HistoricoAcessoDTO } from '../../models';\nimport { API_CONFIG } from '../../config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HistoricoAcessoService {\n  private readonly PATH: string = '/historicoacesso';\n\n  constructor(private http: HttpClient) {}\n\n  getAllHistoryAccess(): Observable<HistoricoAcessoDTO[]> {\n    return this.http.get<HistoricoAcessoDTO[]>(API_CONFIG.baseUrl + this.PATH);\n  }\n\n  getAllHistoryAccessPagination(\n    direction = 'ASC',\n    linesPerPage = 10,\n    orderBy = 'dataAcesso',\n    page = 0,\n  ): Observable<any> {\n    return this.http.get(\n      `${\n        API_CONFIG.baseUrl + this.PATH\n      }/page?direction=${direction}&linesPerPage=${linesPerPage}&orderBy=${orderBy}&page=${page}`,\n    );\n  }\n}\n","export * from './perfil-permissao.service';\nexport * from './usuario.service';\nexport * from './perfil.service';\nexport * from './permissao.service';\nexport * from './historicoAcesso.service';\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { PerfilPermissaoDTO } from '../../models';\nimport { API_CONFIG } from '../../config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PerfilPermissaoService {\n  private readonly PATH: string = '/perfilpermissao';\n\n  constructor(private http: HttpClient) {}\n\n  getAll(): Observable<PerfilPermissaoDTO[]> {\n    return this.http.get<PerfilPermissaoDTO[]>(API_CONFIG.baseUrl + this.PATH);\n  }\n\n  getId(perfilID: number, permissaoId: number): Observable<PerfilPermissaoDTO> {\n    return this.http.get<PerfilPermissaoDTO>(\n      `${API_CONFIG.baseUrl + this.PATH}/${perfilID}/${permissaoId}`,\n    );\n  }\n\n  update(perfilPermissao: PerfilPermissaoDTO): Observable<any> {\n    return this.http.put(\n      `${API_CONFIG.baseUrl + this.PATH}/${perfilPermissao.perfilId}/${\n        perfilPermissao.permissaoId\n      }`,\n      perfilPermissao,\n    );\n  }\n\n  insert(perfilPermissao: PerfilPermissaoDTO): Observable<any> {\n    return this.http.post(API_CONFIG.baseUrl + this.PATH, perfilPermissao);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { PerfilDTO, Perfil } from '../../models';\nimport { API_CONFIG } from '../../config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PerfilService {\n  private readonly PATH: string = '/perfils';\n\n  constructor(private http: HttpClient) {}\n\n  getAll(): Observable<PerfilDTO[]> {\n    return this.http.get<PerfilDTO[]>(API_CONFIG.baseUrl + this.PATH);\n  }\n\n  getId(perfilID: number): Observable<Perfil> {\n    return this.http.get<Perfil>(\n      `${API_CONFIG.baseUrl + this.PATH}/${perfilID}`,\n    );\n  }\n\n  insert(perfil: PerfilDTO): Observable<any> {\n    return this.http.post(API_CONFIG.baseUrl + this.PATH, perfil);\n  }\n\n  update(id: number, perfil: PerfilDTO): Observable<any> {\n    return this.http.put(`${API_CONFIG.baseUrl + this.PATH}/${id}`, perfil);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Permissoes, PermissaoDTO } from '../../models';\nimport { API_CONFIG } from '../../config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PermissaoService {\n  private readonly PATH: string = '/permissoes';\n\n  constructor(private http: HttpClient) {}\n\n  getAll(): Observable<Permissoes[]> {\n    return this.http.get<Permissoes[]>(API_CONFIG.baseUrl + this.PATH);\n  }\n\n  insert(permissao: PermissaoDTO): Observable<any> {\n    return this.http.post(API_CONFIG.baseUrl + this.PATH, permissao);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { UsuarioListAllDTO, UsuarioNewDTO, Usuario } from '../../models';\nimport { API_CONFIG } from '../../config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UsuarioService {\n  private readonly PATH: string = '/usuarios';\n\n  constructor(private http: HttpClient) {}\n\n  getAll(): Observable<UsuarioListAllDTO[]> {\n    return this.http.get<UsuarioListAllDTO[]>(API_CONFIG.baseUrl + this.PATH);\n  }\n\n  getUserById(id: number): Observable<Usuario> {\n    return this.http.get<Usuario>(`${API_CONFIG.baseUrl + this.PATH}/${id}`);\n  }\n\n  getUserByEmail(email: string): Observable<Usuario> {\n    return this.http.get<Usuario>(\n      `${API_CONFIG.baseUrl + this.PATH}/email?email=${email}`,\n    );\n  }\n\n  insert(usuario: UsuarioNewDTO): Observable<any> {\n    return this.http.post(API_CONFIG.baseUrl + this.PATH, usuario);\n  }\n\n  updateUser(usuario: UsuarioListAllDTO): Observable<any> {\n    return this.http.put(\n      `${API_CONFIG.baseUrl + this.PATH}/${usuario.id}`,\n      usuario,\n    );\n  }\n\n  updateImage(file: FormData, id: number): Observable<any> {\n    return this.http.post(\n      `${API_CONFIG.baseUrl + this.PATH}/picture/${id}`,\n      file,\n    );\n  }\n\n  updateStatus(usuario: UsuarioListAllDTO): Observable<any> {\n    return this.http.patch(\n      `${API_CONFIG.baseUrl + this.PATH}/status/${usuario.id}`,\n      usuario,\n    );\n  }\n\n  updateSenha(usuario: UsuarioListAllDTO): Observable<any> {\n    return this.http.patch(\n      `${API_CONFIG.baseUrl + this.PATH}/senha/${usuario.id}`,\n      usuario,\n    );\n  }\n\n  update(usuario: UsuarioListAllDTO): Observable<any> {\n    return this.http.put(\n      `${API_CONFIG.baseUrl + this.PATH}/${usuario.id}`,\n      usuario,\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n  LoginService,\n  StorangeService,\n  PerfilPermissaoService,\n  UsuarioService,\n  PerfilService,\n  PermissaoService,\n  UserLoggedService,\n  UserGuardService,\n  AuthGuardService,\n  AutenticaRotaSerivce,\n  HistoricoAcessoService,\n  UnidadeGrupoServicoService,\n  ClienteService,\n  GrupoServicoService,\n  OrdemServicoGrupoServicoService,\n  OrdemServicoService,\n  TipoGrupoServicoService,\n  ConsultaCEPService,\n  EnderecoService,\n} from './services';\nimport {\n  BarraDeMenuComponent,\n  MenuModule,\n  NotFoundComponent,\n} from './components';\nimport { MascaraDirective } from './directives';\nimport { CpfPipe } from './pipe';\n\n@NgModule({\n  declarations: [\n    BarraDeMenuComponent,\n    NotFoundComponent,\n    MascaraDirective,\n    CpfPipe,\n  ],\n  imports: [CommonModule, MenuModule],\n  providers: [\n    LoginService,\n    StorangeService,\n    PerfilPermissaoService,\n    UsuarioService,\n    PerfilService,\n    PermissaoService,\n    UserLoggedService,\n    UserGuardService,\n    AuthGuardService,\n    AutenticaRotaSerivce,\n    HistoricoAcessoService,\n    UnidadeGrupoServicoService,\n    ClienteService,\n    GrupoServicoService,\n    OrdemServicoGrupoServicoService,\n    OrdemServicoService,\n    TipoGrupoServicoService,\n    ConsultaCEPService,\n    EnderecoService,\n  ],\n  exports: [BarraDeMenuComponent, NotFoundComponent, MascaraDirective, CpfPipe],\n})\nexport class SharedModule {}\n","import { MatDateFormats, NativeDateAdapter } from '@angular/material/core';\n\nexport class AppDateAdapter extends NativeDateAdapter {\n  format(date: Date, displayFormat: Object): string {\n    if (displayFormat === 'input') {\n      let day: string = date.getDate().toString();\n      day = +day < 10 ? `0${day}` : day;\n      let month: string = (date.getMonth() + 1).toString();\n      month = +month < 10 ? `0${month}` : month;\n      const year = date.getFullYear();\n      return `${day}/${month}/${year}`;\n    }\n    return date.toDateString();\n  }\n}\nexport const APP_DATE_FORMATS: MatDateFormats = {\n  parse: {\n    dateInput: { month: 'short', year: 'numeric', day: 'numeric' },\n  },\n  display: {\n    dateInput: 'input',\n    monthYearLabel: { year: 'numeric', month: 'numeric' },\n    dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n    monthYearA11yLabel: { year: 'numeric', month: 'long' },\n  },\n};\n","export * from './format-datepicker';\n","/**\n * @author Mardonio S Costa\n * @since 0.0.1\n */\nimport { AbstractControl } from '@angular/forms';\n\nexport class CpfValidator {\n  static validate(control: AbstractControl): { [key: string]: boolean } {\n    if (this.cpfValido(control.value)) {\n      return null;\n    }\n    return { cpf: true };\n  }\n\n  static cpfValido(cpf: any): boolean {\n    cpf = !cpf || cpf.replace(/\\D/g, '');\n    const cpfsInvsRegex = /1{11}|2{11}|3{11}|4{11}|5{11}|6{11}|7{11}|8{11}|9{11}|0{11}/;\n\n    if (!cpf || cpf.length !== 11 || cpfsInvsRegex.test(cpf)) {\n      return false;\n    }\n\n    let x = cpf.length - 1;\n    let digitosTemp = 0;\n    let e = 0;\n    let h = '';\n\n    for (let i = 0; i <= cpf.length - 3; i += 1) {\n      digitosTemp = cpf.substring(i, i + 1);\n      e += digitosTemp * x;\n      x -= 1;\n      h += digitosTemp;\n    }\n\n    let digitos = 11 - (e % 11);\n    if (digitos === 10 || digitos === 11) {\n      digitos = 0;\n    }\n\n    const cpfSemDigVer = cpf.substring(0, cpf.length - 2) + digitos;\n    x = 11;\n    e = 0;\n    for (let j = 0; j <= cpf.length - 2; j += 1) {\n      e += cpfSemDigVer.substring(j, j + 1) * x;\n      x -= 1;\n    }\n\n    let digVerificador = 11 - (e % 11);\n    if (digVerificador === 10 || digVerificador === 11) {\n      digVerificador = 0;\n    }\n\n    return (\n      `${digitos}${digVerificador}` ===\n      cpf.substring(cpf.length, cpf.length - 2)\n    );\n  }\n}\n","export * from './cpf.validator';\n","import { Component } from '@angular/core';\n\n@Component({ template: `<router-outlet></router-outlet>` })\nexport class DashboardComponent {}\n","import { Component } from '@angular/core';\nimport { ChartOptions, ChartType, ChartDataSets } from 'chart.js';\nimport { Label } from 'ng2-charts';\n\n@Component({\n  selector: 'app-bar-chart',\n  templateUrl: './bar-chart.component.html',\n  styleUrls: ['./bar-chart.component.css'],\n})\nexport class BarChartComponent {\n  barChartOptions: ChartOptions = {\n    responsive: true,\n  };\n\n  barChartLabels: Label[] = [\n    'Apple',\n    'Banana',\n    'Kiwifruit',\n    'Blueberry',\n    'Orange',\n    'Grapes',\n  ];\n\n  barChartType: ChartType = 'bar';\n\n  barChartLegend = true;\n\n  barChartPlugins = [];\n\n  barChartData: ChartDataSets[] = [\n    { data: [45, 37, 60, 70, 46, 33], label: 'Best Fruits' },\n  ];\n}\n","<div class=\"chart-wrapper\">\n  <canvas baseChart\n    [datasets]=\"barChartData\"\n    [labels]=\"barChartLabels\"\n    [options]=\"barChartOptions\"\n    [plugins]=\"barChartPlugins\"\n    [legend]=\"barChartLegend\"\n    [chartType]=\"barChartType\">\n  </canvas>\n</div>\n","export * from './bar-chart.component';\n","import { Component, OnInit } from '@angular/core';\nimport { ChartOptions, ChartType, ChartDataSets } from 'chart.js';\nimport { Color } from 'ng2-charts';\n\n@Component({\n  selector: 'app-bubble-chart',\n  templateUrl: './bubble-chart.component.html',\n  styleUrls: ['./bubble-chart.component.css'],\n})\nexport class BubbleChartComponent {\n  public bubbleChartOptions: ChartOptions = {\n    responsive: true,\n    scales: {\n      xAxes: [\n        {\n          ticks: {\n            min: 0,\n            max: 50,\n          },\n        },\n      ],\n      yAxes: [\n        {\n          ticks: {\n            min: 0,\n            max: 50,\n          },\n        },\n      ],\n    },\n  };\n\n  public bubbleChartType: ChartType = 'bubble';\n\n  public bubbleChartLegend = true;\n\n  public bubbleChartData: ChartDataSets[] = [\n    {\n      data: [\n        { x: 15, y: 15, r: 15 },\n        { x: 25, y: 15, r: 25 },\n        { x: 36, y: 12, r: 33 },\n        { x: 10, y: 18, r: 18 },\n      ],\n      label: 'Investment Equities',\n    },\n  ];\n}\n","<div class=\"chart-wrapper\">\n  <canvas baseChart\n    [datasets]=\"bubbleChartData\"\n    [options]=\"bubbleChartOptions\"\n    [legend]=\"bubbleChartLegend\"\n    [chartType]=\"bubbleChartType\">\n  </canvas>\n</div>\n","export * from './bubble-chart.component';\n","import { Component } from '@angular/core';\nimport { ChartType } from 'chart.js';\nimport { MultiDataSet, Label } from 'ng2-charts';\n\n@Component({\n  selector: 'app-doughnut-chart',\n  templateUrl: './doughnut-chart.component.html',\n  styleUrls: ['./doughnut-chart.component.css'],\n})\nexport class DoughnutChartComponent {\n  doughnutChartLabels: Label[] = ['BMW', 'Ford', 'Tesla'];\n\n  doughnutChartData: MultiDataSet = [[55, 25, 20]];\n\n  doughnutChartType: ChartType = 'doughnut';\n}\n","<div class=\"chart-wrapper\">\n  <canvas baseChart\n    [data]=\"doughnutChartData\"\n    [labels]=\"doughnutChartLabels\"\n    [chartType]=\"doughnutChartType\">\n  </canvas>\n</div>\n","export * from './doughnut-chart.component';\n","export * from './bar-chart';\nexport * from './bubble-chart';\nexport * from './doughnut-chart';\nexport * from './line-chart';\nexport * from './pie-chart';\nexport * from './radar-chart';\n","export * from './line-chart.component';\n","import { Component, OnInit } from '@angular/core';\nimport { ChartDataSets } from 'chart.js';\nimport { Color, Label } from 'ng2-charts';\n\n@Component({\n  selector: 'app-line-chart',\n  templateUrl: './line-chart.component.html',\n  styleUrls: ['./line-chart.component.css'],\n})\nexport class LineChartComponent implements OnInit {\n  lineChartData: ChartDataSets[];\n\n  lineChartLabels: Label[];\n\n  lineChartOptions;\n\n  lineChartColors: Color[];\n\n  lineChartLegend;\n\n  lineChartPlugins = [];\n\n  lineChartType;\n\n  ngOnInit(): void {\n    this.carregaDadosGrafico();\n  }\n\n  carregaDadosGrafico(): void {\n    this.lineChartData = [\n      { data: [85, 72, 78, 75, 77, 75], label: 'Crude oil prices' },\n    ];\n\n    this.lineChartLabels = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n    ];\n\n    this.lineChartOptions = {\n      responsive: true,\n    };\n\n    this.lineChartColors = [\n      {\n        borderColor: 'black',\n        backgroundColor: 'rgba(150,255,0,0.28)',\n      },\n    ];\n\n    this.lineChartLegend = true;\n\n    this.lineChartPlugins = [];\n\n    this.lineChartType = 'line';\n  }\n}\n","<div class=\"chart-wrapper\">\n  <canvas baseChart\n      [datasets]=\"lineChartData\"\n      [labels]=\"lineChartLabels\"\n      [options]=\"lineChartOptions\"\n      [colors]=\"lineChartColors\"\n      [legend]=\"lineChartLegend\"\n      [chartType]=\"lineChartType\"\n      [plugins]=\"lineChartPlugins\">\n  </canvas>\n</div>\n","export * from './pie-chart.component';\n","import { Component } from '@angular/core';\nimport { ChartType, ChartOptions } from 'chart.js';\nimport {\n  SingleDataSet,\n  Label,\n  monkeyPatchChartJsLegend,\n  monkeyPatchChartJsTooltip,\n} from 'ng2-charts';\n\n@Component({\n  selector: 'app-pie-chart',\n  templateUrl: './pie-chart.component.html',\n  styleUrls: ['./pie-chart.component.css'],\n})\nexport class PieChartComponent {\n  public pieChartOptions: ChartOptions = {\n    responsive: true,\n  };\n\n  public pieChartLabels: Label[] = [['SciFi'], ['Drama'], 'Comedy'];\n\n  public pieChartData: SingleDataSet = [30, 50, 20];\n\n  public pieChartType: ChartType = 'pie';\n\n  public pieChartLegend = true;\n\n  public pieChartPlugins = [];\n\n  constructor() {\n    monkeyPatchChartJsTooltip();\n    monkeyPatchChartJsLegend();\n  }\n}\n","<div class=\"chart-wrapper\">\n  <canvas baseChart\n    [data]=\"pieChartData\"\n    [labels]=\"pieChartLabels\"\n    [chartType]=\"pieChartType\"\n    [options]=\"pieChartOptions\"\n    [plugins]=\"pieChartPlugins\"\n    [legend]=\"pieChartLegend\">\n  </canvas>\n</div>\n","export * from './radar-chart.component';\n","import { Component } from '@angular/core';\nimport { ChartDataSets, ChartType, RadialChartOptions } from 'chart.js';\nimport { Label } from 'ng2-charts';\n\n@Component({\n  selector: 'app-radar-chart',\n  templateUrl: './radar-chart.component.html',\n  styleUrls: ['./radar-chart.component.css'],\n})\nexport class RadarChartComponent {\n  public radarChartOptions: RadialChartOptions = {\n    responsive: true,\n  };\n\n  public radarChartLabels: Label[] = [\n    'Punctuality',\n    'Communication',\n    'Problem Solving',\n    'Team Player',\n    'Coding',\n    'Technical Knowledge',\n    'Meeting Deadlines',\n  ];\n\n  public radarChartData: ChartDataSets[] = [\n    { data: [0, 1, 2, 3, 4, 5, 6], label: 'Employee Skill Analysis' },\n  ];\n\n  public radarChartType: ChartType = 'radar';\n}\n","<div class=\"chart-wrapper\">\n  <canvas baseChart\n    [datasets]=\"radarChartData\"\n    [options]=\"radarChartOptions\"\n    [labels]=\"radarChartLabels\"\n    [chartType]=\"radarChartType\">\n  </canvas>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n\n        <div class=\"wrapper wrapper-content animated fadeInRight\">\n          <div class=\"row\">\n              <div class=\"col-lg-6\">\n                  <div class=\"ibox float-e-margins\">\n                      <div class=\"ibox-title\">\n                          <h5>Line Chart Example\n                              <small>With custom colors.</small>\n                          </h5>\n                      </div>\n                      <div class=\"ibox-content\">\n                          <div>\n                            <app-line-chart></app-line-chart>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n              <div class=\"col-lg-6\">\n                  <div class=\"ibox float-e-margins\">\n                      <div class=\"ibox-title\">\n                          <h5>Bar Chart Example</h5>\n                      </div>\n                      <div class=\"ibox-content\">\n                          <div>\n                            <app-bar-chart></app-bar-chart>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n          <div class=\"row\">\n              <div class=\"col-lg-6\">\n                  <div class=\"ibox float-e-margins\">\n                      <div class=\"ibox-title\">\n                          <h5>Buuble Area</h5>\n\n                      </div>\n                      <div class=\"ibox-content\">\n                          <div class=\"text-center\">\n                            <app-bubble-chart></app-bubble-chart>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n              <div class=\"col-lg-6\">\n                  <div class=\"ibox float-e-margins\">\n                      <div class=\"ibox-title\">\n                          <h5>Pie </h5>\n\n                      </div>\n                      <div class=\"ibox-content\">\n                          <div>\n                            <app-pie-chart></app-pie-chart>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n          <div class=\"row\">\n              <div class=\"col-lg-6\">\n                  <div class=\"ibox float-e-margins\">\n                      <div class=\"ibox-title\">\n                          <h5>Radar Chart Example</h5>\n                      </div>\n                      <div class=\"ibox-content\">\n                          <div>\n                            <app-radar-chart></app-radar-chart>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n              <div class=\"col-lg-6\">\n                  <div class=\"ibox float-e-margins\">\n                      <div class=\"ibox-title\">\n                          <h5>Doughnut Chart Example</h5>\n                      </div>\n                      <div class=\"ibox-content\">\n                          <div>\n                            <app-doughnut-chart></app-doughnut-chart>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n    </div>\n\n</div>\n","export * from './home.component';\n","export * from './home';\nexport * from './graficos';\nexport * from './dashboard.component';\n","import { NgModule } from '@angular/core';\n\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomeComponent, DashboardComponent } from './components';\nimport { AuthGuardService, AutenticaRotaSerivce } from '../../shared';\n\nexport const Dashboardoutes: Routes = [\n  {\n    path: 'dashboard',\n\n    component: DashboardComponent,\n    canActivate: [AuthGuardService, AutenticaRotaSerivce],\n\n    children: [{ path: '', component: HomeComponent }],\n  },\n  { path: 'home', component: HomeComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(Dashboardoutes)],\n\n  exports: [RouterModule],\n})\nexport class DashboardRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { ChartsModule } from 'ng2-charts';\n\nimport {\n  HomeComponent,\n  DashboardComponent,\n  BarChartComponent,\n  BubbleChartComponent,\n  DoughnutChartComponent,\n  LineChartComponent,\n  PieChartComponent,\n  RadarChartComponent,\n} from './components';\nimport { MenuModule, SharedModule } from '../../shared';\n\n@NgModule({\n  declarations: [\n    HomeComponent,\n    DashboardComponent,\n    BarChartComponent,\n    BubbleChartComponent,\n    LineChartComponent,\n    PieChartComponent,\n    RadarChartComponent,\n    DoughnutChartComponent,\n  ],\n  imports: [CommonModule, MenuModule, RouterModule, SharedModule, ChartsModule],\n})\nexport class DashboardModule {}\n","export * from './dashboard.module';\nexport * from './dashboard-routing.module';\n","export * from './dashboard';\nexport * from './user';\nexport * from './permition';\nexport * from './profile';\nexport * from './log';\n","export * from './lista-logs';\nexport * from './log-acesso';\nexport * from './log.component';\n","export * from './lista-logs.component';\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-lista-logs',\n  templateUrl: './lista-logs.component.html',\n  styleUrls: ['./lista-logs.component.css'],\n})\nexport class ListaLogsComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n\n      <div class=\"wrapper wrapper-content animated fadeInRight\">\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <div class=\"ibox float-e-margins\">\n                    <div class=\"ibox-title\">\n                        <h5>Tabela de registros retornados da base de dados</h5>\n                        <div class=\"ibox-tools\">\n                            <a class=\"collapse-link\">\n                                <i class=\"fa fa-chevron-up\"></i>\n                            </a>\n                        </div>\n                    </div>\n                    <div class=\"ibox-content\">\n\n                        <div class=\"table-responsive\">\n                            <table class='table table-striped table-bordered table-hover dataTables-example'>\n                              <thead>\n                                <tr>\n                                <th>Código</th>\n                                <th>Data da interação</th>\n                                <th>Tabela</th>\n                                <th>Operação</th>\n                                <th>Cliente</th>\n                                <th>Usuário</th>\n                                <th>Foto</th>\n                                <th>Email</th>\n                                <th>Perfil</th>\n                                <th>IP</th>\n                                <th>Status</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr class='gradeX'>\n                                  <td>1316</td>\n                                  <td>22/05/2020 17:52</td>\n                                  <td>monitoramento</td>\n                                  <td>DELETE</td>\n                                  <td>Tecnisys</td>\n                                  <td>Alessandra</td>\n                                  <td> sem foto</td>\n                                  <td>gmferreira1982@gmail.com</td>\n                                  <td>Usuário</td>\n                                  <td>10.168.230.206</td>\n                                  <td>\n                                    <b class='text-info'>Ativado</b>\n                                  </td>\n                                </tr>\n                                <tr class='gradeX'>\n                                  <td>1286</td>\n                                  <td>21/05/2020 17:18</td>\n                                  <td>pesquisa</td>\n                                  <td>INSERT</td>\n                                  <td>Tecnisys</td>\n                                  <td>Alessandra</td>\n                                  <td> sem foto</td>\n                                  <td>gmferreira1982@gmail.com</td>\n                                  <td>Usuário</td>\n                                  <td>10.168.230.206</td>\n                                  <td>\n                                    <b class='text-info'>Ativado</b>\n                                  </td>\n                                </tr>\n                                <tr class='gradeX'>\n                                  <td>1307</td>\n                                  <td>22/05/2020 17:19</td>\n                                  <td>pesquisa</td>\n                                  <td>INSERT</td>\n                                  <td>Tecnisys</td>\n                                  <td>Alessandra</td>\n                                  <td> sem foto</td>\n                                  <td>gmferreira1982@gmail.com</td>\n                                  <td>Usuário</td>\n                                  <td>10.168.230.206</td>\n                                  <td>\n                                    <b class='text-info'>Ativado</b>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    </div>\n</div>\n","export * from './log-acesso.component';\n","import { Component, OnInit } from '@angular/core';\nimport {\n  HistoricoAcessoDTO,\n  HistoricoAcessoService,\n  UsuarioService,\n  StorangeService,\n  UsuarioListAllDTO,\n  PerfilService,\n  Perfil,\n  Pagination,\n} from 'src/app/modules/shared';\nimport { API_CONFIG } from 'src/app/modules/shared/config';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-log-acesso',\n  templateUrl: './log-acesso.component.html',\n  styleUrls: ['./log-acesso.component.css'],\n})\nexport class LogAcessoComponent implements OnInit {\n  baseUrlServidor = API_CONFIG.baseUrl;\n\n  historicoAcessoDTO: HistoricoAcessoDTO[];\n\n  usuarios: UsuarioListAllDTO[];\n\n  usuariosFiltrados: UsuarioListAllDTO[];\n\n  usuario = {} as UsuarioListAllDTO;\n\n  paginacao = {} as Pagination;\n\n  numerosDePaginas = [];\n\n  perfils: Perfil[];\n\n  constructor(\n    private historicoAcessoService: HistoricoAcessoService,\n    private userService: UsuarioService,\n    private storangeService: StorangeService,\n    private toast: ToastrService,\n    private perfilService: PerfilService,\n  ) {}\n\n  ngOnInit(): void {\n    this.carregaHistoricoUsuario();\n    this.carregaPerfils();\n    this.carregaUsers();\n  }\n\n  carregaHistoricoUsuario(): void {\n    this.historicoAcessoService\n      .getAllHistoryAccessPagination('ASC', 10, 'dataAcesso', 0)\n      .subscribe(\n        (data) => {\n          this.historicoAcessoDTO = data.content;\n          this.paginacao = data;\n          this.carregaPaginas();\n        },\n        (err) => {\n          this.toast.error('Erro na busca de Historico', 'Erro', {\n            timeOut: 4000,\n          });\n        },\n      );\n  }\n\n  mudarPagina(page: number): void {\n    this.historicoAcessoService\n      .getAllHistoryAccessPagination('ASC', 10, 'dataAcesso', page)\n      .subscribe((data) => {\n        this.historicoAcessoDTO = data.content;\n        this.paginacao = data;\n      });\n  }\n\n  carregaPaginas(): void {\n    this.numerosDePaginas = Array(this.paginacao.totalPages)\n      .fill(this.paginacao.totalPages, 0, this.paginacao.totalPages)\n      .map((x, i) => i);\n  }\n\n  carregaUsers(): void {\n    this.userService.getAll().subscribe((data) => {\n      this.usuarios = data;\n    });\n  }\n\n  carregaPerfils(): void {\n    this.perfilService.getAll().subscribe(\n      (data) => {\n        this.storangeService.setLocalPerfils(data);\n      },\n      (err) => {\n        this.toast.error('Erro ao buscar Perfils', 'Erro', {\n          timeOut: 4000,\n        });\n      },\n    );\n  }\n\n  filtraInfoUser(infoDesejada: string, id: number): string | false {\n    this.usuariosFiltrados = this.usuarios;\n\n    if (!this.usuariosFiltrados) {\n      return false;\n    }\n\n    this.usuario = this.usuariosFiltrados.find((user) => user.id === id);\n    if (this.usuario) {\n      switch (infoDesejada) {\n        case 'usuario':\n          return this.usuario.nome;\n        case 'email':\n          return this.usuario.email;\n        case 'perfil':\n          return 'Master';\n        case 'status':\n          return this.usuario.status.toString();\n        case 'img':\n          return this.usuario.imagem;\n        default:\n          return false;\n      }\n    }\n    return false;\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n\n      <div class=\"wrapper wrapper-content animated fadeInRight\">\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <div class=\"ibox float-e-margins\">\n                    <div class=\"ibox-title\">\n                        <h5>Tabela de registros retornados da base de dados</h5>\n                        <div class=\"ibox-tools\">\n                            <a class=\"collapse-link\">\n                                <i class=\"fa fa-chevron-up\"></i>\n                            </a>\n                        </div>\n                    </div>\n                    <div class=\"ibox-content\">\n                        <div class=\"table-responsive\">\n                            <table class='table table-striped table-bordered table-hover dataTables-example'>\n                              <thead>\n                                <tr>\n                                  <th>Código</th>\n                                  <th>Data do acesso</th>\n                                  <th>Usuário</th>\n                                  <th>Email</th>\n                                  <th>Perfil</th>\n                                  <th>IP</th>\n                                  <th>Status</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr class='gradeX' *ngFor=\"let item of historicoAcessoDTO\">\n                                  <td>{{ item.id }}</td>\n                                  <td> {{ item.dataAcesso | date: 'dd/MM/y HH:mm' }} </td>\n                                  <td>{{ filtraInfoUser('usuario', item.usuarioId) }}</td>\n                                  <td>{{ filtraInfoUser('email', item.usuarioId) }}</td>\n                                  <td>{{ filtraInfoUser('perfil', item.usuarioId) }}</td>\n                                  <td> {{ item.loginIp === null ? '0.0.0.0' : item.loginIp }} </td>\n                                  <td>\n                                    <b class='text-info'>{{ filtraInfoUser('status', item.usuarioId) === '1' ? 'Ativado': 'Desativado' }}</b>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                            <nav aria-label=\"Page navigation example\">\n                              <ul class=\"pagination justify-content-center\">\n                                <li class=\"page-item {{(paginacao.first ? 'disabled' : '')}}\">\n                                  <a *ngIf=\"!paginacao.first\" class=\"page-link\" (click)=\"mudarPagina(paginacao.number - 1)\">Anterior</a>\n                                  <a *ngIf=\"paginacao.first\" class=\"page-link\">Anterior</a>\n                                </li>\n                                <li class=\"page-item\" *ngFor=\"let page of numerosDePaginas\">\n                                  <a class=\"page-link\" (click)=\"mudarPagina(page)\" >{{page + 1}}</a>\n                                </li>\n                                <li class=\"page-item {{(paginacao.last ? 'disabled' : '')}}\">\n                                  <a *ngIf=\"!paginacao.last\" class=\"page-link\" (click)=\"mudarPagina(paginacao.number + 1)\">Proximo</a>\n                                  <a *ngIf=\"paginacao.last\" class=\"page-link\">Proximo</a>\n                                </li>\n                              </ul>\n                            </nav>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({ template: `<router-outlet></router-outlet>` })\nexport class LogComponent {}\n","export * from './log.module';\nexport * from './router-log.module';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { SharedModule, MenuModule } from '../../shared';\nimport {\n  ListaLogsComponent,\n  LogAcessoComponent,\n  LogComponent,\n} from './components';\n\n@NgModule({\n  declarations: [ListaLogsComponent, LogAcessoComponent, LogComponent],\n  imports: [CommonModule, SharedModule, MenuModule, RouterModule],\n})\nexport class LogModule {}\n","import { NgModule } from '@angular/core';\n\nimport { RouterModule, Routes } from '@angular/router';\n\nimport {\n  ListaLogsComponent,\n  LogAcessoComponent,\n  LogComponent,\n} from './components';\nimport { AuthGuardService, AutenticaRotaSerivce } from '../../shared';\n\nexport const LogRoutes: Routes = [\n  {\n    path: 'log',\n    component: LogComponent,\n    canActivate: [AuthGuardService, AutenticaRotaSerivce],\n\n    children: [\n      { path: 'pesquisar', component: ListaLogsComponent },\n      { path: 'pesquisar-acesso', component: LogAcessoComponent },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(LogRoutes)],\n\n  exports: [RouterModule],\n})\nexport class LogRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  Perfil,\n  PerfilPermissaoDTO,\n  Permissoes,\n  PerfilPermissaoService,\n  PerfilService,\n  PermissaoService,\n  StorangeService,\n  ErroDTO,\n  ErroGeral,\n} from 'src/app/modules/shared';\nimport { Subscription } from 'rxjs';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ToastrService } from 'ngx-toastr';\n\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-cadastrar',\n  templateUrl: './cadastrar.component.html',\n  styleUrls: ['./cadastrar.component.css'],\n})\nexport class CadastrarComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  perfilPermissoes: PerfilPermissaoDTO[];\n\n  perfilHasPermissao = {} as PerfilPermissaoDTO;\n\n  perfils: Perfil[];\n\n  erroGeral = {} as ErroGeral;\n\n  erroDTO: ErroDTO;\n\n  perfil = {} as Perfil;\n\n  idPerfilSelecionado = null;\n\n  perfilSelecionadoTrue = false;\n\n  permissao = {} as Permissoes;\n\n  permissoes: Permissoes[];\n\n  permissoesFiltradas: Permissoes[];\n\n  checkBoxSelecionadosArray = [] as Array<Int32Array>;\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private perfilPermissaoService: PerfilPermissaoService,\n    private toast: ToastrService,\n    private perfilService: PerfilService,\n    private permissaoService: PermissaoService,\n    private storangeService: StorangeService,\n  ) {}\n\n  ngOnInit(): void {\n    this.reloadPermissoesPerfil();\n    this.permissoes = this.storangeService.getLocalPermition();\n  }\n\n  reloadPermissoesPerfil(): void {\n    this.listarTodosPerfils();\n    this.listarTodasPermissoes();\n    this.listarTodasPerfilHasPermissao();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n    this.storangeService.setLocalPP(null);\n    this.storangeService.setLocalPerfils(null);\n    this.storangeService.setLocalPermition(null);\n  }\n\n  checkBoxSelecionado(id): void {\n    if (this.checkBoxSelecionadosArray.indexOf(id) > -1) {\n      this.checkBoxSelecionadosArray.splice(\n        this.checkBoxSelecionadosArray.indexOf(id),\n        1,\n      );\n    } else {\n      this.checkBoxSelecionadosArray.push(id);\n    }\n  }\n\n  listarTodosPerfils(): void {\n    this.subscriptions.push(\n      this.perfilService.getAll().subscribe(\n        (data) => {\n          this.perfils = data;\n          this.storangeService.setLocalPerfils(this.perfils);\n        },\n        (err) => {\n          this.erroGeral = err.error;\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { timeOut: 4000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  listarTodasPermissoes(): void {\n    this.subscriptions.push(\n      this.permissaoService.getAll().subscribe(\n        (data) => {\n          this.permissoes = data;\n          this.storangeService.setLocalPermition(this.permissoes);\n        },\n        (err) => {\n          this.erroGeral = err.error;\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { timeOut: 4000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  listarTodasPerfilHasPermissao(): void {\n    this.subscriptions.push(\n      this.perfilPermissaoService.getAll().subscribe(\n        (data) => {\n          this.perfilPermissoes = data;\n          this.storangeService.setLocalPP(this.perfilPermissoes);\n        },\n        (err) => {\n          this.erroGeral = err.error;\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { timeOut: 4000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  pegarPerfil(id: number): void {\n    this.perfil = this.perfils.find((x) => x.id === id);\n    if (!this.perfil) {\n      this.perfils = this.storangeService.getLocalPerfils();\n      this.perfil = this.perfils.find((x) => x.id === id);\n    }\n  }\n\n  pergarPermissao(id): void {\n    this.permissao = this.permissoes.find((x) => x.id === id);\n    if (!this.permissao) {\n      this.permissoes = this.storangeService.getLocalPermition();\n      this.permissao = this.permissoes.find((x) => x.id === id);\n    }\n  }\n\n  cadastrarPerfilHasPermissao(perfilPermissao: PerfilPermissaoDTO): void {\n    this.subscriptions.push(\n      this.perfilPermissaoService.insert(perfilPermissao).subscribe(\n        (data) => console.log(),\n        (err) => {\n          this.erroGeral = err.error;\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { timeOut: 4000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  perfilSelecionado(id): void {\n    this.idPerfilSelecionado = id;\n    this.perfilSelecionadoTrue = true;\n    this.verificaPermissaoDisponivelParaOPerfil(id);\n    this.permissoes = this.storangeService.getLocalPermition();\n  }\n\n  verificaPermissaoDisponivelParaOPerfil(id) {\n    this.permissoesFiltradas = this.permissoes.filter((permissao) => {\n      const resultado = this.perfilPermissoes.find(\n        (perfilPermissao) =>\n          perfilPermissao.permissaoId === permissao.id &&\n          perfilPermissao.perfilId === id,\n      );\n      if (!resultado) {\n        return permissao;\n      }\n\n      return null;\n    });\n  }\n\n  habilitaOuDesabilitaOpcao(idPerfil, idPermissao): boolean {\n    const resultado = this.verificaPermissaoDisponivelParaOPerfil(idPerfil);\n    const result = this.permissoesFiltradas.find((x) => {\n      if (x.id === idPermissao) {\n        return true;\n      }\n      return false;\n    });\n    if (result) {\n      return false;\n    }\n    return true;\n  }\n\n  cadastrar(): void {\n    if (this.perfilSelecionadoTrue === false) {\n      const msg = 'Nenhum Perfil selecionado para cadastro';\n      this.snackBar.open(msg, 'Info', { duration: 5000 });\n      return;\n    }\n    if (this.checkBoxSelecionadosArray.length < 1) {\n      const msg = 'Nenhuma permissão selecionada para cadastro';\n      this.snackBar.open(msg, 'Info', { duration: 5000 });\n      return;\n    }\n\n    this.pegarPerfil(this.idPerfilSelecionado);\n    this.checkBoxSelecionadosArray.forEach((p) => {\n      this.pergarPermissao(p);\n      this.perfilHasPermissao.perfilId = this.perfil.id;\n      this.perfilHasPermissao.permissaoId = this.permissao.id;\n      this.perfilHasPermissao.status = 1;\n      this.cadastrarPerfilHasPermissao(this.perfilHasPermissao);\n    });\n    const msg = 'Permissões cadastradas com sucesso!';\n    Swal.fire({\n      title: msg,\n      icon: 'success',\n      showConfirmButton: false,\n      timer: 2000,\n    });\n    setTimeout(() => {\n      this.refresh();\n    }, 1900);\n  }\n\n  refresh(): void {\n    window.location.reload();\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu>  </app-menu>    <div id=\"page-wrapper\" class=\"gray-bg\">\n    <div class=\"row border-bottom\">\n      <!-- NAVE -->\n      <app-barra-de-menu>        </app-barra-de-menu>\n    </div>\n    <div class=\"wrapper wrapper-content animated fadeInRight\">\n      <div class=\"row\">\n          <div class=\"col-lg-12\">\n              <div class=\"ibox float-e-margins\">\n                  <div class=\"ibox-title\">\n                      <h5>Formulário para preenchimento &nbsp;&nbsp;<b class=\"text-danger\"><i class='fa fa-exclamation'></i> Campos obrigatórios</b></h5>\n                      <div class=\"ibox-tools\">\n                          <a class=\"collapse-link\">\n                              <i class=\"fa fa-chevron-up\"></i>\n                          </a>\n                      </div>\n                  </div>\n                  <div class=\"ibox-content\">\n\n                      <div class=\"form-horizontal\">\n\n                          <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Perfil <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\">\n                                  <div class=\"col-lg-4 m-l-n\">\n                                    <mat-radio-group\n                                        aria-labelledby=\"example-radio-group-label\"\n                                        class=\"radio-group-permissao\">\n                                        <mat-radio-button *ngFor=\"let perfil of perfils\"\n                                            class=\"radio-button-permissao\"\n                                            [value]=\"perfil.id\"\n                                            #perfilId\n                                            (click)=\"perfilSelecionado(perfilId.value)\"\n                                            style=\"margin-right: 5px;\"\n                                        >\n                                            <strong>\n                                              {{ perfil.nome }}\n                                            </strong>\n                                        </mat-radio-button>\n                                    </mat-radio-group>\n                                  </div>\n                              </div>\n                          </div>\n\n                          <div class=\"hr-line-dashed\">\n\n                          </div>\n\n\n\n\n                          <!-- AMBIENTE DE TESTE -->\n\n\n                          <div class=\"form-group\">\n                            <label class=\"col-sm-2 control-label\">Permissão de acesso <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\">\n                                  <div class=\"col-lg-4 m-l-n\">\n                                    <section class=\"section-checkbox\" *ngIf=\"perfilSelecionadoTrue\">\n                                      <li style=\"list-style-type: none;\" *ngFor=\"let item of permissoes\">\n                                        <mat-checkbox\n                                          [disabled]=\"habilitaOuDesabilitaOpcao(idPerfilSelecionado, item.id)\"\n                                          *ngIf=\"!item.permissaoPai\"\n                                          [value]=\"item.id\"\n                                          #permissaoId\n                                          (click)=\"checkBoxSelecionado(permissaoId.value)\"\n\n                                        >\n                                          <span >{{ item.descricao }}</span>\n                                        </mat-checkbox>\n                                        <ul style=\"list-style-type: none;\" *ngIf=\"(item.descricao != 'Home' && item.descricao != 'Dashboard')\">\n                                          <li style=\"list-style-type: none;\" *ngFor=\"let item2 of permissoes\">\n\n                                            <mat-checkbox\n                                              [disabled]=\"habilitaOuDesabilitaOpcao(idPerfilSelecionado, item2.id)\"\n                                              [value]=\"item2.id\"\n                                              #permissaoId\n                                              (click)=\"checkBoxSelecionado(permissaoId.value)\"\n                                              *ngIf=\"item.id == item2.permissaoPai?.id\"\n                                            >\n                                              {{ item2.descricao }}\n                                            </mat-checkbox>\n                                          </li>\n                                        </ul>\n                                      </li>\n\n                                    </section>\n                                    <p *ngIf=\"perfilSelecionadoTrue === false\">\n                                      <strong>\n                                        Selecione um pefil para adicionar permissões\n                                      </strong>\n                                    </p>\n                                    <p *ngIf=\"permissoes?.length === 0\">\n                                      <strong>\n                                        Todas as pemissões já estão cadastradas para este perfil\n                                      </strong>\n                                    </p>\n                                  </div>\n                              </div>\n                          </div>\n\n                          <div class=\"hr-line-dashed\"></div>\n                          <div class=\"form-group\">\n                              <div class=\"col-sm-4 col-sm-offset-2\">\n                                  <button class=\"btn btn-w-m btn-warning\" (click)=\"refresh()\" style=\"margin-right: 20px;\" type=\"button\"><i class=\"fa fa-close\"></i> Limpar</button>\n                                  <button class=\"btn btn-w-m btn-primary\" type=\"button\" (click)=\"cadastrar()\"><i class=\"fa fa-check\"></i> Cadastrar</button>\n                              </div>\n                          </div>\n                        </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n  </div>\n\n</div>\n","export * from './cadastrar.component';\n","import { Component, OnInit } from '@angular/core';\nimport {\n  StorangeService,\n  Permissoes,\n  PermissaoService,\n  PermissaoDTO,\n  ErroGeral,\n  ErroDTO,\n} from 'src/app/modules/shared';\nimport { ToastrService } from 'ngx-toastr';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-create-new',\n  templateUrl: './create-new.component.html',\n  styleUrls: ['./create-new.component.css'],\n})\nexport class CreateNewComponent implements OnInit {\n  permissoes: Permissoes[];\n\n  permissaoDTO = {} as PermissaoDTO;\n\n  form: FormGroup;\n\n  erroGeral = {} as ErroGeral;\n\n  erroDTO = {} as ErroDTO;\n\n  constructor(\n    private storangeService: StorangeService,\n    private toast: ToastrService,\n    private fb: FormBuilder,\n    private permissoesSerivce: PermissaoService,\n    private snackBar: MatSnackBar,\n  ) {}\n\n  ngOnInit(): void {\n    this.carregaPermissoes();\n    this.criarForm();\n  }\n\n  criarForm(): void {\n    this.form = this.fb.group({\n      descricao: ['', Validators.required],\n      url: ['', [Validators.required]],\n      permissaopai: ['', Validators.required],\n    });\n  }\n\n  carregaPermissoes(): void {\n    this.permissoesSerivce.getAll().subscribe(\n      (data) => {\n        this.permissoes = data;\n        this.storangeService.setLocalPermition(this.permissoes);\n      },\n\n      (err) => {\n        this.erroGeral = err.error;\n\n        if (this.erroGeral.errors) {\n          this.erroGeral.errors.forEach((e) => {\n            this.erroDTO = e;\n            this.toast.error(\n              `Erro ${this.erroGeral.status} ${e.message}`,\n              e.fieldName,\n              { timeOut: 4000 },\n            );\n          });\n        } else {\n          const title = `Erro ${this.erroGeral.status}`;\n          this.toast.error(this.erroGeral.message, title, {\n            timeOut: 3000,\n          });\n        }\n      },\n    );\n  }\n\n  cadastrarNovaPermissao(): void {\n    if (this.form.get('url').invalid && this.form.get('descricao').invalid) {\n      const msg = 'Preenchimento do formulário inválido!';\n      this.toast.error(msg, 'Erro validação', { timeOut: 4000 });\n      return;\n    }\n\n    this.permissaoDTO.descricao = this.form.value.descricao;\n    this.permissaoDTO.url = this.form.value.url;\n    if (this.form.value.permissaopai !== '0') {\n      this.permissaoDTO.permissaoPai = this.form.value.permissaopai;\n    } else {\n      this.permissaoDTO.permissaoPai = null;\n    }\n\n    this.permissoesSerivce.insert(this.permissaoDTO).subscribe(\n      (data) => {\n        this.toast.success('Permissão Cadastrada com sucesso!', 'Sucesso', {\n          timeOut: 4000,\n        });\n\n        setTimeout(() => {\n          this.refresh();\n        }, 3900);\n      },\n      (err) => {\n        this.erroGeral = err.error;\n\n        if (this.erroGeral.errors) {\n          this.erroGeral.errors.forEach((e) => {\n            this.erroDTO = e;\n            this.toast.error(\n              `Erro ${this.erroGeral.status} ${e.message}`,\n              e.fieldName,\n              { timeOut: 4000 },\n            );\n          });\n        } else {\n          const title = `Erro ${this.erroGeral.status}`;\n          this.toast.error(this.erroGeral.message, title, {\n            timeOut: 3000,\n          });\n        }\n      },\n    );\n  }\n\n  refresh(): void {\n    window.location.reload();\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n\n      <div class=\"wrapper wrapper-content animated fadeInRight\">\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <div class=\"ibox float-e-margins\">\n                    <div class=\"ibox-title\">\n                        <h5>Formulário para cadastrar nova permissao &nbsp;&nbsp;<b class=\"text-danger\"><i class='fa fa-exclamation'></i> Campos obrigatórios</b></h5>\n                        <div class=\"ibox-tools\">\n                            <a class=\"collapse-link\">\n                                <i class=\"fa fa-chevron-up\"></i>\n                            </a>\n                        </div>\n                    </div>\n                    <div class=\"ibox-content\">\n\n                        <form class=\"form-horizontal\" [formGroup]=\"form\" novalidate>\n                          <div class=\"form-group\">\n                            <label class=\"col-sm-2 control-label\">Descrição <i class='fa fa-exclamation text-danger'></i></label>\n                            <div class=\"col-sm-10\">\n                                <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-vcard'></i></span>\n                                  <input type=\"text\" placeholder=\"Cadastrar Usuário\" formControlName=\"descricao\" class=\"form-control\" name=\"descricao\" ></div>\n                                  <!-- <small *ngIf=\"form.get('nome').valid && form.get('nome').touched\" class=\"form-text text-success\" >ok</small>\n                                  <small *ngIf=\"!form.get('nome').valid && form.get('nome').touched\"class=\"form-text text-danger\" >Nome do perfil requerida</small> -->\n                              </div>\n                            </div>\n\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">URL <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\">\n                                  <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-link'></i></span>\n                                    <input type=\"text\" placeholder=\"/usuario/cadastrar\" formControlName=\"url\" class=\"form-control\" name=\"url\" ></div>\n                                    <!-- <small *ngIf=\"form.get('nome').valid && form.get('nome').touched\" class=\"form-text text-success\" >ok</small>\n                                    <small *ngIf=\"!form.get('nome').valid && form.get('nome').touched\"class=\"form-text text-danger\" >Nome do perfil requerida</small> -->\n                                </div>\n                            </div>\n\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Permissão pai <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\">\n                                <div class=\"col-lg-4 m-l-n\">\n                                  <select class='form-control' formControlName=\"permissaopai\" name ='permissaopai'>\n                                      <option value=\"0\">Nenhum</option>\n                                      <option *ngFor=\"let permissao of permissoes\" value=\"{{ permissao.id }}\">\n                                        {{ permissao.descricao }}\n                                      </option>\n                                    </select>\n                                    <!-- <small *ngIf=\"form.get('perfil').valid && form.get('perfil').touched\" class=\"form-text text-success\" >ok</small>\n                                    <small *ngIf=\"!form.get('perfil').valid && form.get('perfil').touched\"class=\"form-text text-danger\" >Perfil não selecionado</small> -->\n                                </div>\n                              </div>\n\n                            </div>\n                            <div class=\"hr-line-dashed\"></div>\n                            <div class=\"form-group\">\n                                <div class=\"col-sm-4 col-sm-offset-2\">\n                                    <button class=\"btn btn-w-m btn-warning\" type=\"reset\" style=\"margin-right: 10px;margin-top: 20px;\"><i class=\"fa fa-close\"></i> Limpar</button>\n                                    <button class=\"btn btn-w-m btn-primary\" type=\"button\" (click)=\"cadastrarNovaPermissao()\" style=\"margin-top: 20px;\"><i class=\"fa fa-check\"></i> Cadastrar</button>\n                                </div>\n                            </div>\n\n\n                          </form>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n\n</div>\n","export * from './create-new.component';\n","export * from './cadastrar';\nexport * from './listar';\nexport * from './create-new';\nexport * from './permissao.component';\n","export * from './listar.component';\n","import { Component, OnInit } from '@angular/core';\nimport {\n  Permissoes,\n  PermissaoService,\n  ErroDTO,\n  ErroGeral,\n  Perfil,\n  PerfilPermissaoDTO,\n  PerfilService,\n  PerfilPermissaoService,\n  StorangeService,\n} from 'src/app/modules/shared';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { ToastrService } from 'ngx-toastr';\nimport { Subscription } from 'rxjs';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-listar',\n  templateUrl: './listar.component.html',\n  styleUrls: ['./listar.component.css'],\n})\nexport class ListarComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  perfils: Perfil[];\n\n  erroGeral = {} as ErroGeral;\n\n  erroDTO: ErroDTO;\n\n  status: string;\n\n  permissoes: Permissoes[];\n\n  perfilPermi: PerfilPermissaoDTO;\n\n  perfilPermissao: PerfilPermissaoDTO[];\n\n  constructor(\n    private perfilService: PerfilService,\n    private snackBar: MatSnackBar,\n    private toast: ToastrService,\n    private permissaoService: PermissaoService,\n    private perfilPermissaoService: PerfilPermissaoService,\n    private storangeService: StorangeService,\n  ) {}\n\n  ngOnInit(): void {\n    this.carregaPerfils();\n    this.carregaPermissoes();\n    this.carregaPerfilHasPermition();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  carregaPerfils(): void {\n    this.subscriptions.push(\n      this.perfilService.getAll().subscribe(\n        (data) => {\n          this.perfils = data;\n          this.storangeService.setLocalPerfils(this.perfils);\n        },\n        (err) => {\n          this.erroGeral = err.error;\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { timeOut: 4000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  carregaPermissoes(): void {\n    this.subscriptions.push(\n      this.permissaoService.getAll().subscribe(\n        (data) => {\n          this.permissoes = data;\n          this.storangeService.setLocalPermition(this.permissoes);\n        },\n        (err) => {\n          this.erroGeral = err.error;\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { timeOut: 4000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  carregaPerfilHasPermition(): void {\n    this.subscriptions.push(\n      this.perfilPermissaoService.getAll().subscribe(\n        (data) => {\n          this.perfilPermissao = data;\n          this.storangeService.setLocalPP(this.perfilPermissao);\n        },\n        (err) => {\n          this.erroGeral = err.error;\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.snackBar.open(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { duration: 3000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.snackBar.open(this.erroGeral.message, title, {\n              duration: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  verificaPermissaoHasPerfil(permissao: number, perfil: number): boolean {\n    return false;\n  }\n\n  permissaDescricao(id: number): string {\n    const permissao = this.permissoes.find((x) => x.id === id);\n    return permissao.descricao;\n  }\n\n  permissaoUrl(id: number): string {\n    const permissao = this.permissoes.find((x) => x.id === id);\n    return permissao.url;\n  }\n\n  perfiNome(id: number): string {\n    const perfil = this.perfils.find((x) => x.id === id);\n    return perfil.nome;\n  }\n\n  alterStatusPP(pp: PerfilPermissaoDTO): void {\n    this.perfilPermi = pp;\n\n    this.status = pp.status === 1 ? 'desativar' : 'ativar';\n\n    Swal.fire({\n      title: `Deseja ${this.status} permissao?`,\n      icon: 'warning',\n      showCancelButton: true,\n      cancelButtonText: 'Cancelar',\n      confirmButtonText: `Sim, ${this.status}!`,\n    }).then((result) => {\n      if (result.value) {\n        this.perfilPermi.status = pp.status === 1 ? 0 : 1;\n        this.perfilPermissaoService.update(this.perfilPermi).subscribe(\n          (data) => {\n            Swal.fire({\n              title: this.status === 'ativar' ? 'Ativado!' : 'Desativado',\n              icon: 'success',\n              showConfirmButton: false,\n              timer: 1000,\n            });\n          },\n          (err) => {\n            this.erroGeral = err.error;\n            if (this.erroGeral.errors) {\n              this.erroGeral.errors.forEach((e) => {\n                this.erroDTO = e;\n                this.toast.error(\n                  `Erro ${this.erroGeral.status} ${e.message}`,\n                  e.fieldName,\n                  { timeOut: 4000 },\n                );\n              });\n            } else {\n              const title = `Erro ${this.erroGeral.status}`;\n              this.toast.error(this.erroGeral.message, title, {\n                timeOut: 3000,\n              });\n            }\n          },\n        );\n      }\n    });\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu>\n\n  </app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu>\n\n        </app-barra-de-menu>\n      </div>\n      <div class=\"wrapper wrapper-content animated fadeInRight\">\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <div class=\"ibox float-e-margins\">\n                    <div class=\"ibox-title\">\n                        <h5>Tabela de registros retornados da base de dados</h5>\n                        <div class=\"ibox-tools\">\n                            <a class=\"collapse-link\">\n                                <i class=\"fa fa-chevron-up\"></i>\n                            </a>\n                        </div>\n                    </div>\n                    <div class=\"ibox-content\">\n                        <div class=\"table-responsive\">\n                            <table class='table table-striped table-bordered table-hover dataTables-example'>\n                              <thead>\n                                <tr>\n                                <th>Descrição</th>\n                                <th>URL</th>\n                                <th>Perfil</th>\n                                <th>Status</th>\n                                <th>Ação</th>\n                              </tr>\n                              </thead>\n                              <tbody>\n                                <tr *ngFor=\"let pp of perfilPermissao\">\n                                  <td>{{ permissaDescricao(pp.permissaoId) }}</td>\n                                  <td>{{ permissaoUrl(pp.permissaoId) }}</td>\n                                  <td>{{perfiNome(pp.perfilId)}}</td>\n                                  <td>\n                                    <span class='label label-{{ pp.status === 1 ? \"primary\" : \"default\" }}'>{{ pp.status === 1 ? 'Ativado' : 'Desativado' }}</span>\n                                  </td>\n                                  <td>\n                                      <button type='button' (click)=\"alterStatusPP(pp)\" class='btn btn-outline btn-{{ pp.status === 1 ? \"danger\" : \"info\" }}'>\n                                        <i class='fa fa-toggle-off'></i> {{ pp.status === 1 ? \"Desativar\" : \"&nbsp;&nbsp;Ativar&nbsp;&nbsp;\" }}\n                                      </button>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n      </div>\n    </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({ template: `<router-outlet></router-outlet>` })\nexport class PermissaoComponent {}\n","export * from './permition.module';\nexport * from './router-permition.module';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport {\n  ListarComponent,\n  CadastrarComponent,\n  PermissaoComponent,\n  CreateNewComponent,\n} from './components';\n\nimport { SharedModule, MenuModule } from '../../shared';\n\n@NgModule({\n  declarations: [\n    ListarComponent,\n    CadastrarComponent,\n    PermissaoComponent,\n    CreateNewComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    MenuModule,\n    RouterModule,\n    MatCardModule,\n    MatRadioModule,\n    MatCheckboxModule,\n    ReactiveFormsModule,\n  ],\n})\nexport class PermitionModule {}\n","import { NgModule } from '@angular/core';\n\nimport { RouterModule, Routes } from '@angular/router';\n\nimport {\n  CadastrarComponent,\n  ListarComponent,\n  PermissaoComponent,\n  CreateNewComponent,\n} from './components';\nimport { AuthGuardService, AutenticaRotaSerivce } from '../../shared';\n\nexport const PermitionRoutes: Routes = [\n  {\n    path: 'permissao',\n    component: PermissaoComponent,\n    canActivate: [AuthGuardService, AutenticaRotaSerivce],\n    children: [\n      { path: 'cadastrar', component: CadastrarComponent },\n      { path: 'pesquisar', component: ListarComponent },\n      { path: 'criar-nova-permissao', component: CreateNewComponent },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(PermitionRoutes)],\n\n  exports: [RouterModule],\n})\nexport class PermitionRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport Swal from 'sweetalert2';\nimport { ToastrService } from 'ngx-toastr';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport {\n  PerfilDTO,\n  PerfilService,\n  ErroDTO,\n  ErroGeral,\n} from '../../../../shared';\n\n@Component({\n  selector: 'app-atualizar',\n  templateUrl: './atualizar.component.html',\n  styleUrls: ['./atualizar.component.css'],\n})\nexport class AtualizarComponent implements OnInit {\n  erroGeral = {} as ErroGeral;\n\n  erroDTO: ErroDTO;\n\n  private subscriptions: Subscription[] = [];\n\n  form: FormGroup;\n\n  perfil = {} as PerfilDTO;\n\n  idPerfil: string;\n\n  constructor(\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private toast: ToastrService,\n    private snackBar: MatSnackBar,\n    private perfilService: PerfilService,\n  ) {}\n\n  ngOnInit(): void {\n    this.criarForm();\n    this.idPerfil = this.route.snapshot.paramMap.get('perfilId');\n    this.carregaPerfilNome(Number(this.idPerfil));\n  }\n\n  criarForm(): void {\n    this.form = this.fb.group({\n      nome: ['', Validators.required],\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  carregaPerfilNome(id: number): void {\n    this.subscriptions.push(\n      this.perfilService.getId(id).subscribe((data) => {\n        this.perfil = data;\n        this.populandoForm();\n      }),\n    );\n  }\n\n  atualizarPerfil(): void {\n    if (this.form.invalid) {\n      this.snackBar.open('Formulário com campos invalidos!', 'Erro!', {\n        duration: 3000,\n      });\n      this.toucheCamposFormulario();\n      return;\n    }\n\n    this.perfil = this.form.value;\n    this.subscriptions.push(\n      this.perfilService.update(Number(this.idPerfil), this.perfil).subscribe(\n        (data) => {\n          Swal.fire({\n            title: 'Atualizado!',\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n          setTimeout(() => {\n            this.refresh();\n          }, 1900);\n        },\n        (err) => {\n          this.erroGeral = err.error;\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { timeOut: 4000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  toucheCamposFormulario(): void {\n    this.form.get('nome').markAsTouched();\n  }\n\n  populandoForm(): void {\n    this.form.patchValue({ nome: this.perfil.nome });\n  }\n\n  refresh(): void {\n    window.location.reload();\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n\n      <div class=\"wrapper wrapper-content animated fadeInRight\">\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <div class=\"ibox float-e-margins\">\n                    <div class=\"ibox-title\">\n                        <h5>Formulário para preenchimento &nbsp;&nbsp;<b class=\"text-danger\"><i class='fa fa-exclamation'></i> Campos obrigatórios</b></h5>\n                        <div class=\"ibox-tools\">\n                            <a class=\"collapse-link\">\n                                <i class=\"fa fa-chevron-up\"></i>\n                            </a>\n                        </div>\n                    </div>\n                    <div class=\"ibox-content\">\n\n                        <form [formGroup]=\"form\" novalidate>\n\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Perfil <i class='fa fa-exclamation text-danger'></i></label>\n                                <div class=\"col-sm-10\">\n                                    <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-vcard'></i></span>\n                                      <input type=\"text\" [placeholder]=\"perfil.nome\" formControlName=\"nome\" class=\"form-control\" name=\"nome\" ></div>\n                                      <small *ngIf=\"form.get('nome').valid && form.get('nome').touched\" class=\"form-text text-success\" >ok</small>\n                                      <small *ngIf=\"!form.get('nome').valid && form.get('nome').touched\"class=\"form-text text-danger\" >Nome do perfil requerido</small>\n                                  </div>\n                            </div>\n\n                            <div class=\"hr-line-dashed\"></div>\n                            <div class=\"form-group\">\n                                <div class=\"col-sm-4 col-sm-offset-2\">\n                                    <button class=\"btn btn-w-m btn-warning\" type=\"reset\" style=\"margin-right: 10px;\"><i class=\"fa fa-close\"></i> Limpar</button>\n                                    <button class=\"btn btn-w-m btn-primary\" type=\"button\" (click)=\"atualizarPerfil()\"><i class=\"fa fa-check\"></i> Atualizar</button>\n                                </div>\n                            </div>\n                        </form>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n</div>\n","export * from './atualizar.component';\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport Swal from 'sweetalert2';\nimport { ToastrService } from 'ngx-toastr';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport {\n  PerfilDTO,\n  PerfilService,\n  ErroDTO,\n  ErroGeral,\n} from '../../../../shared';\n\n@Component({\n  selector: 'app-cadastrar',\n  templateUrl: './cadastrar.component.html',\n  styleUrls: ['./cadastrar.component.css'],\n})\nexport class CadastrarComponent implements OnInit {\n  erroGeral = {} as ErroGeral;\n\n  erroDTO: ErroDTO;\n\n  private subscriptions: Subscription[] = [];\n\n  form: FormGroup;\n\n  perfil = {} as PerfilDTO;\n\n  constructor(\n    private fb: FormBuilder,\n    private toast: ToastrService,\n    private snackBar: MatSnackBar,\n    private perfilService: PerfilService,\n  ) {}\n\n  ngOnInit(): void {\n    this.criarForm();\n  }\n\n  criarForm(): void {\n    this.form = this.fb.group({\n      nome: ['', Validators.required],\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  cadastrarPerfil(): void {\n    if (this.form.invalid) {\n      this.snackBar.open('Formulário com campos invalidos!', 'Erro!', {\n        duration: 3000,\n      });\n      this.toucheCamposFormulario();\n      return;\n    }\n\n    this.perfil = this.form.value;\n    this.subscriptions.push(\n      this.perfilService.insert(this.perfil).subscribe(\n        (data) => {\n          Swal.fire({\n            title: 'Cadastrado!',\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n          setTimeout(() => {\n            this.refresh();\n          }, 1900);\n        },\n        (err) => {\n          this.erroGeral = err.error;\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { timeOut: 4000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  toucheCamposFormulario(): void {\n    this.form.get('nome').markAsTouched();\n  }\n\n  refresh(): void {\n    window.location.reload();\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n\n      <div class=\"wrapper wrapper-content animated fadeInRight\">\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <div class=\"ibox float-e-margins\">\n                    <div class=\"ibox-title\">\n                        <h5>Formulário para preenchimento &nbsp;&nbsp;<b class=\"text-danger\"><i class='fa fa-exclamation'></i> Campos obrigatórios</b></h5>\n                        <div class=\"ibox-tools\">\n                            <a class=\"collapse-link\">\n                                <i class=\"fa fa-chevron-up\"></i>\n                            </a>\n                        </div>\n                    </div>\n                    <div class=\"ibox-content\">\n\n                        <form [formGroup]=\"form\" novalidate>\n\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Perfil <i class='fa fa-exclamation text-danger'></i></label>\n                                <div class=\"col-sm-10\">\n                                    <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-vcard'></i></span>\n                                      <input type=\"text\" formControlName=\"nome\" class=\"form-control\" name=\"nome\" ></div>\n                                      <small *ngIf=\"form.get('nome').valid && form.get('nome').touched\" class=\"form-text text-success\" >ok</small>\n                                      <small *ngIf=\"!form.get('nome').valid && form.get('nome').touched\"class=\"form-text text-danger\" >Nome do perfil requerida</small>\n                                  </div>\n                            </div>\n\n                            <div class=\"hr-line-dashed\"></div>\n                            <div class=\"form-group\">\n                                <div class=\"col-sm-4 col-sm-offset-2\">\n                                    <button class=\"btn btn-w-m btn-warning\" type=\"reset\" style=\"margin-right: 10px;\"><i class=\"fa fa-close\"></i> Limpar</button>\n                                    <button class=\"btn btn-w-m btn-primary\" type=\"button\" (click)=\"cadastrarPerfil()\"><i class=\"fa fa-check\"></i> Cadastrar</button>\n                                </div>\n                            </div>\n                        </form>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n\n</div>\n","export * from './cadastrar.component';\n","export * from './cadastrar';\nexport * from './atualizar';\nexport * from './listar';\nexport * from './perfil.component';\n","export * from './listar.component';\n","import { Component, OnInit } from '@angular/core';\nimport {\n  Perfil,\n  PerfilService,\n  Permissoes,\n  PermissaoService,\n  PerfilPermissaoService,\n  PerfilPermissaoDTO,\n  ErroDTO,\n  ErroGeral,\n} from 'src/app/modules/shared';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { ToastrService } from 'ngx-toastr';\nimport { Subscription } from 'rxjs';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-listar',\n  templateUrl: './listar.component.html',\n  styleUrls: ['./listar.component.css'],\n})\nexport class ListarComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  perfils: Perfil[];\n\n  erroGeral = {} as ErroGeral;\n\n  erroDTO: ErroDTO;\n\n  status: string;\n\n  permissoes: Permissoes[];\n\n  perfilPermi: PerfilPermissaoDTO;\n\n  perfilPermissao: PerfilPermissaoDTO[];\n\n  constructor(\n    private perfilService: PerfilService,\n    private snackBar: MatSnackBar,\n    private toast: ToastrService,\n    private permissaoService: PermissaoService,\n    private perfilPermissaoService: PerfilPermissaoService,\n  ) {}\n\n  ngOnInit(): void {\n    this.carregaPerfils();\n    this.carregaPermissoes();\n    this.carregaPerfilHasPermition();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  carregaPerfils(): void {\n    this.subscriptions.push(\n      this.perfilService.getAll().subscribe(\n        (data) => {\n          this.perfils = data;\n        },\n        (err) => {\n          this.erroGeral = err.error;\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { timeOut: 4000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  carregaPermissoes(): void {\n    this.subscriptions.push(\n      this.permissaoService.getAll().subscribe(\n        (data) => {\n          this.permissoes = data;\n        },\n        (err) => {\n          this.erroGeral = err.error;\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { timeOut: 4000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  carregaPerfilHasPermition(): void {\n    this.subscriptions.push(\n      this.perfilPermissaoService.getAll().subscribe(\n        (data) => {\n          this.perfilPermissao = data;\n        },\n        (err) => {\n          this.erroGeral = err.error;\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { timeOut: 4000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  verificaPermissao(perfil: number, permissao: number): boolean {\n    const response = this.perfilPermissao?.find(\n      (x) => x.perfilId === perfil && x.permissaoId === permissao,\n    );\n    if (response) {\n      return true;\n    }\n    return false;\n  }\n\n  atualizaStatus(perfil: number, permissao: number) {\n    const response = this.perfilPermissao.find(\n      (x) => x.perfilId === perfil && x.permissaoId === permissao,\n    );\n\n    if (!response) {\n      this.snackBar.open('Erro ao tentar atualizar', 'Erro', {\n        duration: 3000,\n      });\n      return;\n    }\n    this.perfilPermi = response;\n    if (this.perfilPermi.status === 1) {\n      this.status = 'desativar';\n    } else {\n      this.status = 'ativar';\n    }\n\n    Swal.fire({\n      title: `Deseja ${this.status} permissao?`,\n      icon: 'warning',\n      showCancelButton: true,\n      cancelButtonText: 'Cancelar',\n      confirmButtonText: `Sim, ${this.status}!`,\n    }).then((result) => {\n      if (result.value) {\n        this.perfilPermi.status = this.status === 'ativar' ? 1 : 0;\n        this.perfilPermissaoService.update(this.perfilPermi).subscribe(\n          (data) => {\n            Swal.fire({\n              title: this.status === 'ativar' ? 'Ativado!' : 'Desativado',\n              icon: 'success',\n              showConfirmButton: false,\n              timer: 1000,\n            });\n          },\n          (err) => {\n            this.erroGeral = err.error;\n\n            if (this.erroGeral.errors) {\n              this.erroGeral.errors.forEach((e) => {\n                this.erroDTO = e;\n                this.toast.error(\n                  `Erro ${this.erroGeral.status} ${e.message}`,\n                  e.fieldName,\n                  { timeOut: 4000 },\n                );\n              });\n            } else {\n              const title = `Erro ${this.erroGeral.status}`;\n              this.toast.error(this.erroGeral.message, title, {\n                timeOut: 3000,\n              });\n            }\n          },\n        );\n      }\n    });\n  }\n\n  pegaStatusAtual(perfil: number, permissao: number): string {\n    const response = this.perfilPermissao.find(\n      (x) => x.perfilId === perfil && x.permissaoId === permissao,\n    );\n    if (!response) {\n      return 'dafault';\n    }\n    return response.status === 1 ? 'primary' : 'dafault';\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu>\n\n  </app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu>\n\n        </app-barra-de-menu>\n      </div>\n\n      <div class=\"wrapper wrapper-content animated fadeInRight\">\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <div class=\"ibox float-e-margins\">\n                    <div class=\"ibox-title\">\n                        <h5>Tabela de registros retornados da base de dados</h5>\n                        <div class=\"ibox-tools\">\n                            <a class=\"collapse-link\">\n                                <i class=\"fa fa-chevron-up\">\n\n                                </i>\n                            </a>\n                        </div>\n                    </div>\n                    <div class=\"ibox-content\">\n\n                        <div class=\"table-responsive\">\n                            <table class='table table-striped table-bordered table-hover dataTables-example'>\n                              <thead>\n                              <tr>\n                              <th>Perfil</th>\n                              <th>Permissões</th>\n                              <th>Ações</th>\n                            </tr>\n                            </thead>\n                              <tbody>\n                              <tr *ngFor=\"let perfil of perfils\">\n                              <td>{{ perfil.nome }}</td>\n                              <td>\n                              <div class='tooltip-demo'>\n                                <ng-container *ngFor=\"let permissao of permissoes\">\n                                  <button *ngIf=\"verificaPermissao(perfil.id, permissao.id)\"\n                                    type='button'\n                                    class='btn btn-outline btn-{{ pegaStatusAtual(perfil.id, permissao.id) }}'\n                                    data-toggle='tooltip'\n                                    data-placement='top'\n                                    (click)=\"atualizaStatus(perfil.id, permissao.id)\"\n                                    style=\"margin-right: 10px;\"\n                                  > <i class='fa fa-toggle-on'></i>\n\n                                      {{ permissao.descricao }}\n                                  </button>\n                                </ng-container>\n\n                            </div>\n                          </td>\n                            <td>\n                              <a href='/perfil/atualizar/{{perfil.id}}'>\n                              <button type='button' class='btn btn-outline btn-success'>\n                              <i class='fa fa-edit'>\n\n                            </i> Editar Perfil</button>\n                            </a>\n                            </td>\n                          </tr>\n\n                          </tbody>\n                          </table>\n                      </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n\n</div>\n","import { Component } from '@angular/core';\n\n@Component({ template: `<router-outlet></router-outlet>` })\nexport class PerfilComponent {}\n","export * from './profile.module';\nexport * from './router-profile.module';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {\n  ListarComponent,\n  CadastrarComponent,\n  PerfilComponent,\n  AtualizarComponent,\n} from './components';\n\nimport { SharedModule, MenuModule } from '../../shared';\n\n@NgModule({\n  declarations: [\n    ListarComponent,\n    CadastrarComponent,\n    PerfilComponent,\n    AtualizarComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    MenuModule,\n    ReactiveFormsModule,\n    RouterModule,\n  ],\n})\nexport class ProfileModule {}\n","import { NgModule } from '@angular/core';\n\nimport { RouterModule, Routes } from '@angular/router';\n\nimport {\n  CadastrarComponent,\n  ListarComponent,\n  PerfilComponent,\n  AtualizarComponent,\n} from './components';\nimport { AuthGuardService, AutenticaRotaSerivce } from '../../shared';\n\nexport const ProfileRoutes: Routes = [\n  {\n    path: 'perfil',\n    component: PerfilComponent,\n    canActivate: [AuthGuardService],\n    children: [\n      {\n        path: 'cadastrar',\n        component: CadastrarComponent,\n        canActivate: [AutenticaRotaSerivce],\n      },\n      {\n        path: 'pesquisar',\n        component: ListarComponent,\n        canActivate: [AutenticaRotaSerivce],\n      },\n      { path: 'atualizar/:perfilId', component: AtualizarComponent },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(ProfileRoutes)],\n\n  exports: [RouterModule],\n})\nexport class ProfileRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\nimport { PerfilService, UsuarioService } from 'src/app/modules/shared';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport Swal from 'sweetalert2';\nimport {\n  PerfilDTO,\n  ErroGeral,\n  ErroDTO,\n  UsuarioListAllDTO,\n  Usuario,\n} from '../../../../shared/models';\n\nimport { CpfValidator } from '../../../../shared/validators';\n\n@Component({\n  selector: 'app-atualizar',\n  templateUrl: './atualizar.component.html',\n  styleUrls: ['./atualizar.component.css'],\n})\nexport class AtualizarComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  erroGeral = {} as ErroGeral;\n\n  erroDTO = {} as ErroDTO;\n\n  usuarioNew = {} as UsuarioListAllDTO;\n\n  usuario = {} as Usuario;\n\n  form: FormGroup;\n\n  perfil = {} as PerfilDTO;\n\n  perfils: PerfilDTO[];\n\n  userId: string;\n\n  constructor(\n    private fb: FormBuilder,\n    private toast: ToastrService,\n    private route: ActivatedRoute,\n    private perfilService: PerfilService,\n    private usuarioService: UsuarioService,\n  ) {}\n\n  startDate = new Date(2000, 1, 1);\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  ngOnInit(): void {\n    this.criarForm();\n    this.userId = this.route.snapshot.paramMap.get('userId');\n    this.carregaPerfils();\n    this.buscarUserId();\n  }\n\n  criarForm(): void {\n    this.form = this.fb.group({\n      nome: ['', Validators.required],\n      cpf: ['', [Validators.required, CpfValidator]],\n      datanascimento: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      perfil: ['', Validators.required],\n    });\n  }\n\n  buscarUserId(): void {\n    this.subscriptions.push(\n      this.usuarioService.getUserById(Number(this.userId)).subscribe(\n        (data) => {\n          this.usuario = data;\n          this.populandoForm();\n        },\n        (err) => {\n          this.erroGeral = err.error;\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { timeOut: 4000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  carregaPerfils(): void {\n    this.subscriptions.push(\n      this.perfilService.getAll().subscribe(\n        (data) => {\n          this.perfils = data;\n        },\n        (err) => {\n          this.erroGeral = err.error;\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { timeOut: 4000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  atualizarUsuario(): void {\n    if (this.form.invalid) {\n      this.toast.info('Formulário com campos invalidos!', 'Erro!', {\n        timeOut: 3000,\n      });\n      this.toucheCamposFormulario();\n      return;\n    }\n\n    // carregando informações para salvar novo usuário\n    this.usuario = this.form.value;\n    this.usuarioNew.nome = this.usuario.nome;\n    this.usuarioNew.cpf = this.usuario.cpf;\n    this.usuarioNew.id = Number(this.userId);\n    this.usuarioNew.perfilId = this.form.value.perfil;\n    this.usuarioNew.dataNascimento = this.form.value.datanascimento;\n    this.usuarioNew.email = this.usuario.email;\n    this.usuarioNew.login = this.usuarioNew.email;\n    this.usuarioNew.status = 1;\n    this.subscriptions.push(\n      this.usuarioService.update(this.usuarioNew).subscribe(\n        (data) => {\n          const msg = 'Usuário atualizado com sucesso!';\n\n          Swal.fire({\n            title: msg,\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n          setTimeout(() => {\n            this.refresh();\n          }, 1900);\n        },\n        (err) => {\n          this.erroGeral = err.error;\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { timeOut: 4000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  toucheCamposFormulario(): void {\n    this.form.get('cpf').markAsTouched();\n    this.form.get('email').markAsTouched();\n    this.form.get('nome').markAsTouched();\n    this.form.get('perfil').markAsTouched();\n    this.form.get('datanascimento').markAsTouched();\n  }\n\n  populandoForm(): void {\n    this.form.patchValue({\n      nome: this.usuario.nome,\n      cpf: this.usuario.cpf,\n      datanascimento: this.usuario.dataNascimento,\n      email: this.usuario.email,\n      perfil: this.usuario.perfil?.id,\n    });\n  }\n\n  refresh(): void {\n    window.location.reload();\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n\n      <div class=\"wrapper wrapper-content animated fadeInRight\">\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <div class=\"ibox float-e-margins\">\n                    <div class=\"ibox-title\">\n                        <h5>Formulário para preenchimento &nbsp;&nbsp;<b class=\"text-danger\"><i class='fa fa-exclamation'></i> Campos obrigatórios</b></h5>\n                        <div class=\"ibox-tools\">\n                            <a class=\"collapse-link\">\n                                <i class=\"fa fa-chevron-up\"></i>\n                            </a>\n                        </div>\n                    </div>\n                    <div class=\"ibox-content\">\n\n                        <form class=\"form-horizontal\" [formGroup]=\"form\" novalidate>\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Nome <i class='fa fa-exclamation text-danger'></i></label>\n                                <div class=\"col-sm-10\">\n                                    <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-vcard'></i></span>\n                                      <input type=\"text\" formControlName=\"nome\" class=\"form-control\" name=\"nome\" ></div>\n                                      <small *ngIf=\"form.get('nome').valid && form.get('nome').touched\" class=\"form-text text-success\" >ok</small>\n                                      <small *ngIf=\"!form.get('nome').valid && form.get('nome').touched\"class=\"form-text text-danger\" >Campo nome requerido</small>\n                                </div>\n                            </div>\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">CPF <i class='fa fa-exclamation text-danger'></i></label>\n                                <div class=\"col-sm-10\">\n                                    <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-id-card'></i></span>\n                                    <input type=\"text\" formControlName=\"cpf\" class=\"form-control\" name=\"cpf\" mascara=\"999.999.999-99\" ></div>\n                                    <small *ngIf=\"form.get('cpf').valid && form.get('cpf').touched\" class=\"form-text text-success\" >ok</small>\n                                    <small *ngIf=\"!form.get('cpf').valid && form.get('cpf').touched\"class=\"form-text text-danger\" >CPF inválido</small>\n                                </div>\n                            </div>\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Data de Nasc. <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\" >\n                                  <div class=\"input-group date m-b\">\n                                      <span class=\"input-group-addon\">\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                      </span>\n                                      <input matInput [matDatepicker]=\"picker\" disabled formControlName=\"datanascimento\" class=\"form-control\">\n                                      <mat-datepicker #picker disabled=\"false\" startView=\"year\" [startAt]=\"startDate\"></mat-datepicker>\n                                  </div>\n                              </div>\n                          </div>\n\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Email <i class='fa fa-exclamation text-danger'></i></label>\n                                <div class=\"col-sm-10\">\n                                    <div class=\"input-group m-b\"><span class=\"input-group-addon\">@</span>\n                                      <input type=\"email\" formControlName=\"email\" class=\"form-control\" name=\"email\" >\n                                      <small *ngIf=\"form.get('email').valid && form.get('email').touched\" class=\"form-text text-success\" >ok</small>\n                                      <small *ngIf=\"!form.get('email').valid && form.get('email').touched\"class=\"form-text text-danger\" >E-mail inválido</small>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Perfil <i class='fa fa-exclamation text-danger'></i></label>\n                                <div class=\"col-sm-10\">\n                                    <div class=\"col-lg-4 m-l-n\">\n                                        <select class='form-control' formControlName=\"perfil\" name ='perfil_id'>\n                                          <option *ngFor=\"let perfil of perfils\" value='{{ perfil.id }}'>{{ perfil.nome }}</option>\n                                        </select>\n                                        <small *ngIf=\"form.get('perfil').valid && form.get('perfil').touched\" class=\"form-text text-success\" >ok</small>\n                                        <small *ngIf=\"!form.get('perfil').valid && form.get('perfil').touched\"class=\"form-text text-danger\" >Perfil não selecionado</small>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"hr-line-dashed\"></div>\n                            <div class=\"form-group\">\n                                <div class=\"col-sm-4 col-sm-offset-2\">\n                                    <button class=\"btn btn-w-m btn-warning\" type=\"reset\" style=\"margin-right: 20px;\"><i class=\"fa fa-close\"></i> Limpar</button>\n                                    <button class=\"btn btn-w-m btn-primary\" type=\"button\" (click)=\"atualizarUsuario()\"><i class=\"fa fa-check\"></i> Atualizar</button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n\n</div>\n","export * from './atualizar.component';\n","import { Component, OnInit } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\nimport { PerfilService, UsuarioService } from 'src/app/modules/shared';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { ToastrService } from 'ngx-toastr';\n\nimport {\n  PerfilDTO,\n  ErroGeral,\n  ErroDTO,\n  UsuarioNewDTO,\n} from '../../../../shared/models';\n\nimport { CpfValidator } from '../../../../shared/validators';\n\n@Component({\n  selector: 'app-cadastrar',\n  templateUrl: './cadastrar.component.html',\n  styleUrls: ['./cadastrar.component.css'],\n})\nexport class CadastrarComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  erroGeral = {} as ErroGeral;\n\n  erroDTO = {} as ErroDTO;\n\n  usuarioNew = {} as UsuarioNewDTO;\n\n  form: FormGroup;\n\n  perfil = {} as PerfilDTO;\n\n  perfils: PerfilDTO[];\n\n  constructor(\n    private fb: FormBuilder,\n    private toast: ToastrService,\n    private perfilService: PerfilService,\n    private usuarioService: UsuarioService,\n  ) {}\n\n  startDate = new Date(2000, 1, 1);\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  ngOnInit(): void {\n    this.carregaPerfils();\n    this.criarForm();\n  }\n\n  criarForm(): void {\n    this.form = this.fb.group({\n      nome: ['', Validators.required],\n      cpf: ['', [Validators.required, CpfValidator]],\n      datanascimento: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      senha: ['', Validators.required],\n      perfil: ['', Validators.required],\n    });\n  }\n\n  carregaPerfils(): void {\n    this.subscriptions.push(\n      this.perfilService.getAll().subscribe(\n        (data) => {\n          this.perfils = data;\n        },\n        (err) => {\n          this.erroGeral = err.error;\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { timeOut: 4000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  cadastrarUsuario(): void {\n    if (this.form.invalid) {\n      this.toast.error('Formulário com campos invalidos!', 'Erro!', {\n        timeOut: 4000,\n      });\n      this.toucheCamposFormulario();\n      return;\n    }\n\n    // carregando informações para salvar novo usuário\n    this.usuarioNew = this.form.value;\n    this.usuarioNew.perfilId = this.form.value.perfil;\n    this.usuarioNew.dataNascimento = this.form.value.datanascimento;\n    this.usuarioNew.criado = new Date();\n    this.usuarioNew.login = this.usuarioNew.email;\n    this.usuarioNew.status = 1;\n    this.subscriptions.push(\n      this.usuarioService.insert(this.usuarioNew).subscribe(\n        (data) => {\n          const msg = 'Usuário cadastradas com sucesso!';\n\n          Swal.fire({\n            title: msg,\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n          setTimeout(() => {\n            this.refresh();\n          }, 1900);\n        },\n        (err) => {\n          this.erroGeral = err.error;\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { timeOut: 4000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  toucheCamposFormulario(): void {\n    this.form.get('cpf').markAsTouched();\n    this.form.get('email').markAsTouched();\n    this.form.get('nome').markAsTouched();\n    this.form.get('senha').markAsTouched();\n    this.form.get('perfil').markAsTouched();\n    this.form.get('datanascimento').markAsTouched();\n  }\n\n  refresh(): void {\n    window.location.reload();\n  }\n}\n","<ngx-spinner color = \"#fff\" [fullScreen] = \"true\" type=\"ball-clip-rotate-multiple\" >\n  <h1 style=\"color: aliceblue;\">\n    Cadastrando novo usuário...\n  </h1>\n</ngx-spinner>\n<div id=\"wrapper\">\n  <app-menu></app-menu>\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n      <div class=\"wrapper wrapper-content animated fadeInRight\">\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <div class=\"ibox float-e-margins\">\n                    <div class=\"ibox-title\">\n                        <h5>Formulário para preenchimento &nbsp;&nbsp;<b class=\"text-danger\"><i class='fa fa-exclamation'></i> Campos obrigatórios</b></h5>\n                        <div class=\"ibox-tools\">\n                            <a class=\"collapse-link\">\n                                <i class=\"fa fa-chevron-up\"></i>\n                            </a>\n                        </div>\n                    </div>\n                    <div class=\"ibox-content\">\n\n                        <form class=\"form-horizontal\" [formGroup]=\"form\" novalidate>\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Nome <i class='fa fa-exclamation text-danger'></i></label>\n                                <div class=\"col-sm-10\">\n                                    <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-vcard'></i></span>\n                                      <input type=\"text\" formControlName=\"nome\" class=\"form-control\" name=\"nome\" ></div>\n                                      <small *ngIf=\"form.get('nome').valid && form.get('nome').touched\" class=\"form-text text-success\" >ok</small>\n                                      <small *ngIf=\"!form.get('nome').valid && form.get('nome').touched\"class=\"form-text text-danger\" >Campo nome requerido</small>\n                                </div>\n                            </div>\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">CPF <i class='fa fa-exclamation text-danger'></i></label>\n                                <div class=\"col-sm-10\">\n                                    <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-id-card'></i></span>\n                                    <input type=\"text\" formControlName=\"cpf\" class=\"form-control\" name=\"cpf\" mascara=\"999.999.999-99\" ></div>\n                                    <small *ngIf=\"form.get('cpf').valid && form.get('cpf').touched\" class=\"form-text text-success\" >ok</small>\n                                    <small *ngIf=\"!form.get('cpf').valid && form.get('cpf').touched\"class=\"form-text text-danger\" >CPF inválido</small>\n                                </div>\n                            </div>\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Data de Nasc. <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\" >\n                                  <div class=\"input-group date m-b\">\n                                      <span class=\"input-group-addon\">\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                      </span>\n                                      <input matInput [matDatepicker]=\"picker\" disabled formControlName=\"datanascimento\" class=\"form-control\">\n                                      <mat-datepicker #picker disabled=\"false\" [startAt]=\"startDate\"></mat-datepicker>\n                                  </div>\n                              </div>\n                          </div>\n\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Email <i class='fa fa-exclamation text-danger'></i></label>\n                                <div class=\"col-sm-10\">\n                                    <div class=\"input-group m-b\"><span class=\"input-group-addon\">@</span>\n                                      <input type=\"email\" formControlName=\"email\" class=\"form-control\" name=\"email\" >\n                                      <small *ngIf=\"form.get('email').valid && form.get('email').touched\" class=\"form-text text-success\" >ok</small>\n                                      <small *ngIf=\"!form.get('email').valid && form.get('email').touched\"class=\"form-text text-danger\" >E-mail inválido</small>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"hr-line-dashed\"></div>\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Senha <i class='fa fa-exclamation text-danger'></i></label>\n                              <div class=\"col-sm-10\">\n                                  <div class=\"input-group m-b\"><span class=\"input-group-addon\"><i class='fa fa-eye-slash'></i></span>\n                                      <input type=\"password\" formControlName=\"senha\" class=\"form-control\" name=\"senha\" >\n                                      <small *ngIf=\"form.get('senha').valid && form.get('senha').touched\" class=\"form-text text-success\" >ok</small>\n                                      <small *ngIf=\"!form.get('senha').valid && form.get('senha').touched\"class=\"form-text text-danger\" >Senha requerida</small>\n                                  </div>\n                              </div>\n                            </div>\n                            <div class=\"form-group\"><label class=\"col-sm-2 control-label\">Perfil <i class='fa fa-exclamation text-danger'></i></label>\n                                <div class=\"col-sm-10\">\n                                    <div class=\"col-lg-4 m-l-n\">\n                                        <select class='form-control' formControlName=\"perfil\" name ='perfil_id'>\n                                          <option *ngFor=\"let perfil of perfils\" value='{{ perfil.id }}'>{{ perfil.nome }}</option>\n                                        </select>\n                                        <small *ngIf=\"form.get('perfil').valid && form.get('perfil').touched\" class=\"form-text text-success\" >ok</small>\n                                        <small *ngIf=\"!form.get('perfil').valid && form.get('perfil').touched\"class=\"form-text text-danger\" >Perfil não selecionado</small>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"hr-line-dashed\"></div>\n                            <div class=\"form-group\">\n                                <div class=\"col-sm-4 col-sm-offset-2\">\n                                    <button class=\"btn btn-w-m btn-warning\" type=\"reset\" style=\"margin-right: 20px;\"><i class=\"fa fa-close\"></i> Limpar</button>\n                                    <button class=\"btn btn-w-m btn-primary\" type=\"button\" (click)=\"cadastrarUsuario()\"><i class=\"fa fa-check\"></i> Cadastrar</button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n      </div>\n    </div>\n</div>\n","export * from './cadastrar.component';\n","export * from './cadastrar';\nexport * from './listar';\nexport * from './perfil-user';\nexport * from './usuario.component';\nexport * from './atualizar';\n","export * from './listar.component';\n","import { Component, OnInit } from '@angular/core';\nimport {\n  UsuarioListAllDTO,\n  UsuarioService,\n  Usuario,\n  ErroDTO,\n  ErroGeral,\n} from 'src/app/modules/shared';\nimport { Subscription } from 'rxjs';\nimport { API_CONFIG } from 'src/app/modules/shared/config';\nimport { ToastrService } from 'ngx-toastr';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-listar',\n  templateUrl: './listar.component.html',\n  styleUrls: ['./listar.component.css'],\n})\nexport class ListarComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  usuarios: UsuarioListAllDTO[];\n\n  usuariosFiltrados: UsuarioListAllDTO[];\n\n  usuario = {} as UsuarioListAllDTO;\n\n  userDetalhes = {} as Usuario;\n\n  erroGeral = {} as ErroGeral;\n\n  erroDTO: ErroDTO;\n\n  baseUrlServidor = API_CONFIG.baseUrl;\n\n  constructor(\n    private toast: ToastrService,\n    private usuarioService: UsuarioService,\n  ) {}\n\n  ngOnInit(): void {\n    this.carregarUsuarios();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  carregarUsuarios(): void {\n    this.subscriptions.push(\n      this.usuarioService.getAll().subscribe(\n        (data) => {\n          this.usuarios = data;\n          this.usuariosFiltrados = data;\n        },\n        (err) => {\n          this.erroGeral = err.error;\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                { timeOut: 4000 },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  ativarDesativarUsuario(usuario: UsuarioListAllDTO): void {\n    const status = usuario.status === 1 ? 'desativar' : 'ativar';\n    this.usuario = usuario;\n    Swal.fire({\n      title: `Deseja ${status} usuario: ${usuario.nome}`,\n      icon: 'warning',\n      showCancelButton: true,\n      cancelButtonText: 'Cancelar',\n      confirmButtonText: `Sim, confirmar!`,\n    }).then((result) => {\n      if (result.value) {\n        this.usuario.status = status === 'ativar' ? 1 : 0;\n        this.usuarioService.updateStatus(this.usuario).subscribe(\n          (data) => {\n            this.carregarUsuarios();\n            Swal.fire({\n              title: status === 'ativar' ? 'Ativado!' : 'Desativado',\n              text: `Usuário ${usuario.nome} ${status} com sucesso!`,\n              icon: 'success',\n              showConfirmButton: false,\n              timer: 2000,\n            });\n          },\n          (err) => {\n            this.erroGeral = err.error;\n\n            if (this.erroGeral.errors) {\n              this.erroGeral.errors.forEach((e) => {\n                this.erroDTO = e;\n                this.toast.error(\n                  `Erro ${this.erroGeral.status} ${e.message}`,\n                  e.fieldName,\n                  { timeOut: 4000 },\n                );\n              });\n            } else {\n              const title = `Erro ${this.erroGeral.status}`;\n              this.toast.error(this.erroGeral.message, title, {\n                timeOut: 3000,\n              });\n            }\n          },\n        );\n      }\n    });\n  }\n\n  filtraUsuarioPeloNome(nome: string): void {\n    if (!nome) {\n      this.usuariosFiltrados = this.usuarios;\n    } else {\n      this.usuariosFiltrados = this.usuarios.filter((x) =>\n        x.nome.trim().toLowerCase().includes(nome.trim().toLowerCase()),\n      );\n    }\n  }\n\n  carregaUser(id: number): void {\n    this.usuarioService.getUserById(id).subscribe((data) => {\n      this.userDetalhes = data;\n    });\n  }\n}\n","<div id=\"wrapper\">\n  <app-menu>\n\n  </app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu>\n\n        </app-barra-de-menu>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"ibox float-e-margins\">\n                <div class=\"ibox-title\">\n                    <h5>Tabela de registros retornados da base de dados</h5>\n                    <div class=\"ibox-tools\">\n                        <a class=\"collapse-link\">\n                            <i class=\"fa fa-chevron-up\">\n\n                            </i>\n                        </a>\n                    </div>\n                </div>\n                <div class=\"ibox-content\">\n                  <input\n                      class=\"form-control mr-sm-2\"\n                      type=\"search\"\n                      placeholder=\"Busca usuário por nome\"\n                      aria-label=\"Search\"\n                      #termoPesquisa\n                      (keyup)=\"filtraUsuarioPeloNome(termoPesquisa.value)\"\n                  >\n                </div>\n                <div class=\"ibox-content\">\n\n                    <div class=\"table-responsive\">\n                        <table class='table table-striped table-bordered table-hover dataTables-example'>\n                          <thead>\n                            <tr>\n                              <th>Nome</th>\n                              <th>CPF</th>\n                              <th><small>Dt Nasc.</small></th>\n                              <th>Email</th>\n                              <th>Status</th>\n                              <th>Ações</th>\n                              <th>Detalhes</th>\n                            </tr>\n                          </thead>\n                            <tbody>\n                            <tr class='gradeX' *ngFor=\"let user of usuariosFiltrados\">\n                              <td><small>{{ user.nome }}</small></td>\n                              <td><small>{{ user.cpf | cpfMask }}</small></td>\n                              <td> {{ user.dataNascimento | date: 'dd/MM/y' }} </td>\n                              <td><small> {{ user.email }} </small></td>\n                              <td>\n                                  <button *ngIf=\"user.status==0\" (click)=\"ativarDesativarUsuario(user)\" type=\"button\" class='btn btn-outline btn-danger'>\n                                    Desativado\n                                  </button>\n                                  <button *ngIf=\"user.status!=0\" (click)=\"ativarDesativarUsuario(user)\" type=\"button\" class='btn btn-outline btn-info'>\n                                    Ativado\n                                  </button>\n                              </td>\n                              <td>\n                                <a href='/usuario/atualizar/{{user.id}}'>\n                                  <button type='button' class='btn btn-outline btn-success'>\n                                    <i class='fa fa-edit'></i>\n                                    Editar\n                                  </button>\n                                </a>\n                              </td>\n                              <td>\n                                <button (click)=\"carregaUser(user.id)\" type='button' class='btn btn-outline btn-primary' data-toggle=\"modal\" data-target=\"#myModal\">\n                                  Detalhes\n                                </button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    </div>\n</div>\n\n<div class=\"col-lg-4\">\n    <div class=\"modal inmodal\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n        <div class=\"modal-dialog\">\n        <div class=\"modal-content animated bounceInRight\">\n                <div class=\"modal-header\">\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button>\n                    <img *ngIf=\"userDetalhes.imageProfile\" alt=\"image\" class=\"img-circle\" src=\"data:image/jpeg;base64,{{ userDetalhes.imageProfile }}\" style=\"width: 70px; height: 70px;\"/>\n                      <img *ngIf=\"!userDetalhes.imageProfile\" alt=\"image\" class=\"img-circle\" src=\"../../../../../assets/img/user-default.png\" style=\"width: 70px; height: 70px;\"/>\n                    <h4 class=\"modal-title\">{{ userDetalhes.nome }}</h4>\n                    <h4 *ngIf=\"!userDetalhes.nome\" class=\"modal-title\">Sem nome</h4>\n                    <small class=\"font-bold\">{{ userDetalhes.perfil ? 'Perfil: ' + userDetalhes.perfil.nome : 'Perfil não cadastrado' }}</small>\n                </div>\n                <div class=\"modal-body\">\n                    <p> <strong>Data de Nascimento:</strong> {{ userDetalhes.dataNascimento | date: 'dd/MM/y' }}</p>\n                    <p> <strong>Login: </strong> {{ userDetalhes.login }}</p>\n                    <p> <strong>CPF: </strong> {{ userDetalhes.cpf | cpfMask }}</p>\n                    <p> <strong>Cadastrado  </strong>em: {{ userDetalhes.criado | date: 'dd/MM/y' }}</p>\n                    <p> <strong>Status: </strong> {{ userDetalhes.status === 1 ? 'Ativado' : 'Desativado' }}</p>\n\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n","export * from './perfil-user.component';\n","import { Component, OnInit } from '@angular/core';\n\nimport { API_CONFIG } from 'src/app/modules/shared/config';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Subscription } from 'rxjs';\nimport Swal from 'sweetalert2';\nimport { ToastrService } from 'ngx-toastr';\nimport {\n  Usuario,\n  StorangeService,\n  UsuarioService,\n  ErroGeral,\n  ErroDTO,\n} from '../../../../shared';\n\n@Component({\n  selector: 'app-perfil-user',\n  templateUrl: './perfil-user.component.html',\n  styleUrls: ['./perfil-user.component.css'],\n})\nexport class PerfilUserComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  usuario = {} as Usuario;\n\n  erroGeral = {} as ErroGeral;\n\n  erroDTO: ErroDTO;\n\n  file = new FormData();\n\n  baseUrlServidor = API_CONFIG.baseUrl;\n\n  form: FormGroup;\n\n  constructor(\n    private storangeService: StorangeService,\n    private toast: ToastrService,\n    private spinner: NgxSpinnerService,\n    private fb: FormBuilder,\n    private usuarioService: UsuarioService,\n  ) {}\n\n  ngOnInit(): void {\n    this.carregaDadosUsuario();\n    this.criarForm();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  criarForm(): void {\n    this.form = this.fb.group({\n      file: [''],\n    });\n  }\n\n  onFileSelect(event): void {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.form.get('file').setValue(file);\n    }\n  }\n\n  carregaDadosUsuario(): void {\n    this.usuario = this.storangeService.getLocalUser();\n  }\n\n  atualizarImagePerfil(): void {\n    this.spinner.show();\n    if (this.form.invalid) {\n      this.spinner.hide();\n\n      this.toast.error(\n        'Favor selecionar nova imagem de perfil',\n        'Erro 404 Not Found',\n        {\n          timeOut: 4000,\n        },\n      );\n    }\n\n    this.file.append('file', this.form.get('file').value);\n    this.subscriptions.push(\n      this.usuarioService.updateImage(this.file, this.usuario.id).subscribe(\n        (data) => {\n          this.spinner.hide();\n          Swal.fire({\n            title: 'sucesso',\n            text: 'Imagem do perfil atualizada!',\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 1000,\n          });\n          this.atualizaDadosUser();\n          setTimeout(() => {\n            this.refresh();\n          }, 1000);\n        },\n        (err) => {\n          this.erroGeral = err.error;\n          this.spinner.hide();\n\n          if (this.erroGeral.errors) {\n            this.erroGeral.errors.forEach((e) => {\n              this.erroDTO = e;\n              this.toast.error(\n                `Erro ${this.erroGeral.status} ${e.message}`,\n                e.fieldName,\n                {\n                  timeOut: 4000,\n                },\n              );\n            });\n          } else {\n            const title = `Erro ${this.erroGeral.status}`;\n            this.toast.error(this.erroGeral.message, title, {\n              timeOut: 3000,\n            });\n          }\n        },\n      ),\n    );\n  }\n\n  atualizaDadosUser(): void {\n    this.storangeService.setLocalUser(null);\n    this.usuarioService.getUserById(this.usuario.id).subscribe((data) => {\n      this.storangeService.setLocalUser(data);\n      this.carregaDadosUsuario();\n    });\n  }\n\n  refresh() {\n    window.location.reload();\n  }\n}\n","<ngx-spinner color = \"#fff\" [fullScreen] = \"true\" type=\"ball-clip-rotate-multiple\" >\n  <h1 style=\"color: aliceblue;\">\n    Atualizando...\n  </h1>\n</ngx-spinner>\n<div id=\"wrapper\">\n  <app-menu></app-menu>\n\n    <div id=\"page-wrapper\" class=\"gray-bg\">\n      <div class=\"row border-bottom\">\n        <!-- NAVE -->\n        <app-barra-de-menu></app-barra-de-menu>\n      </div>\n\n      <div class=\"wrapper wrapper-content animated fadeInRight\">\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <div class=\"ibox float-e-margins\">\n                    <div class=\"ibox-title\">\n                        <h5>Perfil do usuário</h5>\n                        <div class=\"ibox-tools\">\n                            <a class=\"collapse-link\">\n                                <i class=\"fa fa-chevron-up\"></i>\n                            </a>\n                        </div>\n                    </div>\n                    <div class=\"ibox-content\" style=\"display: flex; align-items: center; flex-direction: column;\">\n                      <div class=\"row m-b-lg m-t-lg\">\n                        <div class=\"col-md-9\">\n\n                            <div class=\"profile-image\">\n                              <form class=\"form-horizontal\" [formGroup]=\"form\">                                <label for=\"avatar\" style=\"cursor: pointer;\">\n                                  <img *ngIf=\"usuario.imageProfile\" for='imagemProfile' alt=\"image\" class=\"img-circle circle-border m-b-md\" src=\"data:image/jpeg;base64,{{ usuario.imageProfile }}\" style=\"width: 100px; height: 100px;\"/>\n                                  <img *ngIf=\"!usuario.imageProfile\" alt=\"image\" class=\"img-circle circle-border m-b-md\" src=\"../../../../../assets/img/user-default.png\" style=\"width: 130px; height: 130px;\"/>\n                                  <input\n                                    formControlName=\"file\"\n                                    type=\"file\"\n                                    accept=\"image/*\"\n                                    name=\"avatar\"\n                                    id=\"avatar\"\n                                    style=\"display: none;\"\n                                    (change)=\"onFileSelect($event)\"\n                                  >\n                                </label>\n                                <p>Clique na imagem para atualizar foto de perfil</p>\n                                <button type=\"button\" (click)=\"atualizarImagePerfil()\" class=\"btn btn-primary\">Atualizar</button>\n                              </form>\n                            </div>\n                            <div class=\"profile-info\">\n                                <div class=\"col-md-12\">\n                                    <div>\n                                        <h2 class=\"no-margins\">\n                                            {{ usuario.nome | uppercase }}\n                                        </h2>\n                                        <h4>{{ usuario.perfil?.nome | uppercase }}</h4>\n\n                                          <table class=\"table small m-b-xs\">\n                                            <tbody>\n                                            <tr>\n                                                <td>\n                                                    <strong>E-mail</strong>\n                                                </td>\n                                                <td>\n                                                  {{ usuario.email }}\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td>\n                                                    <strong>Data de Nascimento</strong>\n                                                </td>\n                                                <td>\n                                                    {{ usuario.dataNascimento | date: 'dd/MM/y' }}\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td>\n                                                    <strong>CPF</strong>\n                                                </td>\n                                                <td>\n                                                    {{ usuario.cpf | cpfMask }}\n                                                </td>\n                                            </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({ template: `<router-outlet></router-outlet>` })\nexport class UsuarioComponent {}\n","export * from './user.module';\nexport * from './router-user.module';\n","import { NgModule } from '@angular/core';\n\nimport { RouterModule, Routes } from '@angular/router';\n\nimport {\n  CadastrarComponent,\n  ListarComponent,\n  UsuarioComponent,\n  PerfilUserComponent,\n  AtualizarComponent,\n} from './components';\nimport { AuthGuardService, AutenticaRotaSerivce } from '../../shared';\n\nexport const UserRoutes: Routes = [\n  {\n    path: 'usuario',\n    component: UsuarioComponent,\n    canActivate: [AuthGuardService],\n    children: [\n      {\n        path: 'cadastrar',\n        component: CadastrarComponent,\n        canActivate: [AutenticaRotaSerivce],\n      },\n      {\n        path: 'pesquisar',\n        component: ListarComponent,\n        canActivate: [AutenticaRotaSerivce],\n      },\n      { path: 'perfil', component: PerfilUserComponent },\n      { path: 'atualizar/:userId', component: AtualizarComponent },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(UserRoutes)],\n\n  exports: [RouterModule],\n})\nexport class UserRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport {\n  MatNativeDateModule,\n  DateAdapter,\n  MAT_DATE_FORMATS,\n} from '@angular/material/core';\n\nimport {\n  CadastrarComponent,\n  ListarComponent,\n  UsuarioComponent,\n  PerfilUserComponent,\n  AtualizarComponent,\n} from './components';\nimport {\n  SharedModule,\n  MenuModule,\n  APP_DATE_FORMATS,\n  AppDateAdapter,\n} from '../../shared';\n\n@NgModule({\n  declarations: [\n    CadastrarComponent,\n    ListarComponent,\n    UsuarioComponent,\n    PerfilUserComponent,\n    AtualizarComponent,\n  ],\n  imports: [\n    CommonModule,\n    MenuModule,\n    RouterModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatNativeDateModule,\n    NgxSpinnerModule,\n    ReactiveFormsModule,\n    NgxSpinnerModule,\n    SharedModule,\n  ],\n  providers: [\n    MatDatepickerModule,\n    { provide: DateAdapter, useClass: AppDateAdapter },\n    { provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS },\n  ],\n})\nexport class UserModule {}\n","export const environment = {\n  production: false,\n  baseURL: 'http://localhost:8080',\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}