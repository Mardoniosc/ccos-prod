{"version":3,"file":"159.cbf7682b8ee375da.js","mappings":"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","names":["AcessoService","BaseResourceService","constructor","injector","super","this","i0","factory","AcessoComponent","BaseResourceListComponent","acessoService","selectors","ctx","HistoricoService","routes","path","component","HistoricoComponent","historicoService","LogModule","CommonModule","RouterModule","SharedModule","NotFoundDataComponent","PageHeaderComponent","EventEmitter","ngOnInit","filtrar","termo","pesquisar","emit","RulesService","temPermissao","rule","token","localStorage","getItem","ELocalStorage","ROLES","AuthUtils","Object","find","permissao","injecto","resourceService","_fuseConfirmationService","get","FuseConfirmationService","_matPaginatorIntl","MatPaginatorIntl","_ruleService","carregaInformacoesResource","itemsPerPageLabel","setPageSizeOptions","setPageSizeOptionsInput","pageSizeOptions","split","map","str","getAll","filtro","pagina","direcaoOrdenacao","tamanho","ordenarPor","subscribe","data","resources","content","length","totalElements","pageSize","size","excluir","resource","open","title","id","message","icon","show","name","color","actions","confirm","label","cancel","dismissible","afterClosed","result","delete","res","toastr","timeOut","progressBar","closeButton","error","paginacao","event","pageIndex","filtrarResource","validaPermissao"],"sourceRoot":"webpack:///","sources":["./src/app/modules/log/api/acesso.service.ts","./src/app/modules/log/containers/acesso/acesso.component.html","./src/app/modules/log/containers/acesso/acesso.component.ts","./src/app/modules/log/api/historico.service.ts","./src/app/modules/log/containers/historico/historico.component.html","./src/app/modules/log/log.module.ts","./src/app/modules/log/containers/historico/historico.component.ts","./src/app/shared/components/not-found-data/not-found-data.component.ts","./src/app/shared/components/not-found-data/not-found-data.component.html","./src/app/shared/components/page-header/page-header.component.html","./src/app/shared/components/page-header/page-header.component.ts","./src/app/shared/services/rules.service.ts","./src/app/shared/containers/base-resource-list/base-resource-list.component.ts"],"sourcesContent":["import { Injectable, Injector } from '@angular/core';\nimport { BaseResourceService } from 'app/shared/services/base-resource.service';\nimport { Acesso, AcessoResponse } from '../models/log.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AcessoService extends BaseResourceService<Acesso, AcessoResponse> {\n  constructor(protected injector: Injector) {\n    super('/historicoacesso', injector);\n  }\n}\n","<div class=\"absolute inset-0 flex flex-col min-w-0 overflow-hidden bg-card dark:bg-transparent\">\n  <div class=\"flex flex-col flex-auto min-w-0 overflow-y-auto\" cdkScrollable>\n    <app-page-header page-title=\"Logs Acesso\" placeholder-text=\"Buscar por nome\" (pesquisar)=\"filtrarResource($event)\"\n      [show-button]=\"false\" [show-search]=\"false\">\n    </app-page-header>\n\n    <!-- Page body -->\n    <div class=\"flex flex-col flex-auto min-w-0 overflow-y-auto\" cdkScrollable *ngIf=\"length > 0\">\n      <mat-table [dataSource]=\"resources\">\n        <!-- User name Definition -->\n        <ng-container matColumnDef=\"id\">\n          <mat-header-cell *matHeaderCellDef> Código </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\"> {{ row.id }} </mat-cell>\n        </ng-container>\n\n        <!-- Age Definition -->\n        <ng-container matColumnDef=\"dataAcesso\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> Data Acesso </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            {{ row.dataAcesso | date: \"d/MM/Y\" }}\n          </mat-cell>\n        </ng-container>\n\n        <!-- Age Definition -->\n        <ng-container matColumnDef=\"usuarioNome\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> Usuário </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            {{ row.usuarioNome }}\n          </mat-cell>\n        </ng-container>\n\n        <!-- Age Definition -->\n        <ng-container matColumnDef=\"loginIp\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> IP Origem </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            {{ row.loginIp ? row.loginIp : \"0.0.0.0\" }}\n          </mat-cell>\n        </ng-container>\n\n        <!-- Header and Row Declarations -->\n        <mat-header-row *matHeaderRowDef=\"['id', 'dataAcesso', 'usuarioNome', 'loginIp']\"></mat-header-row>\n        <mat-row *matRowDef=\"\n            let row;\n            columns: ['id', 'dataAcesso', 'usuarioNome', 'loginIp']\n          \"></mat-row>\n      </mat-table>\n    </div>\n\n    <!-- NENHUM DADO ENCONTRADO -->\n    <app-not-found-data class=\"h-full\" mensagem=\"Nenhum registro de perfils encontrado!\" *ngIf=\"length <= 0\">\n    </app-not-found-data>\n  </div>\n  <div class=\"flex flex-0 flex-col\" *ngIf=\"length > 0\">\n    <mat-paginator class=\"flex justify-end border-t\" [length]=\"length\" [pageSize]=\"pageSize\"\n      [pageSizeOptions]=\"pageSizeOptions\" (page)=\"paginacao($event)\" aria-label=\"Select page\">\n    </mat-paginator>\n  </div>\n</div>\n","import { Component, Injector } from '@angular/core';\nimport { BaseResourceListComponent } from 'app/shared/containers/base-resource-list/base-resource-list.component';\nimport { Acesso, AcessoResponse } from '../../models/log.model';\nimport { AcessoService } from '../../api/acesso.service';\n\n@Component({\n  selector: 'app-acesso',\n  templateUrl: './acesso.component.html',\n  styleUrls: ['./acesso.component.scss'],\n})\nexport class AcessoComponent extends BaseResourceListComponent<\n  Acesso,\n  AcessoResponse\n> {\n  constructor(\n    protected injector: Injector,\n    protected acessoService: AcessoService\n  ) {\n    super(injector, acessoService);\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { BaseResourceService } from 'app/shared/services/base-resource.service';\nimport { Historico, HistoricoResponse } from '../models/log.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HistoricoService extends BaseResourceService<\n  Historico,\n  HistoricoResponse\n> {\n  constructor(protected injector: Injector) {\n    super('/historicoslog', injector);\n  }\n}\n","<div class=\"absolute inset-0 flex flex-col min-w-0 overflow-hidden bg-card dark:bg-transparent\">\n  <div class=\"flex flex-col flex-auto min-w-0 overflow-y-auto\" cdkScrollable>\n    <app-page-header page-title=\"Hitórico Usuário\" placeholder-text=\"Buscar por nome\"\n      (pesquisar)=\"filtrarResource($event)\" [show-button]=\"false\" [show-search]=\"false\">\n    </app-page-header>\n\n    <!-- Page body -->\n    <div class=\"flex flex-col flex-auto min-w-0 overflow-y-auto\" cdkScrollable *ngIf=\"length > 0\">\n      <mat-table [dataSource]=\"resources\">\n        <!-- User name Definition -->\n        <ng-container matColumnDef=\"id\">\n          <mat-header-cell *matHeaderCellDef> Código </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\"> {{ row.id }} </mat-cell>\n        </ng-container>\n\n        <!-- Age Definition -->\n        <ng-container matColumnDef=\"dataAcesso\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> Data Acesso </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            {{ row.dataAcesso | date: \"d/MM/Y\" }}\n          </mat-cell>\n        </ng-container>\n\n        <!-- Age Definition -->\n        <ng-container matColumnDef=\"usuarioNome\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> Usuário </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            {{ row.usuarioNome }}\n          </mat-cell>\n        </ng-container>\n\n        <!-- Age Definition -->\n        <ng-container matColumnDef=\"loginIp\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> IP Origem </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            {{ row.loginIp ? row.loginIp : \"0.0.0.0\" }}\n          </mat-cell>\n        </ng-container>\n\n        <!-- Age Definition -->\n        <ng-container matColumnDef=\"operacao\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> Operação </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            {{ row.operacao }}\n          </mat-cell>\n        </ng-container>\n\n        <!-- Age Definition -->\n        <ng-container matColumnDef=\"tabela\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> Tabela </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            {{ row.tabela }}\n          </mat-cell>\n        </ng-container>\n\n        <!-- Header and Row Declarations -->\n        <mat-header-row *matHeaderRowDef=\"[\n            'id',\n            'dataAcesso',\n            'usuarioNome',\n            'loginIp',\n            'operacao',\n            'tabela'\n          ]\"></mat-header-row>\n        <mat-row *matRowDef=\"\n            let row;\n            columns: [\n              'id',\n              'dataAcesso',\n              'usuarioNome',\n              'loginIp',\n              'operacao',\n              'tabela'\n            ]\n          \"></mat-row>\n      </mat-table>\n    </div>\n\n    <!-- NENHUM DADO ENCONTRADO -->\n    <app-not-found-data class=\"h-full\" mensagem=\"Nenhum registro de perfils encontrado!\" *ngIf=\"length <= 0\">\n    </app-not-found-data>\n  </div>\n  <div class=\"flex flex-0 flex-col\" *ngIf=\"length > 0\">\n    <mat-paginator class=\"flex justify-end border-t\" [length]=\"length\" [pageSize]=\"pageSize\"\n      [pageSizeOptions]=\"pageSizeOptions\" (page)=\"paginacao($event)\" aria-label=\"Select page\">\n    </mat-paginator>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from 'app/shared/shared.module';\nimport { Route, RouterModule } from '@angular/router';\nimport { AcessoComponent } from './containers/acesso/acesso.component';\nimport { HistoricoComponent } from './containers/historico/historico.component';\n\nconst routes: Route[] = [\n  { path: 'acesso', component: AcessoComponent },\n  { path: 'historico', component: HistoricoComponent },\n];\n\n@NgModule({\n  declarations: [AcessoComponent, HistoricoComponent],\n  imports: [CommonModule, RouterModule.forChild(routes), SharedModule],\n})\nexport class LogModule {}\n","import { Component, Injector } from '@angular/core';\nimport { BaseResourceListComponent } from 'app/shared/containers/base-resource-list/base-resource-list.component';\nimport { HistoricoService } from '../../api/historico.service';\nimport { Historico, HistoricoResponse } from '../../models/log.model';\n\n@Component({\n  selector: 'app-historico',\n  templateUrl: './historico.component.html',\n  styleUrls: ['./historico.component.scss'],\n})\nexport class HistoricoComponent extends BaseResourceListComponent<\n  Historico,\n  HistoricoResponse\n> {\n  constructor(\n    protected injector: Injector,\n    protected historicoService: HistoricoService\n  ) {\n    super(injector, historicoService);\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found-data',\n  templateUrl: './not-found-data.component.html',\n  styleUrls: ['./not-found-data.component.scss'],\n})\nexport class NotFoundDataComponent {\n  @Input('mensagem') mensagem: string;\n}\n","<div class=\"flex flex-col w-full h-full items-center justify-center border-t-2 border-gray-200\">\n  <img src=\"assets/icons/searching.svg\" class=\"w-64 h-64\" alt=\"\">\n  <p class=\"mt-2 text-lg md:text-2xl font-medium tracking-tight text-center text-secondary\">{{ mensagem }}</p>\n</div>\n","<div\n  class=\"relative flex flex-col flx-col-0 sm:flex-row flex-0 sm:items-center sm:justify-between py-8 px-6 md:px-8 border-b\">\n  <div class=\"text-4xl font-extrabold tracking-tight\">{{ pageTitle }}</div>\n\n  <div class=\"flex flex-col sm:flex-row items-start shrink-0 sm:items-center mt-6 sm:mt-0 sm:ml-4\">\n    <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded min-w-64\" *ngIf=\"showSearch\">\n      <mat-icon class=\"icon-size-5\" matPrefix [svgIcon]=\"'heroicons_solid:search'\"></mat-icon>\n      <input matInput id=\"searchPerfil\" #temoPesquisa (keyup)=\"filtrar(temoPesquisa.value)\" [autocomplete]=\"'off'\"\n        [placeholder]=\"placeholder\" />\n    </mat-form-field>\n    <!-- Add product button -->\n    <a [routerLink]=\"['novo']\" routerLinkActive=\"router-link-active\" *ngIf=\"showButton\"\n      class=\"mat-focus-indicator mt-2 fuse-mat-button-rounded mat-flat-button mat-button-base mat-accent m-1 text-1xl\"\n      mat-flat-button>\n      <span class=\"p-3 flex flex-row items-center\">\n        <mat-icon class=\"icon-size-5\" [svgIcon]=\"'heroicons_outline:plus'\"></mat-icon>\n        Cadastrar\n      </span>\n    </a>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-page-header',\n  templateUrl: './page-header.component.html',\n  styleUrls: ['./page-header.component.scss'],\n})\nexport class PageHeaderComponent implements OnInit {\n  @Input('page-title') pageTitle: string = '';\n  @Input('show-button') showButton: boolean = true;\n  @Input('show-search') showSearch: boolean = true;\n  @Input('placeholder-text') placeholder: string = '';\n\n  @Output() pesquisar = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  filtrar(termo: string): void {\n    this.pesquisar.emit(termo);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AuthUtils } from 'app/core/auth/auth.utils';\nimport { ELocalStorage } from '../models/localstorage.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RulesService {\n  constructor() {}\n\n  temPermissao(rule: string): boolean {\n    const token = localStorage.getItem(ELocalStorage.TOKEN);\n    if (!token) {\n      return false;\n    }\n\n    const { ROLES } = AuthUtils.decodeToken(token);\n\n    if (Object(ROLES).find((permissao) => permissao == rule)) {\n      return true;\n    }\n\n    return false;\n  }\n}\n","import { Component, Injector, OnInit } from '@angular/core';\nimport { MatPaginatorIntl, PageEvent } from '@angular/material/paginator';\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\nimport { BaseResourceModel } from 'app/shared/models/base-resource.model';\nimport { IFilter } from 'app/shared/models/interface.model';\nimport { BaseResourceService } from 'app/shared/services/base-resource.service';\nimport { RulesService } from 'app/shared/services/rules.service';\nimport toastr from 'toastr';\n\n@Component({\n  template: '',\n})\nexport abstract class BaseResourceListComponent<T extends BaseResourceModel, R>\n  implements OnInit\n{\n  resources: T[] = [];\n\n  // MatPaginator Inputs\n  length = 0;\n  pageSize = 10;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n\n  // MatPaginator Output\n  pageEvent: PageEvent;\n  protected _fuseConfirmationService: FuseConfirmationService;\n  protected _matPaginatorIntl: MatPaginatorIntl;\n  protected _ruleService: RulesService;\n\n  constructor(\n    protected injecto: Injector,\n    protected resourceService: BaseResourceService<T, R>\n  ) {\n    this._fuseConfirmationService = this.injecto.get(FuseConfirmationService);\n    this._matPaginatorIntl = this.injecto.get(MatPaginatorIntl);\n    this._ruleService = this.injecto.get(RulesService);\n  }\n\n  ngOnInit(): void {\n    this.carregaInformacoesResource();\n    this._matPaginatorIntl.itemsPerPageLabel = 'Itens por página';\n  }\n\n  setPageSizeOptions(setPageSizeOptionsInput: string) {\n    if (setPageSizeOptionsInput) {\n      this.pageSizeOptions = setPageSizeOptionsInput\n        .split(',')\n        .map((str) => +str);\n    }\n  }\n\n  carregaInformacoesResource(): void {\n    const filtro: IFilter = {\n      filtro: '',\n      pagina: 0,\n      direcaoOrdenacao: 'DESC',\n      tamanho: 10,\n      ordenarPor: 'id',\n    };\n    this.resourceService.getAll(filtro).subscribe((data) => {\n      this.resources = data['content'];\n      this.length = data['totalElements'];\n      this.pageSize = data['size'];\n    });\n  }\n\n  excluir(resource: T): void {\n    const dialogRef = this._fuseConfirmationService.open({\n      title: `Deseja realmente excluir o item: ${resource.id}?`,\n      message: '',\n      icon: {\n        show: true,\n        name: 'heroicons_outline:exclamation',\n        color: 'warn',\n      },\n      actions: {\n        confirm: {\n          show: true,\n          label: 'Confirmar',\n          color: 'warn',\n        },\n        cancel: {\n          show: true,\n          label: 'Cancelar',\n        },\n      },\n      dismissible: false,\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result === 'confirmed') {\n        this.resourceService.delete(resource.id).subscribe(\n          (res) => {\n            toastr.success(`Item excluído com sucesso!`, '', {\n              timeOut: 10000,\n              progressBar: true,\n              closeButton: true,\n            });\n            this.carregaInformacoesResource();\n          },\n          (error) => {\n            toastr.error(\n              'Não foi possível excluir o perfil',\n              error.error.error,\n              {\n                timeOut: 10000,\n                progressBar: true,\n                closeButton: true,\n              }\n            );\n          }\n        );\n      }\n    });\n  }\n\n  paginacao(event: Event): void {\n    this.pageSize = event['pageSize'];\n    const filtro: IFilter = {\n      filtro: '',\n      pagina: event['pageIndex'],\n      direcaoOrdenacao: 'DESC',\n      tamanho: this.pageSize,\n      ordenarPor: 'id',\n    };\n\n    this.resourceService.getAll(filtro).subscribe((data) => {\n      this.resources = data['content'];\n      this.length = data['totalElements'];\n      this.pageSize = data['size'];\n    });\n  }\n\n  filtrarResource(termo: string): void {\n    const filtro: IFilter = {\n      filtro: termo,\n      pagina: 0,\n      direcaoOrdenacao: 'DESC',\n      tamanho: 10,\n      ordenarPor: 'id',\n    };\n    this.resourceService.getAll(filtro).subscribe((data) => {\n      this.resources = data['content'];\n      this.length = data['totalElements'];\n      this.pageSize = data['size'];\n    });\n  }\n\n  validaPermissao(rule: string): boolean {\n    return this._ruleService.temPermissao(rule);\n  }\n}\n"],"x_google_ignoreList":[]}