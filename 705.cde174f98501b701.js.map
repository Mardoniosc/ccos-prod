{"version":3,"file":"705.cde174f98501b701.js","mappings":"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","names":["ClienteService","BaseResourceService","constructor","injector","super","this","i0","factory","ClienteListComponent","BaseResourceListComponent","clienteService","selectors","ctx","Cliente","BaseResourceModel","id","codigoSupergas","nome","enderecos","cnpj","email","telefone","observacoes","Endereco","logradouro","numero","complemento","bairro","cep","cidade","cidadeId","clienteId","EnderecoService","EstadoService","http","getAllEstados","get","env","apiPath","pegarTodasCidadeDoEstado","idEstado","FormEnderecoComponent","BaseResourceFormComponent","matDialogRef","data","enderecoService","estadosService","ngOnInit","endereco","setTimeout","subscribe","estados","estadoSelecionado","resourceForm","value","cidades","fecharJanela","close","salvar","idCliente","find","c","estado","e","adicionar","insert","error","toastr","timeOut","progressBar","closeButton","update","loadResource","patchValue","buildResourceForm","formBuilder","group","Validators","createPageTitle","editionPageTitle","MAT_DIALOG_DATA","ClienteFormComponent","_fuseConfirmationService","_matDialog","currentAction","carregarEnderecos","resource","adicionarEndereco","open","length","afterClosed","result","push","editarEndereco","excluirEndereco","title","message","icon","show","name","color","actions","confirm","label","cancel","dismissible","filter","delete","res","submitForm","map","setValue","routes","path","component","ClienteModule","CommonModule","RouterModule","SharedModule","FuseAlertModule","NgxMaskModule"],"sourceRoot":"webpack:///","sources":["./src/app/modules/ccos/cliente/api/cliente.service.ts","./src/app/modules/ccos/cliente/containers/cliente-list/cliente-list.component.html","./src/app/modules/ccos/cliente/containers/cliente-list/cliente-list.component.ts","./src/app/modules/ccos/cliente/models/cliente.model.ts","./src/app/modules/ccos/cliente/api/endereco.service.ts","./src/app/modules/ccos/cliente/api/estado.service.ts","./src/app/modules/ccos/cliente/components/form-endereco/form-endereco.component.html","./src/app/modules/ccos/cliente/components/form-endereco/form-endereco.component.ts","./src/app/modules/ccos/cliente/containers/cliente-form/cliente-form.component.html","./src/app/modules/ccos/cliente/containers/cliente-form/cliente-form.component.ts","./src/app/modules/ccos/cliente/cliente.module.ts"],"sourcesContent":["import { Injectable, Injector } from '@angular/core';\r\nimport { BaseResourceService } from 'app/shared/services/base-resource.service';\r\nimport { Cliente, ClienteResponse } from '../models/cliente.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClienteService extends BaseResourceService<Cliente, ClienteResponse> {\r\n  constructor(protected injector: Injector) {\r\n    super('/clientes', injector);\r\n  }\r\n}\r\n","<div class=\"absolute inset-0 flex flex-col min-w-0 overflow-hidden bg-card dark:bg-transparent\">\r\n  <div class=\"flex flex-col flex-auto min-w-0 overflow-y-auto\" cdkScrollable>\r\n\r\n    <app-page-header [show-button]=\"true\" page-title=\"Clientes\" placeholder-text=\"Buscar por nome\" (pesquisar)=\"filtrarResource($event)\">\r\n    </app-page-header>\r\n\r\n    <!-- Page body -->\r\n    <div class=\"flex flex-col flex-auto min-w-0 overflow-y-auto\" cdkScrollable *ngIf=\"length > 0\">\r\n      <mat-table [dataSource]=\"resources\">\r\n\r\n        <ng-container matColumnDef=\"codigoSupergas\" class=\"cursor-pointer\">\r\n          <mat-header-cell *matHeaderCellDef> Cód. Supergas </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let row\">\r\n            {{ row.codigoSupergas }}\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"nome\" class=\"cursor-pointer\">\r\n          <mat-header-cell *matHeaderCellDef> Nome </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let row\">\r\n            <span class=\"px-2 truncate ...\">\r\n              {{ row.nome }}\r\n            </span>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"enderecos\" class=\"cursor-pointer\">\r\n          <mat-header-cell *matHeaderCellDef> Endereço </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let row\">\r\n            {{ row.enderecos }}\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"cnpj\" class=\"cursor-pointer\">\r\n          <mat-header-cell *matHeaderCellDef> CNPJ </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let row\">\r\n            {{ row.cnpj }}\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"email\" class=\"cursor-pointer\">\r\n          <mat-header-cell *matHeaderCellDef> E-mail </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let row\">\r\n            {{ row.email }}\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"telefone\" class=\"cursor-pointer\">\r\n          <mat-header-cell *matHeaderCellDef> Telefones </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let row\" class=\"pl-2\">\r\n            {{ row.telefone }}\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"observacoes\" class=\"cursor-pointer\">\r\n          <mat-header-cell *matHeaderCellDef> Observação </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let row\">\r\n            {{ row.observacoes }}\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"acoes\">\r\n          <mat-header-cell *matHeaderCellDef> Ações </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let row\">\r\n            <span *ngIf=\"!validaPermissao('MANTER_PERFIL')\">-</span>\r\n            <span class=\"mr-2 cursor-pointer\" [routerLink]=\"[row.id, 'editar']\" *ngIf=\"validaPermissao('MANTER_PERFIL')\">\r\n              <mat-icon class=\"text-accent dark:text-accent-300\" svgIcon=\"heroicons_outline:pencil-alt\"></mat-icon>\r\n            </span>\r\n            <span (click)=\"excluir(row)\" class=\"cursor-pointer\" *ngIf=\"validaPermissao('MANTER_PERFIL')\">\r\n              <mat-icon class=\"text-warn-600\" svgIcon=\"heroicons_outline:trash\"></mat-icon>\r\n            </span>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- Header and Row Declarations -->\r\n        <mat-header-row *matHeaderRowDef=\"['codigoSupergas', 'nome', 'email', 'telefone', 'acoes']\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: ['codigoSupergas', 'nome', 'email', 'telefone', 'acoes']\"></mat-row>\r\n      </mat-table>\r\n    </div>\r\n\r\n    <!-- NENHUM DADO ENCONTRADO -->\r\n    <app-not-found-data class=\"h-full\" mensagem=\"Nenhum registro de perfils encontrado!\" *ngIf=\"length <= 0\">\r\n    </app-not-found-data>\r\n  </div>\r\n  <div class=\"flex flex-0 flex-col\" *ngIf=\"length > 0\">\r\n    <mat-paginator class=\"flex justify-end border-t\" [length]=\"length\" [pageSize]=\"pageSize\"\r\n      [pageSizeOptions]=\"pageSizeOptions\" (page)=\"paginacao($event)\" aria-label=\"Select page\">\r\n    </mat-paginator>\r\n  </div>\r\n</div>\r\n","import { Component, Injector, OnInit } from '@angular/core';\r\nimport { BaseResourceListComponent } from 'app/shared/containers/base-resource-list/base-resource-list.component';\r\nimport { ClienteService } from '../../api/cliente.service';\r\nimport { Cliente, ClienteResponse } from '../../models/cliente.model';\r\n\r\n@Component({\r\n  selector: 'app-cliente-list',\r\n  templateUrl: './cliente-list.component.html',\r\n  styleUrls: ['./cliente-list.component.scss']\r\n})\r\nexport class ClienteListComponent extends BaseResourceListComponent<\r\nCliente,\r\nClienteResponse\r\n> {\r\nconstructor(\r\n  protected injector: Injector,\r\n  protected clienteService: ClienteService\r\n) {\r\n  super(injector, clienteService);\r\n}\r\n}\r\n","import { BaseResourceModel } from 'app/shared/models/base-resource.model';\r\n\r\nexport class Cliente extends BaseResourceModel {\r\n  constructor(\r\n    public id?: number,\r\n    public codigoSupergas?: string,\r\n    public nome?: string,\r\n    public enderecos?: Endereco[],\r\n    public cnpj?: string,\r\n    public email?: string,\r\n    public telefone?: string,\r\n    public observacoes?: string,\r\n\r\n    ) {\r\n    super();\r\n  }\r\n}\r\n\r\nexport class ClienteResponse {\r\n  constructor(\r\n    public content?: Cliente[],\r\n    public totalElements?: number,\r\n    public size?: number,\r\n    public numberOfElements?: number\r\n  ) {}\r\n}\r\n\r\nexport class Endereco {\r\n  constructor(\r\n    public id?: number,\r\n    public logradouro?:  string,\r\n    public numero?: number,\r\n    public complemento?:  string,\r\n    public bairro?:  string,\r\n    public cep?:  string,\r\n    public cidade?: Cidade,\r\n    public cidadeId?: number,\r\n    public clienteId?: number\r\n  ) {}\r\n}\r\n\r\nexport class EnderecoResponse {\r\n  constructor(\r\n    public id?: number,\r\n  ) {}\r\n}\r\n\r\nexport class Cidade {\r\n  constructor(\r\n      public id?: number,\r\n      public nome?: string,\r\n      public estado?: Estado,\r\n  ) {}\r\n}\r\n\r\nexport class Estado {\r\n  constructor(\r\n    public id?: number,\r\n    public nome?: string,\r\n    public codigoUf?: number,\r\n    public uf?: string,\r\n    public regiao?: number,\r\n  ) {}\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { BaseResourceService } from 'app/shared/services/base-resource.service';\r\nimport { Endereco, EnderecoResponse } from '../models/cliente.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EnderecoService extends BaseResourceService<Endereco, EnderecoResponse> {\r\n  constructor(protected injector: Injector) {\r\n    super('/enderecos', injector);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Estado } from '../models/estados.interface';\r\nimport { environment as env } from 'environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EstadoService {\r\n\r\n  readonly apiPath = '/estados';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllEstados(): Observable<Estado[]> {\r\n    return this.http.get<Estado[]>(`${env.api}${this.apiPath}`);\r\n  }\r\n\r\n  pegarTodasCidadeDoEstado(idEstado: number): Observable<Estado[]> {\r\n    return this.http.get<Estado[]>(`${env.api}${this.apiPath}/${idEstado}/cidades`);\r\n  }\r\n\r\n}\r\n","<div class=\"flex flex-col max-w-240 md:min-w-160 max-h-screen -m-6\">\r\n  <!-- Header -->\r\n  <div\r\n    class=\"flex flex-0 items-center justify-between h-16 pr-3 sm:pr-5 pl-6 sm:pl-8 bg-primary text-on-primary\"\r\n  >\r\n    <div class=\"text-lg font-medium\">Endereço</div>\r\n    <button mat-icon-button (click)=\"fecharJanela()\" [tabIndex]=\"-1\">\r\n      <mat-icon\r\n        class=\"text-current\"\r\n        [svgIcon]=\"'heroicons_outline:x'\"\r\n      ></mat-icon>\r\n    </button>\r\n  </div>\r\n\r\n  <form\r\n    class=\"flex flex-col flex-auto p-6 sm:p-8 overflow-y-auto\"\r\n    [formGroup]=\"resourceForm\"\r\n  >\r\n    <mat-form-field class=\"flex-auto gt-xs:pr-3\">\r\n      <mat-label>Estado</mat-label>\r\n      <mat-select formControlName=\"estado\" (selectionChange)=\"estadoSelecionado()\">\r\n        <mat-option *ngFor=\"let estado of estados\" [value]=\"estado.id\">{{ estado?.nome }}</mat-option>\r\n      </mat-select>\r\n      <mat-icon\r\n        class=\"icon-size-5\"\r\n        matPrefix\r\n        [svgIcon]=\"'heroicons_solid:location-marker'\"\r\n      ></mat-icon>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"flex-auto gt-xs:pr-3\">\r\n      <mat-label>Cidade</mat-label>\r\n      <mat-select [formControlName]=\"'cidadeId'\">\r\n        <mat-option *ngFor=\"let cidade of cidades\" [value]=\"cidade.id\">{{ cidade?.nome }}</mat-option>\r\n      </mat-select>\r\n      <mat-icon\r\n        class=\"icon-size-5\"\r\n        matPrefix\r\n        [svgIcon]=\"'heroicons_solid:location-marker'\"\r\n      ></mat-icon>\r\n    </mat-form-field>\r\n\r\n    <div class=\"flex flex-auto flex-wrap\">\r\n      <div class=\"flex flex-col w-full\">\r\n        <!-- Logradouro -->\r\n        <div class=\"flex\">\r\n          <div class=\"w-3/4 pr-2 flex-col\">\r\n            <mat-form-field class=\"w-full\">\r\n              <mat-label>Logradouro</mat-label>\r\n              <mat-icon\r\n                class=\"icon-size-5\"\r\n                [svgIcon]=\"'heroicons_outline:location-marker'\"\r\n                matPrefix\r\n              ></mat-icon>\r\n              <input\r\n                id=\"logradouro\"\r\n                [formControlName]=\"'logradouro'\"\r\n                matInput\r\n                placeholder=\"informa o logradouro\"\r\n              />\r\n            </mat-form-field>\r\n            <app-form-field-error\r\n              [form-control]=\"resourceForm.get('logradouro')\"\r\n            ></app-form-field-error>\r\n          </div>\r\n          <div class=\"w-1/4 pr-2 flex-col\">\r\n            <mat-form-field class=\"w-full\">\r\n              <mat-label>Número</mat-label>\r\n              <mat-icon\r\n                class=\"icon-size-5\"\r\n                [svgIcon]=\"'heroicons_outline:location-marker'\"\r\n                matPrefix\r\n              ></mat-icon>\r\n              <input\r\n                type=\"number\"\r\n                [formControlName]=\"'numero'\"\r\n                id=\"numero\"\r\n                matInput\r\n                placeholder=\"informe o numero\"\r\n              />\r\n            </mat-form-field>\r\n            <app-form-field-error\r\n              [form-control]=\"resourceForm.get('numero')\"\r\n            ></app-form-field-error>\r\n          </div>\r\n        </div>\r\n        <div class=\"flex\">\r\n          <div class=\"w-1/2 pr-2 flex-col\">\r\n            <mat-form-field class=\"w-full\">\r\n              <mat-label>cep</mat-label>\r\n              <mat-icon\r\n                class=\"icon-size-5\"\r\n                [svgIcon]=\"'heroicons_outline:location-marker'\"\r\n                matPrefix\r\n              ></mat-icon>\r\n              <input\r\n                id=\"cep\"\r\n                matInput\r\n                [formControlName]=\"'cep'\"\r\n                mask=\"00000-000\"\r\n                placeholder=\"informa o cep do endereço\"\r\n              />\r\n            </mat-form-field>\r\n            <app-form-field-error\r\n              [form-control]=\"resourceForm.get('cep')\"\r\n            ></app-form-field-error>\r\n          </div>\r\n\r\n          <div class=\"w-1/2 pr-2 flex-col\">\r\n            <mat-form-field class=\"w-full\">\r\n              <mat-label>Bairro</mat-label>\r\n              <mat-icon\r\n                class=\"icon-size-5\"\r\n                [svgIcon]=\"'heroicons_outline:location-marker'\"\r\n                matPrefix\r\n              ></mat-icon>\r\n              <input\r\n                id=\"bairro\"\r\n                [formControlName]=\"'bairro'\"\r\n                matInput\r\n                placeholder=\"informa o bairro\"\r\n              />\r\n            </mat-form-field>\r\n            <app-form-field-error\r\n              [form-control]=\"resourceForm.get('bairro')\"\r\n            ></app-form-field-error>\r\n          </div>\r\n        </div>\r\n        <div class=\"flex\">\r\n          <mat-form-field class=\"w-full\">\r\n            <mat-label>Complemento</mat-label>\r\n            <mat-icon\r\n              class=\"icon-size-5\"\r\n              [svgIcon]=\"'heroicons_outline:document-text'\"\r\n              matPrefix\r\n            ></mat-icon>\r\n            <input\r\n              [formControlName]=\"'complemento'\"\r\n              id=\"complemento\"\r\n              matInput\r\n              placeholder=\"informa o complemento da cliente\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div\r\n      class=\"flex flex-col sm:flex-row sm:items-center justify-between mt-4 sm:mt-6\"\r\n    >\r\n      <div class=\"flex w-full justify-end mt-4 sm:mt-0\">\r\n        <button class=\"sm:mx-3\" mat-stroked-button (click)=\"fecharJanela()\">\r\n          <span>Cancelar</span>\r\n        </button>\r\n        <button\r\n          class=\"order-first sm:order-last\"\r\n          mat-flat-button\r\n          [color]=\"'primary'\"\r\n          (click)=\"salvar()\"\r\n          [disabled]=\"resourceForm.invalid\"\r\n        >\r\n          Salvar\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit, Inject, Injector } from '@angular/core';\r\nimport { Validators } from '@angular/forms';\r\nimport {\r\n  MatDialog,\r\n  MAT_DIALOG_DATA,\r\n  MatDialogRef,\r\n} from '@angular/material/dialog';\r\nimport { BaseResourceFormComponent } from 'app/shared/containers/base-resource-form';\r\nimport { EnderecoService } from '../../api/endereco.service';\r\nimport { EstadoService } from '../../api/estado.service';\r\nimport { Endereco, EnderecoResponse } from '../../models/cliente.model';\r\nimport { Cidade, Estado } from '../../models/estados.interface';\r\nimport toastr from 'toastr';\r\nimport * as uuid from 'uuid';\r\n\r\n@Component({\r\n  selector: 'app-form-endereco',\r\n  templateUrl: './form-endereco.component.html',\r\n  styleUrls: ['./form-endereco.component.scss'],\r\n})\r\nexport class FormEnderecoComponent extends BaseResourceFormComponent<\r\n  Endereco,\r\n  EnderecoResponse\r\n> {\r\n  endereco: Endereco;\r\n  cidades: Cidade[] = [];\r\n  estados: Estado[] = [];\r\n\r\n  constructor(\r\n    public matDialogRef: MatDialogRef<FormEnderecoComponent>,\r\n    @Inject(MAT_DIALOG_DATA)\r\n    public data: { idCliente: number; endereco: Endereco; adicionar: boolean },\r\n    protected enderecoService: EnderecoService,\r\n    protected injector: Injector,\r\n    protected estadosService: EstadoService\r\n  ) {\r\n    super(injector, new Endereco(), enderecoService);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.endereco = new Endereco();\r\n    super.ngOnInit();\r\n    setTimeout(() => {\r\n      this.estadosService\r\n        .getAllEstados()\r\n        .subscribe((estados) => (this.estados = estados));\r\n    }, 0);\r\n  }\r\n\r\n  estadoSelecionado(): void {\r\n    const idEstado = this.resourceForm.get('estado').value;\r\n    this.estadosService\r\n      .pegarTodasCidadeDoEstado(idEstado)\r\n      .subscribe((cidades) => (this.cidades = cidades));\r\n  }\r\n\r\n  fecharJanela(): void {\r\n    this.matDialogRef.close();\r\n  }\r\n\r\n  salvar(): void {\r\n    this.endereco = this.resourceForm.value;\r\n    if (!this.data.idCliente) {\r\n      this.endereco.id = this.data.endereco.id;\r\n      this.endereco.cidade = this.cidades.find(\r\n        (c) => c.id === this.endereco.cidadeId\r\n      );\r\n      this.endereco.cidade.estado = this.estados.find(\r\n        (e) => e.id === this.endereco['estado']\r\n      );\r\n      this.matDialogRef.close(this.endereco);\r\n      return;\r\n    }\r\n\r\n    this.endereco.clienteId = this.data.idCliente;\r\n\r\n    if (this.data.adicionar) {\r\n      this.enderecoService.insert(this.endereco).subscribe(\r\n        () => {\r\n          this.matDialogRef.close(true);\r\n        },\r\n        (error) => {\r\n          toastr.error(\r\n            'Não foi possível adicionar o endereço!',\r\n            error.error.error,\r\n            {\r\n              timeOut: 10000,\r\n              progressBar: true,\r\n              closeButton: true,\r\n            }\r\n          );\r\n        }\r\n      );\r\n    }\r\n\r\n    if (!this.data.adicionar) {\r\n      this.endereco.id = this.data.endereco.id;\r\n      this.enderecoService.update(this.endereco).subscribe(\r\n        () => {\r\n          this.matDialogRef.close(true);\r\n        },\r\n        (error) => {\r\n          toastr.error(\r\n            'Não foi possível atualizar o endereço!',\r\n            error.error.error,\r\n            {\r\n              timeOut: 10000,\r\n              progressBar: true,\r\n              closeButton: true,\r\n            }\r\n          );\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  loadResource(): void {\r\n    if (this.data.endereco.cep) {\r\n      setTimeout(() => {\r\n        this.estadosService\r\n          .pegarTodasCidadeDoEstado(this.data.endereco.cidade.estado.id)\r\n          .subscribe((cidades) => (this.cidades = cidades));\r\n        this.resourceForm.patchValue(this.data.endereco);\r\n        this.resourceForm.patchValue({\r\n          estado: this.data.endereco.cidade.estado.id,\r\n          cidadeId: this.data.endereco.cidade.id,\r\n        });\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  protected buildResourceForm() {\r\n    this.resourceForm = this.formBuilder.group({\r\n      estado: [null, [Validators.required]],\r\n      cidadeId: [null, [Validators.required]],\r\n      logradouro: [null, [Validators.required]],\r\n      numero: [null, [Validators.required]],\r\n      bairro: [null, [Validators.required, Validators.minLength(3)]],\r\n      cep: [null, [Validators.required, Validators.minLength(8)]],\r\n      complemento: [null],\r\n    });\r\n  }\r\n\r\n  protected createPageTitle(): string {\r\n    return 'Cadastro de Novo Endereco';\r\n  }\r\n\r\n  protected editionPageTitle(): string {\r\n    return 'Editando endereco';\r\n  }\r\n}\r\n","<div class=\"flex flex-col flex-auto min-w-0\">\r\n  <div class=\"flex-auto p-6 sm:p-10\">\r\n    <div class=\"bg-card rounded-2xl shadow overflow-hidden\">\r\n      <form [formGroup]=\"resourceForm\" class=\"m-4\">\r\n        <!-- Section -->\r\n        <div class=\"w-full\">\r\n          <div class=\"text-xl\">{{ pageTitle }}</div>\r\n        </div>\r\n\r\n        <div class=\"flex flex-auto flex-wrap my-5\">\r\n          <div class=\"flex flex-col w-full sm:pl-8\">\r\n            <!-- Destinação -->\r\n            <div class=\"flex\">\r\n              <div class=\"w-1/2 pr-2 flex-col\">\r\n                <mat-form-field class=\"w-full\">\r\n                  <mat-label>Cod. Supergás</mat-label>\r\n                  <mat-icon\r\n                    class=\"icon-size-5\"\r\n                    [svgIcon]=\"'heroicons_outline:view-grid'\"\r\n                    matPrefix\r\n                  ></mat-icon>\r\n                  <input\r\n                    id=\"codigoSupergas\"\r\n                    [formControlName]=\"'codigoSupergas'\"\r\n                    matInput\r\n                    placeholder=\"informa o cod. supergás da cliente\"\r\n                  />\r\n                </mat-form-field>\r\n                <app-form-field-error\r\n                  [form-control]=\"resourceForm.get('codigoSupergas')\"\r\n                ></app-form-field-error>\r\n              </div>\r\n              <div class=\"w-1/2 pr-2 flex-col\">\r\n                <mat-form-field class=\"w-full\">\r\n                  <mat-label>Nome Cliente</mat-label>\r\n                  <mat-icon\r\n                    class=\"icon-size-5\"\r\n                    [svgIcon]=\"'heroicons_outline:user'\"\r\n                    matPrefix\r\n                  ></mat-icon>\r\n                  <input\r\n                    id=\"nome_id\"\r\n                    [formControlName]=\"'nome'\"\r\n                    matInput\r\n                    placeholder=\"informa o nome da cliente\"\r\n                  />\r\n                </mat-form-field>\r\n                <app-form-field-error\r\n                  [form-control]=\"resourceForm.get('nome')\"\r\n                ></app-form-field-error>\r\n              </div>\r\n            </div>\r\n            <div class=\"flex\">\r\n              <div class=\"w-1/3 pr-2 flex-col\">\r\n                <mat-form-field class=\"w-full\">\r\n                  <mat-label>cnpj</mat-label>\r\n                  <mat-icon\r\n                    class=\"icon-size-5\"\r\n                    [svgIcon]=\"'heroicons_outline:user'\"\r\n                    matPrefix\r\n                  ></mat-icon>\r\n                  <input\r\n                    id=\"cnpj\"\r\n                    [formControlName]=\"'cnpj'\"\r\n                    matInput\r\n                    mask=\"00.000.000/0000-00\"\r\n                    placeholder=\"informa o cnpj da cliente\"\r\n                  />\r\n                </mat-form-field>\r\n                <app-form-field-error\r\n                  [form-control]=\"resourceForm.get('cnpj')\"\r\n                ></app-form-field-error>\r\n              </div>\r\n\r\n              <div class=\"w-1/3 pr-2 flex-col\">\r\n                <mat-form-field class=\"w-full\">\r\n                  <mat-label>E-mail</mat-label>\r\n                  <mat-icon\r\n                    class=\"icon-size-5\"\r\n                    [svgIcon]=\"'heroicons_outline:mail'\"\r\n                    matPrefix\r\n                  ></mat-icon>\r\n                  <input\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    [formControlName]=\"'email'\"\r\n                    matInput\r\n                    placeholder=\"informa o e-mail da cliente\"\r\n                  />\r\n                </mat-form-field>\r\n                <app-form-field-error\r\n                  [form-control]=\"resourceForm.get('email')\"\r\n                ></app-form-field-error>\r\n              </div>\r\n              <div class=\"w-1/3 pr-2 flex-col\">\r\n                <mat-form-field class=\"w-full\">\r\n                  <mat-label>Telefones</mat-label>\r\n                  <mat-icon\r\n                    class=\"icon-size-5\"\r\n                    [svgIcon]=\"'mat_outline:settings_cell'\"\r\n                    matPrefix\r\n                  ></mat-icon>\r\n                  <input\r\n                    id=\"telefone\"\r\n                    [formControlName]=\"'telefone'\"\r\n                    matInput\r\n                    placeholder=\"informa o telefone da cliente\"\r\n                  />\r\n                </mat-form-field>\r\n                <app-form-field-error\r\n                  [form-control]=\"resourceForm.get('telefone')\"\r\n                ></app-form-field-error>\r\n              </div>\r\n            </div>\r\n            <div class=\"flex\">\r\n              <mat-form-field class=\"w-full\">\r\n                <mat-label>Observações</mat-label>\r\n                <mat-icon\r\n                  class=\"icon-size-5\"\r\n                  [svgIcon]=\"'heroicons_outline:document-text'\"\r\n                  matPrefix\r\n                ></mat-icon>\r\n                <input\r\n                  id=\"observacoes\"\r\n                  [formControlName]=\"'observacoes'\"\r\n                  matInput\r\n                  placeholder=\"informa o observacoes da cliente\"\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"w-full sm:pl-8\">\r\n          <div\r\n            (click)=\"adicionarEndereco()\"\r\n            class=\"flex items-center justify-center pr-2 border-2 border-dashed border-gray-300 rounded-2xl cursor-pointer\"\r\n          >\r\n            <h1 class=\"text-2xl py-2\">+ Adicionar endereço</h1>\r\n          </div>\r\n\r\n          <div\r\n            *ngIf=\"enderecos && enderecos.length > 0\"\r\n            class=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-2 gap-6 w-full min-w-0 mt-3\"\r\n          >\r\n            <!-- Endereço -->\r\n            <div\r\n              *ngFor=\"let endereco of enderecos; let i = index\"\r\n              class=\"flex flex-col flex-auto p-6 bg-card shadow rounded-2xl overflow-hidden dark:bg-accent-700 bg-accent-100\"\r\n            >\r\n              <div class=\"flex items-start justify-between\">\r\n                <div\r\n                  class=\"text-lg font-medium tracking-tight leading-6 truncate\"\r\n                >\r\n                  Endereço {{ i + 1 }}\r\n                </div>\r\n                <div class=\"ml-2 -mt-2 -mr-3\">\r\n                  <button mat-icon-button [matMenuTriggerFor]=\"summaryMenu\">\r\n                    <mat-icon\r\n                      class=\"icon-size-5\"\r\n                      [svgIcon]=\"'heroicons_solid:dots-vertical'\"\r\n                    ></mat-icon>\r\n                  </button>\r\n                  <mat-menu #summaryMenu=\"matMenu\">\r\n                    <button mat-menu-item (click)=\"editarEndereco(endereco)\">Editar</button>\r\n                    <button mat-menu-item (click)=\"excluirEndereco(endereco)\">Excluir</button>\r\n                  </mat-menu>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"flex flex-col mt-2\">\r\n                <div class=\"flex item-center\">\r\n                  <mat-icon\r\n                    class=\"icon-size-5 text-hint mr-1\"\r\n                    [svgIcon]=\"'heroicons_solid:location-marker'\"\r\n                  ></mat-icon>\r\n                  <span>\r\n                    {{ endereco?.logradouro }} - {{ endereco?.numero }}\r\n                  </span>\r\n                </div>\r\n                <span class=\"ml-6\">\r\n                  <strong>Bairro: </strong> {{ endereco?.bairro }}\r\n                </span>\r\n                <span class=\"ml-6\" *ngIf=\"endereco.complemento\">\r\n                  <strong>Complemento: </strong> {{ endereco?.complemento }}\r\n                </span>\r\n                <span class=\"ml-6\">\r\n                  {{ endereco?.cidade?.nome }} /\r\n                  {{ endereco?.cidade?.estado?.uf }}\r\n                </span>\r\n                <span class=\"ml-6\">\r\n                  <strong>CEP: </strong>{{ endereco?.cep }}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <fuse-alert\r\n            class=\"mt-2\"\r\n            [type]=\"'warning'\"\r\n            [appearance]=\"'outline'\"\r\n            *ngIf=\"!enderecos || enderecos.length <= 0\"\r\n          >\r\n            Nenhum <strong>endereço</strong> cadastrado ainda!\r\n          </fuse-alert>\r\n        </div>\r\n\r\n        <!-- Divider -->\r\n        <div class=\"mt-11 mb-10 border-t\"></div>\r\n\r\n        <!-- Actions -->\r\n        <div class=\"flex items-center justify-end\">\r\n          <a routerLink=\"/cliente\" routerLinkActive=\"router-link-active\">\r\n            <button\r\n              class=\"fuse-mat-button-rounded mat-flat-button mat-button-base\"\r\n              mat-stroked-button\r\n              type=\"button\"\r\n            >\r\n              Cancelar\r\n            </button>\r\n          </a>\r\n          <button\r\n            class=\"ml-4 fuse-mat-button-rounded mat-flat-button mat-button-base mat-primary\"\r\n            mat-flat-button\r\n            type=\"button\"\r\n            [disabled]=\"(resourceForm.invalid || enderecos.length <= 0)\"\r\n            (click)=\"submitForm()\"\r\n          >\r\n            Salvar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Injector, OnInit } from '@angular/core';\r\nimport { Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { BaseResourceFormComponent } from 'app/shared/containers/base-resource-form';\r\nimport { ClienteService } from '../../api/cliente.service';\r\nimport { FormEnderecoComponent } from '../../components/form-endereco/form-endereco.component';\r\nimport { Cliente, ClienteResponse, Endereco } from '../../models/cliente.model';\r\nimport toastr from 'toastr';\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { EnderecoService } from '../../api/endereco.service';\r\n\r\n@Component({\r\n  selector: 'app-cliente-form',\r\n  templateUrl: './cliente-form.component.html',\r\n  styleUrls: ['./cliente-form.component.scss'],\r\n})\r\nexport class ClienteFormComponent extends BaseResourceFormComponent<\r\n  Cliente,\r\n  ClienteResponse\r\n> {\r\n  enderecos: Endereco[] = [];\r\n\r\n  constructor(\r\n    protected clienteService: ClienteService,\r\n    protected injector: Injector,\r\n    protected _fuseConfirmationService: FuseConfirmationService,\r\n    protected enderecoService: EnderecoService,\r\n    private _matDialog: MatDialog\r\n  ) {\r\n    super(injector, new Cliente(), clienteService);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.enderecos = [];\r\n    super.ngOnInit();\r\n    if (this.currentAction === 'editar') {\r\n      setTimeout(() => {\r\n        this.carregarEnderecos();\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  protected buildResourceForm() {\r\n    this.resourceForm = this.formBuilder.group({\r\n      codigoSupergas: [null, [Validators.required, Validators.minLength(2)]],\r\n      nome: [null, [Validators.required, Validators.minLength(2)]],\r\n      cnpj: [null, [Validators.required, Validators.minLength(12)]],\r\n      email: [null, [Validators.required, Validators.email]],\r\n      telefone: [null, [Validators.required]],\r\n      observacoes: [null],\r\n      enderecos: [this.enderecos],\r\n    });\r\n  }\r\n\r\n  protected carregarEnderecos(): void {\r\n    this.enderecos = this.resource.enderecos;\r\n  }\r\n\r\n  adicionarEndereco(): void {\r\n    const enderecoNovo: Endereco = {\r\n      id: this.enderecos.length + 1,\r\n    };\r\n\r\n    const dialogRef = this._matDialog.open(FormEnderecoComponent, {\r\n      data: {\r\n        idCliente: this.resource.id,\r\n        endereco: enderecoNovo,\r\n        adicionar: true,\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (!this.resource.id && result) {\r\n        if (!this.enderecos) this.enderecos = [];\r\n        this.enderecos.push(result);\r\n        return;\r\n      }\r\n\r\n      if (result) {\r\n        toastr.success('Endereço cadastrado com sucesso!', '', {\r\n          timeOut: 10000,\r\n          progressBar: true,\r\n          closeButton: true,\r\n        });\r\n\r\n        this.ngOnInit();\r\n      }\r\n    });\r\n  }\r\n\r\n  editarEndereco(endereco: Endereco): void {\r\n    const dialogRef = this._matDialog.open(FormEnderecoComponent, {\r\n      data: {\r\n        idCliente: this.resource.id,\r\n        endereco: endereco,\r\n        adicionar: false,\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result) {\r\n        toastr.success('Endereço atualizado com sucesso!', '', {\r\n          timeOut: 10000,\r\n          progressBar: true,\r\n          closeButton: true,\r\n        });\r\n\r\n        this.ngOnInit();\r\n      }\r\n    });\r\n  }\r\n\r\n  excluirEndereco(endereco: Endereco): void {\r\n    const dialogRef = this._fuseConfirmationService.open({\r\n      title: `Deseja realmente excluir o endereco selecionado?`,\r\n      message: '',\r\n      icon: {\r\n        show: true,\r\n        name: 'heroicons_outline:exclamation',\r\n        color: 'warn',\r\n      },\r\n      actions: {\r\n        confirm: {\r\n          show: true,\r\n          label: 'Confirmar',\r\n          color: 'warn',\r\n        },\r\n        cancel: {\r\n          show: true,\r\n          label: 'Cancelar',\r\n        },\r\n      },\r\n      dismissible: false,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 'confirmed') {\r\n        if (!this.resource.id) {\r\n          this.enderecos = this.enderecos.filter((e) => e.id !== endereco.id);\r\n          return;\r\n        }\r\n        this.enderecoService.delete(endereco.id).subscribe(\r\n          (res) => {\r\n            toastr.success(`Endereço excluído com sucesso!`, '', {\r\n              timeOut: 10000,\r\n              progressBar: true,\r\n              closeButton: true,\r\n            });\r\n            this.enderecos = this.enderecos.filter((e) => e.id !== endereco.id);\r\n          },\r\n          (error) => {\r\n            toastr.error(\r\n              'Não foi possível excluir o endereço selecionado',\r\n              error.error.error,\r\n              {\r\n                timeOut: 10000,\r\n                progressBar: true,\r\n                closeButton: true,\r\n              }\r\n            );\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  submitForm() {\r\n    if (this.currentAction === 'novo') {\r\n      this.enderecos = this.enderecos.map((e) => {\r\n        e.id = null\r\n        return e;\r\n      });\r\n      this.resourceForm.get('enderecos').setValue(this.enderecos);\r\n    }\r\n\r\n    super.submitForm();\r\n  }\r\n\r\n  protected createPageTitle(): string {\r\n    return 'Cadastro de Novo Cliente';\r\n  }\r\n\r\n  protected editionPageTitle(): string {\r\n    const clienteNome = this.resource.nome || '';\r\n    return 'Editando Cliente: ' + clienteNome;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Route, RouterModule } from '@angular/router';\r\nimport { ClienteListComponent } from './containers/cliente-list/cliente-list.component';\r\nimport { ClienteFormComponent } from './containers/cliente-form/cliente-form.component';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { FuseAlertModule } from '@fuse/components/alert';\r\nimport { FormEnderecoComponent } from './components/form-endereco/form-endereco.component';\r\nimport { DetalhesClienteComponent } from './components/detalhes-cliente/detalhes-cliente.component';\r\nimport { NgxMaskModule } from 'ngx-mask';\r\n\r\nconst routes: Route[] = [\r\n  { path: '', component: ClienteListComponent },\r\n  { path: 'novo', component: ClienteFormComponent },\r\n  { path: ':id/editar', component: ClienteFormComponent },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [ClienteListComponent, ClienteFormComponent, FormEnderecoComponent, DetalhesClienteComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    SharedModule,\r\n    FuseAlertModule,\r\n    NgxMaskModule.forRoot(),\r\n  ],\r\n})\r\nexport class ClienteModule {}\r\n"],"x_google_ignoreList":[]}