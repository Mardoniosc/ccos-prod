{"version":3,"file":"525.0bb6741599a832b5.js","mappings":"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","names":["ServicoService","BaseResourceService","constructor","injector","super","this","i0","factory","ServicoListComponent","BaseResourceListComponent","servicoService","selectors","ctx","UnidadeService","UnidadeListComponent","unidadeService","TipoService","TipoListComponent","tipoService","Servico","BaseResourceModel","id","codigoSapItem","descSapItem","valorUnitario","descServico","tipoServico","unidadeGrupoServico","tipoGrupoServico","ServicoFormComponent","BaseResourceFormComponent","_tipoService","_unidadeService","ngOnInit","setTimeout","carregaAuxiliaresLista","buildResourceForm","resourceForm","formBuilder","group","Validators","createPageTitle","editionPageTitle","resource","filtro","pagina","direcaoOrdenacao","tamanho","ordenarPor","getAll","subscribe","res","tiposGrupoServicos","content","patchValue","err","toastr","status","timeOut","progressBar","closeButton","unidadeGrupoServicos","console","log","routes","path","component","GrupoServicoModule","CommonModule","RouterModule","SharedModule","NotFoundDataComponent","PageHeaderComponent","EventEmitter","filtrar","termo","pesquisar","emit","EEventosLocais","injecto","resourceService","route","get","ActivatedRoute","router","Router","FormBuilder","setCurrentAction","loadResource","ngAfterContentChecked","setPageTitle","submitForm","invalid","value","currentAction","update","navigate","snapshot","parent","url","error","insert","length","idResource","Number","getById","carregamentoDeDados","pageTitle","RulesService","temPermissao","rule","token","localStorage","getItem","ELocalStorage","ROLES","AuthUtils","Object","find","permissao","_fuseConfirmationService","FuseConfirmationService","_matPaginatorIntl","MatPaginatorIntl","_ruleService","carregaInformacoesResource","itemsPerPageLabel","setPageSizeOptions","setPageSizeOptionsInput","pageSizeOptions","split","map","str","data","resources","totalElements","pageSize","size","excluir","open","title","message","icon","show","name","color","actions","confirm","label","cancel","dismissible","afterClosed","result","delete","paginacao","event","pageIndex","filtrarResource","validaPermissao"],"sourceRoot":"webpack:///","sources":["./src/app/modules/ccos/grupo-servico/api/servico.service.ts","./src/app/modules/ccos/grupo-servico/containers/servico/servico-list/servico-list.component.html","./src/app/modules/ccos/grupo-servico/containers/servico/servico-list/servico-list.component.ts","./src/app/modules/ccos/grupo-servico/api/unidade.service.ts","./src/app/modules/ccos/grupo-servico/containers/unidade-list/unidade-list.component.html","./src/app/modules/ccos/grupo-servico/containers/unidade-list/unidade-list.component.ts","./src/app/modules/ccos/grupo-servico/api/tipo.service.ts","./src/app/modules/ccos/grupo-servico/containers/tipo-list/tipo-list.component.html","./src/app/modules/ccos/grupo-servico/containers/tipo-list/tipo-list.component.ts","./src/app/modules/ccos/grupo-servico/models/grupo-servico.model.ts","./src/app/modules/ccos/grupo-servico/containers/servico/servico-form/servico-form.component.html","./src/app/modules/ccos/grupo-servico/containers/servico/servico-form/servico-form.component.ts","./src/app/modules/ccos/grupo-servico/grupo-servico.module.ts","./src/app/shared/components/not-found-data/not-found-data.component.ts","./src/app/shared/components/not-found-data/not-found-data.component.html","./src/app/shared/components/page-header/page-header.component.html","./src/app/shared/components/page-header/page-header.component.ts","./src/app/shared/models/eventos.enum.ts","./src/app/shared/containers/base-resource-form/BaseResourceFormComponent.ts","./src/app/shared/services/rules.service.ts","./src/app/shared/containers/base-resource-list/base-resource-list.component.ts","./src/app/shared/models/base-resource.model.ts"],"sourcesContent":["import { Injectable, Injector } from '@angular/core';\nimport { BaseResourceService } from 'app/shared/services/base-resource.service';\nimport { Servico, ServicoResponse } from '../models/grupo-servico.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicoService extends BaseResourceService<Servico, ServicoResponse> {\n  constructor(protected injector: Injector) {\n    super('/grupoServicos', injector);\n  }\n}\n","<div class=\"absolute inset-0 flex flex-col min-w-0 overflow-hidden bg-card dark:bg-transparent\">\n  <div class=\"flex flex-col flex-auto min-w-0 overflow-y-auto\" cdkScrollable>\n\n    <app-page-header [show-button]=\"true\" page-title=\"Serviços\" placeholder-text=\"Buscar por descrição sap\" (pesquisar)=\"filtrarResource($event)\">\n    </app-page-header>\n\n    <!-- Page body -->\n    <div class=\"flex flex-col flex-auto min-w-0 overflow-y-auto\" cdkScrollable *ngIf=\"length > 0\">\n      <mat-table [dataSource]=\"resources\">\n        <!-- User name Definition -->\n        <ng-container matColumnDef=\"codigoSapItem\">\n          <mat-header-cell *matHeaderCellDef> Código SAP </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\" class=\"max-w-32\"> {{ row.codigoSapItem }} </mat-cell>\n        </ng-container>\n\n        <!-- Age Definition -->\n        <ng-container matColumnDef=\"descSapItem\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> Descrição SAP </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            {{ row.descSapItem }}\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"valorUnitario\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> Valor Unitário </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            R$ {{ row.valorUnitario }}\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"unidadeGrupoServico\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> Unidade Grupo Serviço </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            {{ row.unidadeGrupoServico.nome }}\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"tipoGrupoServico\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> Tipo Grupo Serviço </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            {{ row.tipoGrupoServico.descricao }}\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"tipoServico\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> Tipo </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            {{ row.tipoServico }}\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"acoes\">\n          <mat-header-cell *matHeaderCellDef> Ações </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            <span *ngIf=\"!validaPermissao('MANTER_PERFIL')\">-</span>\n            <span class=\"mr-2 cursor-pointer\" [routerLink]=\"[row.id, 'editar']\" *ngIf=\"validaPermissao('MANTER_PERFIL')\">\n              <mat-icon class=\"text-accent dark:text-accent-300\" svgIcon=\"heroicons_outline:pencil-alt\"></mat-icon>\n            </span>\n            <span (click)=\"excluir(row)\" class=\"cursor-pointer\" *ngIf=\"validaPermissao('MANTER_PERFIL')\">\n              <mat-icon class=\"text-warn-600\" svgIcon=\"heroicons_outline:trash\"></mat-icon>\n            </span>\n          </mat-cell>\n        </ng-container>\n\n        <!-- Header and Row Declarations -->\n        <mat-header-row *matHeaderRowDef=\"['codigoSapItem', 'descSapItem', 'valorUnitario', 'unidadeGrupoServico', 'tipoGrupoServico', 'tipoServico', 'acoes']\"></mat-header-row>\n        <mat-row *matRowDef=\"let row; columns: ['codigoSapItem', 'descSapItem', 'valorUnitario', 'unidadeGrupoServico', 'tipoGrupoServico', 'tipoServico', 'acoes']\"></mat-row>\n      </mat-table>\n    </div>\n\n    <!-- NENHUM DADO ENCONTRADO -->\n    <app-not-found-data class=\"h-full\" mensagem=\"Nenhum registro de unidade encontrado!\" *ngIf=\"length <= 0\">\n    </app-not-found-data>\n  </div>\n  <div class=\"flex flex-0 flex-col\" *ngIf=\"length > 0\">\n    <mat-paginator class=\"flex justify-end border-t\" [length]=\"length\" [pageSize]=\"pageSize\"\n      [pageSizeOptions]=\"pageSizeOptions\" (page)=\"paginacao($event)\" aria-label=\"Select page\">\n    </mat-paginator>\n  </div>\n</div>\n","import { Component, Injector } from '@angular/core';\nimport { BaseResourceListComponent } from 'app/shared/containers/base-resource-list/base-resource-list.component';\nimport { ServicoService } from '../../../api/servico.service';\nimport { Servico, ServicoResponse } from '../../../models/grupo-servico.model';\n\n@Component({\n  selector: 'app-servico-list',\n  templateUrl: './servico-list.component.html',\n  styleUrls: ['./servico-list.component.scss']\n})\nexport class ServicoListComponent extends BaseResourceListComponent<\nServico,\nServicoResponse\n> {\nconstructor(\n  protected injector: Injector,\n  protected servicoService: ServicoService\n) {\n  super(injector, servicoService);\n}\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { BaseResourceService } from 'app/shared/services/base-resource.service';\nimport { Unidade, UnidadeResponse } from '../models/grupo-servico.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UnidadeService extends BaseResourceService<Unidade, UnidadeResponse> {\n  constructor(protected injector: Injector) {\n    super('/unidadeGrupoServicos', injector);\n  }\n}\n","<div class=\"absolute inset-0 flex flex-col min-w-0 overflow-hidden bg-card dark:bg-transparent\">\n  <div class=\"flex flex-col flex-auto min-w-0 overflow-y-auto\" cdkScrollable>\n\n    <app-page-header [show-button]=\"false\" page-title=\"Unidades\" placeholder-text=\"Buscar por nome\" (pesquisar)=\"filtrarResource($event)\">\n    </app-page-header>\n\n    <!-- Page body -->\n    <div class=\"flex flex-col flex-auto min-w-0 overflow-y-auto\" cdkScrollable *ngIf=\"length > 0\">\n      <mat-table [dataSource]=\"resources\">\n        <!-- User name Definition -->\n        <ng-container matColumnDef=\"id\">\n          <mat-header-cell *matHeaderCellDef> Código </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\"> {{ row.id }} </mat-cell>\n        </ng-container>\n\n        <!-- Age Definition -->\n        <ng-container matColumnDef=\"nome\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> Nome </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            {{ row.nome }}\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"acoes\">\n          <mat-header-cell *matHeaderCellDef> Ações </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            <span *ngIf=\"!validaPermissao('MANTER_PERFIL')\">-</span>\n            <span class=\"mr-2 cursor-pointer\" [routerLink]=\"[row.id, 'editar']\" *ngIf=\"validaPermissao('MANTER_PERFIL')\">\n              <mat-icon class=\"text-accent dark:text-accent-300\" svgIcon=\"heroicons_outline:pencil-alt\"></mat-icon>\n            </span>\n            <span (click)=\"excluir(row)\" class=\"cursor-pointer\" *ngIf=\"validaPermissao('MANTER_PERFIL')\">\n              <mat-icon class=\"text-warn-600\" svgIcon=\"heroicons_outline:trash\"></mat-icon>\n            </span>\n          </mat-cell>\n        </ng-container>\n\n        <!-- Header and Row Declarations -->\n        <mat-header-row *matHeaderRowDef=\"['id', 'nome']\"></mat-header-row>\n        <mat-row *matRowDef=\"let row; columns: ['id', 'nome']\"></mat-row>\n      </mat-table>\n    </div>\n\n    <!-- NENHUM DADO ENCONTRADO -->\n    <app-not-found-data class=\"h-full\" mensagem=\"Nenhum registro de unidade encontrado!\" *ngIf=\"length <= 0\">\n    </app-not-found-data>\n  </div>\n  <div class=\"flex flex-0 flex-col\" *ngIf=\"length > 0\">\n    <mat-paginator class=\"flex justify-end border-t\" [length]=\"length\" [pageSize]=\"pageSize\"\n      [pageSizeOptions]=\"pageSizeOptions\" (page)=\"paginacao($event)\" aria-label=\"Select page\">\n    </mat-paginator>\n  </div>\n</div>\n","import { Component, Injector, OnInit } from '@angular/core';\nimport { BaseResourceListComponent } from 'app/shared/containers/base-resource-list/base-resource-list.component';\nimport { UnidadeService } from '../../api/unidade.service';\nimport { Unidade, UnidadeResponse } from '../../models/grupo-servico.model';\n\n@Component({\n  selector: 'app-unidade-list',\n  templateUrl: './unidade-list.component.html',\n  styleUrls: ['./unidade-list.component.scss'],\n})\nexport class UnidadeListComponent extends BaseResourceListComponent<\n  Unidade,\n  UnidadeResponse\n> {\n  constructor(\n    protected injector: Injector,\n    protected unidadeService: UnidadeService\n  ) {\n    super(injector, unidadeService);\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { BaseResourceService } from 'app/shared/services/base-resource.service';\nimport { Tipo, TipoResponse } from '../models/grupo-servico.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TipoService extends BaseResourceService<Tipo, TipoResponse> {\n  constructor(protected injector: Injector) {\n    super('/tipoGrupoServicos', injector);\n  }\n}\n\n","<div class=\"absolute inset-0 flex flex-col min-w-0 overflow-hidden bg-card dark:bg-transparent\">\n  <div class=\"flex flex-col flex-auto min-w-0 overflow-y-auto\" cdkScrollable>\n\n    <app-page-header [show-button]=\"false\" page-title=\"Tipos\" placeholder-text=\"Buscar por descricao\" (pesquisar)=\"filtrarResource($event)\">\n    </app-page-header>\n\n    <!-- Page body -->\n    <div class=\"flex flex-col flex-auto min-w-0 overflow-y-auto\" cdkScrollable *ngIf=\"length > 0\">\n      <mat-table [dataSource]=\"resources\">\n        <!-- User name Definition -->\n        <ng-container matColumnDef=\"id\">\n          <mat-header-cell *matHeaderCellDef> Código </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\"> {{ row.id }} </mat-cell>\n        </ng-container>\n\n        <!-- Age Definition -->\n        <ng-container matColumnDef=\"descricao\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> Descrição </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            {{ row.descricao }}\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"acoes\">\n          <mat-header-cell *matHeaderCellDef> Ações </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            <span *ngIf=\"!validaPermissao('MANTER_PERFIL')\">-</span>\n            <span class=\"mr-2 cursor-pointer\" [routerLink]=\"[row.id, 'editar']\" *ngIf=\"validaPermissao('MANTER_PERFIL')\">\n              <mat-icon class=\"text-accent dark:text-accent-300\" svgIcon=\"heroicons_outline:pencil-alt\"></mat-icon>\n            </span>\n            <span (click)=\"excluir(row)\" class=\"cursor-pointer\" *ngIf=\"validaPermissao('MANTER_PERFIL')\">\n              <mat-icon class=\"text-warn-600\" svgIcon=\"heroicons_outline:trash\"></mat-icon>\n            </span>\n          </mat-cell>\n        </ng-container>\n\n        <!-- Header and Row Declarations -->\n        <mat-header-row *matHeaderRowDef=\"['id', 'descricao']\"></mat-header-row>\n        <mat-row *matRowDef=\"let row; columns: ['id', 'descricao']\"></mat-row>\n      </mat-table>\n    </div>\n\n    <!-- NENHUM DADO ENCONTRADO -->\n    <app-not-found-data class=\"h-full\" mensagem=\"Nenhum registro de unidade encontrado!\" *ngIf=\"length <= 0\">\n    </app-not-found-data>\n  </div>\n  <div class=\"flex flex-0 flex-col\" *ngIf=\"length > 0\">\n    <mat-paginator class=\"flex justify-end border-t\" [length]=\"length\" [pageSize]=\"pageSize\"\n      [pageSizeOptions]=\"pageSizeOptions\" (page)=\"paginacao($event)\" aria-label=\"Select page\">\n    </mat-paginator>\n  </div>\n</div>\n","import { Component, Injector, OnInit } from '@angular/core';\nimport { BaseResourceListComponent } from 'app/shared/containers/base-resource-list/base-resource-list.component';\nimport { TipoService } from '../../api/tipo.service';\nimport { Tipo, TipoResponse } from '../../models/grupo-servico.model';\n\n@Component({\n  selector: 'app-tipo-list',\n  templateUrl: './tipo-list.component.html',\n  styleUrls: ['./tipo-list.component.scss']\n})\nexport class TipoListComponent extends BaseResourceListComponent<\nTipo,\nTipoResponse\n> {\nconstructor(\n  protected injector: Injector,\n  protected tipoService: TipoService\n) {\n  super(injector, tipoService);\n}\n}\n","import { BaseResourceModel } from \"app/shared/models/base-resource.model\";\n\nexport class Unidade extends BaseResourceModel {\n  constructor(public id?: number, public nome?: string) {\n    super();\n  }\n}\n\nexport class UnidadeResponse {\n  constructor(\n    public content?: Unidade[],\n    public totalElements?: number,\n    public size?: number,\n    public numberOfElements?: number\n  ) {}\n}\n\nexport class Tipo extends BaseResourceModel {\n  constructor(public id?: number, public descricao?: string) {\n    super();\n  }\n}\n\nexport class TipoResponse {\n  constructor(\n    public content?: Tipo[],\n    public totalElements?: number,\n    public size?: number,\n    public numberOfElements?: number\n  ) {}\n}\n\nexport class Servico extends BaseResourceModel {\n  constructor(\n    public id?: number,\n    public codigoSapItem?: string,\n    public descSapItem?: string,\n    public valorUnitario?: number,\n    public descServico?: string,\n    public tipoServico?: string,\n    public unidadeGrupoServico?: Unidade,\n    public tipoGrupoServico?: Tipo,\n    ) {\n    super();\n  }\n}\n\nexport class ServicoResponse {\n  constructor(\n    public content?: Servico[],\n    public totalElements?: number,\n    public size?: number,\n    public numberOfElements?: number\n  ) {}\n}\n","<div class=\"flex flex-col flex-auto min-w-0\">\n  <div class=\"flex-auto p-6 sm:p-10\">\n    <div class=\"bg-card rounded-2xl shadow overflow-hidden\">\n      <form [formGroup]=\"resourceForm\" class=\"m-4\">\n        <!-- Section -->\n        <div class=\"w-full\">\n          <div class=\"text-xl\">{{ pageTitle }}</div>\n        </div>\n        <div class=\"grid sm:grid-cols-4 gap-6 w-full mt-8\">\n          <!-- Name -->\n          <div class=\"sm:col-span-4\">\n            <mat-form-field class=\"fuse-mat-no-subscript w-full\">\n              <mat-label>Código Sap Item</mat-label>\n              <mat-icon class=\"icon-size-5\" [svgIcon]=\"'heroicons_outline:view-grid'\" matPrefix></mat-icon>\n              <input id=\"codigoSapItem\" [formControlName]=\"'codigoSapItem'\" matInput placeholder=\"informa o código sap item\" />\n            </mat-form-field>\n            <app-form-field-error [form-control]=\"resourceForm.get('codigoSapItem')\"></app-form-field-error>\n          </div>\n\n          <div class=\"sm:col-span-4\">\n            <mat-form-field class=\"fuse-mat-no-subscript w-full\">\n              <mat-label>Descrição Sap Item</mat-label>\n              <mat-icon class=\"icon-size-5\" [svgIcon]=\"'heroicons_outline:view-grid'\" matPrefix></mat-icon>\n              <input id=\"descSapItem\" [formControlName]=\"'descSapItem'\" matInput placeholder=\"informa o código sap item\" />\n            </mat-form-field>\n            <app-form-field-error [form-control]=\"resourceForm.get('descSapItem')\"></app-form-field-error>\n          </div>\n\n          <div class=\"sm:col-span-4\">\n            <mat-form-field class=\"fuse-mat-no-subscript w-full\">\n              <mat-label>Descrição Serviço</mat-label>\n              <mat-icon class=\"icon-size-5\" [svgIcon]=\"'heroicons_outline:view-grid'\" matPrefix></mat-icon>\n              <input id=\"descServico\" [formControlName]=\"'descServico'\" matInput placeholder=\"informa o código sap item\" />\n            </mat-form-field>\n            <app-form-field-error [form-control]=\"resourceForm.get('descServico')\"></app-form-field-error>\n          </div>\n\n          <div class=\"sm:col-span-4\">\n            <mat-form-field class=\"fuse-mat-no-subscript w-full\">\n              <mat-label>Tipo Grupo Serviço</mat-label>\n              <mat-select id=\"tipoGrupoServico\" formControlName=\"tipoGrupoServico\" [placeholder]=\"'Tipos Grupo Serviço'\">\n                <mat-option *ngFor=\"let tipoGrupoServico of tiposGrupoServicos\" [value]=\"tipoGrupoServico?.id\">{{ tipoGrupoServico.descricao }}\n                </mat-option>\n              </mat-select>\n              <mat-icon class=\"icon-size-5\" matPrefix [svgIcon]=\"'heroicons_outline:view-grid'\"></mat-icon>\n            </mat-form-field>\n            <app-form-field-error [form-control]=\"resourceForm.get('tipoGrupoServico')\"></app-form-field-error>\n          </div>\n\n          <div class=\"sm:col-span-4\">\n            <mat-form-field class=\"fuse-mat-no-subscript w-full\">\n              <mat-label>Tipo Serviço</mat-label>\n              <mat-icon class=\"icon-size-5\" [svgIcon]=\"'heroicons_outline:view-grid'\" matPrefix></mat-icon>\n              <input id=\"tipoServico\" [formControlName]=\"'tipoServico'\" matInput placeholder=\"informa o código sap item\" />\n            </mat-form-field>\n            <app-form-field-error [form-control]=\"resourceForm.get('tipoServico')\"></app-form-field-error>\n          </div>\n\n\n          <div class=\"sm:col-span-4\">\n            <mat-form-field class=\"fuse-mat-no-subscript w-full\">\n              <mat-label>Unidade Grupo Serviço</mat-label>\n              <mat-select id=\"tipoGrupoServico\" formControlName=\"unidadeGrupoServico\" [placeholder]=\"'Tipos Grupo Serviço'\">\n                <mat-option *ngFor=\"let unidadeGrupoServico of unidadeGrupoServicos\" [value]=\"unidadeGrupoServico?.id\">{{ unidadeGrupoServico.nome }}\n                </mat-option>\n              </mat-select>\n              <mat-icon class=\"icon-size-5\" matPrefix [svgIcon]=\"'heroicons_outline:view-grid'\"></mat-icon>\n            </mat-form-field>\n            <app-form-field-error [form-control]=\"resourceForm.get('unidadeGrupoServico')\"></app-form-field-error>\n          </div>\n\n          <div class=\"sm:col-span-4\">\n            <mat-form-field class=\"fuse-mat-no-subscript w-full\">\n              <mat-label>Valor Unitário</mat-label>\n              <mat-icon class=\"icon-size-5\" [svgIcon]=\"'heroicons_outline:view-grid'\" matPrefix></mat-icon>\n              <input id=\"valorUnitario\" [formControlName]=\"'valorUnitario'\" matInput placeholder=\"informa o código sap item\" />\n            </mat-form-field>\n            <app-form-field-error [form-control]=\"resourceForm.get('valorUnitario')\"></app-form-field-error>\n          </div>\n        </div>\n\n        <!-- Divider -->\n        <div class=\"mt-11 mb-10 border-t\"></div>\n\n        <!-- Actions -->\n        <div class=\"flex items-center justify-end\">\n          <a routerLink=\"/grupo/servico\" routerLinkActive=\"router-link-active\">\n            <button class=\"fuse-mat-button-rounded mat-flat-button mat-button-base\" mat-stroked-button type=\"button\">\n              Cancelar\n            </button>\n          </a>\n\n          <button class=\"ml-4 fuse-mat-button-rounded mat-flat-button mat-button-base mat-primary\" mat-flat-button\n            type=\"button\" [disabled]=\"resourceForm.invalid\" (click)=\"submitForm()\">\n            Salvar\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, Injector, OnInit } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { BaseResourceFormComponent } from 'app/shared/containers/base-resource-form';\nimport { IFilter } from 'app/shared/models/interface.model';\nimport { ServicoService } from '../../../api/servico.service';\nimport { TipoService } from '../../../api/tipo.service';\nimport { UnidadeService } from '../../../api/unidade.service';\nimport {\n  Servico,\n  ServicoResponse,\n  Tipo,\n  Unidade,\n} from '../../../models/grupo-servico.model';\nimport toastr from 'toastr';\n\n@Component({\n  selector: 'app-servico-form',\n  templateUrl: './servico-form.component.html',\n  styleUrls: ['./servico-form.component.scss'],\n})\nexport class ServicoFormComponent extends BaseResourceFormComponent<\n  Servico,\n  ServicoResponse\n> {\n  tiposGrupoServicos: Tipo[] = [];\n  unidadeGrupoServicos: Unidade[] = [];\n\n  constructor(\n    protected servicoService: ServicoService,\n    protected injector: Injector,\n    private _tipoService: TipoService,\n    private _unidadeService: UnidadeService\n  ) {\n    super(injector, new Servico(), servicoService);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    setTimeout(() => {\n      this.carregaAuxiliaresLista();\n    }, 1000);\n  }\n\n  protected buildResourceForm() {\n    this.resourceForm = this.formBuilder.group({\n      codigoSapItem: [null, [Validators.required, Validators.minLength(2)]],\n      descSapItem: [null, [Validators.required, Validators.minLength(2)]],\n      descServico: [null, [Validators.required, Validators.minLength(2)]],\n      tipoGrupoServico: [null, [Validators.required, Validators.minLength(2)]],\n      tipoServico: [null, [Validators.required, Validators.minLength(2)]],\n      unidadeGrupoServico: [\n        null,\n        [Validators.required, Validators.minLength(2)],\n      ],\n      valorUnitario: [null, [Validators.required, Validators.minLength(2)]],\n    });\n  }\n\n  protected createPageTitle(): string {\n    return 'Cadastro de Novo Servico';\n  }\n\n  protected editionPageTitle(): string {\n    const servicoNome = this.resource.codigoSapItem || '';\n    return 'Editando servico: ' + servicoNome;\n  }\n\n  // METHODS PRIVATE\n  carregaAuxiliaresLista(): void {\n    const filtro: IFilter = {\n      filtro: '',\n      pagina: 0,\n      direcaoOrdenacao: 'DESC',\n      tamanho: 40,\n      ordenarPor: 'id',\n    };\n\n    this._tipoService.getAll(filtro).subscribe(\n      (res) => {\n        this.tiposGrupoServicos = res.content;\n        this.resourceForm.patchValue({\n          tipoGrupoServico: this.resource.tipoGrupoServico.id,\n        });\n      },\n      (err) =>\n        toastr.error(\n          'Erro ao carregar lista de grupo de serviço!',\n          err.status,\n          {\n            timeOut: 10000,\n            progressBar: true,\n            closeButton: true,\n          }\n        )\n    );\n\n    this._unidadeService.getAll(filtro).subscribe(\n      (res) => {\n        this.unidadeGrupoServicos = res.content;\n        console.log(this.resource);\n        this.resourceForm.patchValue({\n          unidadeGrupoServico: this.resource.unidadeGrupoServico.id,\n        });\n      },\n      (err) =>\n        toastr.error(\n          'Erro ao carregar lista de unidade grupo de serviço!',\n          err.status,\n          {\n            timeOut: 10000,\n            progressBar: true,\n            closeButton: true,\n          }\n        )\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Route, RouterModule } from '@angular/router';\nimport { SharedModule } from 'app/shared/shared.module';\nimport { ServicoListComponent } from './containers/servico/servico-list/servico-list.component';\nimport { UnidadeListComponent } from './containers/unidade-list/unidade-list.component';\nimport { TipoListComponent } from './containers/tipo-list/tipo-list.component';\nimport { ServicoFormComponent } from './containers/servico/servico-form/servico-form.component';\n\nconst routes: Route[] = [\n  { path: 'servico', component: ServicoListComponent },\n  { path: 'servico/novo', component: ServicoFormComponent },\n  { path: 'servico/:id/editar', component: ServicoFormComponent },\n\n  { path: 'unidade', component: UnidadeListComponent },\n  { path: 'tipo', component: TipoListComponent },\n];\n\n@NgModule({\n  declarations: [\n    ServicoListComponent,\n    UnidadeListComponent,\n    TipoListComponent,\n    ServicoFormComponent,\n  ],\n  imports: [CommonModule, RouterModule.forChild(routes), SharedModule],\n})\nexport class GrupoServicoModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found-data',\n  templateUrl: './not-found-data.component.html',\n  styleUrls: ['./not-found-data.component.scss'],\n})\nexport class NotFoundDataComponent {\n  @Input('mensagem') mensagem: string;\n}\n","<div class=\"flex flex-col w-full h-full items-center justify-center border-t-2 border-gray-200\">\n  <img src=\"assets/icons/searching.svg\" class=\"w-64 h-64\" alt=\"\">\n  <p class=\"mt-2 text-lg md:text-2xl font-medium tracking-tight text-center text-secondary\">{{ mensagem }}</p>\n</div>\n","<div\n  class=\"relative flex flex-col flx-col-0 sm:flex-row flex-0 sm:items-center sm:justify-between py-8 px-6 md:px-8 border-b\">\n  <div class=\"text-4xl font-extrabold tracking-tight\">{{ pageTitle }}</div>\n\n  <div class=\"flex flex-col sm:flex-row items-start shrink-0 sm:items-center mt-6 sm:mt-0 sm:ml-4\">\n    <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded min-w-64\" *ngIf=\"showSearch\">\n      <mat-icon class=\"icon-size-5\" matPrefix [svgIcon]=\"'heroicons_solid:search'\"></mat-icon>\n      <input matInput id=\"searchPerfil\" #temoPesquisa (keyup)=\"filtrar(temoPesquisa.value)\" [autocomplete]=\"'off'\"\n        [placeholder]=\"placeholder\" />\n    </mat-form-field>\n    <!-- Add product button -->\n    <a [routerLink]=\"['novo']\" routerLinkActive=\"router-link-active\" *ngIf=\"showButton\"\n      class=\"mat-focus-indicator mt-2 fuse-mat-button-rounded mat-flat-button mat-button-base mat-accent m-1 text-1xl\"\n      mat-flat-button>\n      <span class=\"p-3 flex flex-row items-center\">\n        <mat-icon class=\"icon-size-5\" [svgIcon]=\"'heroicons_outline:plus'\"></mat-icon>\n        Cadastrar\n      </span>\n    </a>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-page-header',\n  templateUrl: './page-header.component.html',\n  styleUrls: ['./page-header.component.scss'],\n})\nexport class PageHeaderComponent implements OnInit {\n  @Input('page-title') pageTitle: string = '';\n  @Input('show-button') showButton: boolean = true;\n  @Input('show-search') showSearch: boolean = true;\n  @Input('placeholder-text') placeholder: string = '';\n\n  @Output() pesquisar = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  filtrar(termo: string): void {\n    this.pesquisar.emit(termo);\n  }\n}\n","export enum EEventosLocais {\n  CARREGAMENTO_DADOS_API = 'carregamento-dados-api',\n}\n","import {\n  AfterContentChecked,\n  Component,\n  EventEmitter,\n  Inject,\n  Injector,\n  OnInit,\n} from '@angular/core';\nimport { FormBuilder, UntypedFormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport toastr from 'toastr';\n\nimport { BaseResourceModel } from 'app/shared/models/base-resource.model';\nimport { BaseResourceService } from 'app/shared/services/base-resource.service';\nimport { EEventosLocais } from 'app/shared/models/eventos.enum';\n\n@Component({\n  template: '',\n})\nexport abstract class BaseResourceFormComponent<T extends BaseResourceModel, R>\n  implements OnInit, AfterContentChecked\n{\n  currentAction: string;\n  resourceForm: UntypedFormGroup;\n  pageTitle: string;\n\n  protected route: ActivatedRoute;\n  protected router: Router;\n  protected formBuilder: FormBuilder;\n\n  carregamentoDeDados = new EventEmitter()\n\n  constructor(\n    protected injecto: Injector,\n    @Inject('resource') protected resource: T,\n    protected resourceService: BaseResourceService<T, R>\n  ) {\n    this.route = this.injecto.get(ActivatedRoute);\n    this.router = this.injecto.get(Router);\n    this.formBuilder = this.injecto.get(FormBuilder);\n  }\n\n  ngOnInit(): void {\n    this.setCurrentAction();\n    this.buildResourceForm();\n    this.loadResource();\n  }\n\n  ngAfterContentChecked(): void {\n    this.setPageTitle();\n  }\n\n  submitForm() {\n    if (this.resourceForm.invalid) {\n      return;\n    }\n\n    const resource: T = this.resourceForm.value;\n    if (this.currentAction === 'novo') {\n      this.resourceService.insert(resource).subscribe(\n        () => {\n          toastr.success('Dado cadastrado com sucesso!', 'Sucesso', {\n            timeOut: 10000,\n            progressBar: true,\n            closeButton: true,\n          });\n          const baseComponentPath: string =\n            this.route.snapshot.parent.url[0].path;\n\n          this.router.navigate([baseComponentPath]);\n        },\n        (error) => {\n          toastr.error(\n            'Não foi possível carregar os dados',\n            error.error.error,\n            {\n              timeOut: 10000,\n              progressBar: true,\n              closeButton: true,\n            }\n          );\n        }\n      );\n      return;\n    }\n\n    resource.id = this.resource.id;\n    this.resourceService.update(resource).subscribe(\n      () => {\n        toastr.success('Dado atualizado com sucesso!', 'Sucesso', {\n          timeOut: 10000,\n          progressBar: true,\n          closeButton: true,\n        });\n        const baseComponentPath: string =\n          this.route.snapshot.parent.url[0].path;\n\n        this.router.navigate([baseComponentPath]);\n      },\n      (error) => {\n        toastr.error('Não foi possível atualizar o dado', error.error.error, {\n          timeOut: 10000,\n          progressBar: true,\n          closeButton: true,\n        });\n      }\n    );\n  }\n\n  // PRIVATE METHODS\n  protected setCurrentAction() {\n    if (this.route.snapshot.url[this.route.snapshot.url.length - 1]?.path === 'novo') {\n      this.currentAction = 'novo';\n    } else {\n      this.currentAction = 'editar';\n    }\n  }\n\n  protected loadResource() {\n    if (this.currentAction === 'editar') {\n      const idResource = Number(\n        this.route.snapshot.url[this.route.snapshot.url.length - 2]?.path\n      );\n      this.resourceService.getById(idResource).subscribe(\n        (resource) => {\n          this.resource = resource;\n          this.resourceForm.patchValue(this.resource);\n          this.carregamentoDeDados.emit(EEventosLocais.CARREGAMENTO_DADOS_API)\n        },\n        (error) => {\n          toastr.error(\n            'Não foi possível carregar os dados',\n            error.error.error,\n            {\n              timeOut: 10000,\n              progressBar: true,\n              closeButton: true,\n            }\n          );\n        }\n      );\n    }\n  }\n\n  protected setPageTitle() {\n    if (this.currentAction === 'novo') {\n      this.pageTitle = this.createPageTitle();\n    } else {\n      this.pageTitle = this.editionPageTitle();\n    }\n  }\n\n  protected createPageTitle(): string {\n    return 'Novo';\n  }\n\n  protected editionPageTitle(): string {\n    return 'Edição';\n  }\n\n  protected abstract buildResourceForm(): void;\n}\n","import { Injectable } from '@angular/core';\nimport { AuthUtils } from 'app/core/auth/auth.utils';\nimport { ELocalStorage } from '../models/localstorage.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RulesService {\n  constructor() {}\n\n  temPermissao(rule: string): boolean {\n    const token = localStorage.getItem(ELocalStorage.TOKEN);\n    if (!token) {\n      return false;\n    }\n\n    const { ROLES } = AuthUtils.decodeToken(token);\n\n    if (Object(ROLES).find((permissao) => permissao == rule)) {\n      return true;\n    }\n\n    return false;\n  }\n}\n","import { Component, Injector, OnInit } from '@angular/core';\nimport { MatPaginatorIntl, PageEvent } from '@angular/material/paginator';\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\nimport { BaseResourceModel } from 'app/shared/models/base-resource.model';\nimport { IFilter } from 'app/shared/models/interface.model';\nimport { BaseResourceService } from 'app/shared/services/base-resource.service';\nimport { RulesService } from 'app/shared/services/rules.service';\nimport toastr from 'toastr';\n\n@Component({\n  template: '',\n})\nexport abstract class BaseResourceListComponent<T extends BaseResourceModel, R>\n  implements OnInit\n{\n  resources: T[] = [];\n\n  // MatPaginator Inputs\n  length = 0;\n  pageSize = 10;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n\n  // MatPaginator Output\n  pageEvent: PageEvent;\n  protected _fuseConfirmationService: FuseConfirmationService;\n  protected _matPaginatorIntl: MatPaginatorIntl;\n  protected _ruleService: RulesService;\n\n  constructor(\n    protected injecto: Injector,\n    protected resourceService: BaseResourceService<T, R>\n  ) {\n    this._fuseConfirmationService = this.injecto.get(FuseConfirmationService);\n    this._matPaginatorIntl = this.injecto.get(MatPaginatorIntl);\n    this._ruleService = this.injecto.get(RulesService);\n  }\n\n  ngOnInit(): void {\n    this.carregaInformacoesResource();\n    this._matPaginatorIntl.itemsPerPageLabel = 'Itens por página';\n  }\n\n  setPageSizeOptions(setPageSizeOptionsInput: string) {\n    if (setPageSizeOptionsInput) {\n      this.pageSizeOptions = setPageSizeOptionsInput\n        .split(',')\n        .map((str) => +str);\n    }\n  }\n\n  carregaInformacoesResource(): void {\n    const filtro: IFilter = {\n      filtro: '',\n      pagina: 0,\n      direcaoOrdenacao: 'DESC',\n      tamanho: 10,\n      ordenarPor: 'id',\n    };\n    this.resourceService.getAll(filtro).subscribe((data) => {\n      this.resources = data['content'];\n      this.length = data['totalElements'];\n      this.pageSize = data['size'];\n    });\n  }\n\n  excluir(resource: T): void {\n    const dialogRef = this._fuseConfirmationService.open({\n      title: `Deseja realmente excluir o item: ${resource.id}?`,\n      message: '',\n      icon: {\n        show: true,\n        name: 'heroicons_outline:exclamation',\n        color: 'warn',\n      },\n      actions: {\n        confirm: {\n          show: true,\n          label: 'Confirmar',\n          color: 'warn',\n        },\n        cancel: {\n          show: true,\n          label: 'Cancelar',\n        },\n      },\n      dismissible: false,\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result === 'confirmed') {\n        this.resourceService.delete(resource.id).subscribe(\n          (res) => {\n            toastr.success(`Item excluído com sucesso!`, '', {\n              timeOut: 10000,\n              progressBar: true,\n              closeButton: true,\n            });\n            this.carregaInformacoesResource();\n          },\n          (error) => {\n            toastr.error(\n              'Não foi possível excluir o perfil',\n              error.error.error,\n              {\n                timeOut: 10000,\n                progressBar: true,\n                closeButton: true,\n              }\n            );\n          }\n        );\n      }\n    });\n  }\n\n  paginacao(event: Event): void {\n    this.pageSize = event['pageSize'];\n    const filtro: IFilter = {\n      filtro: '',\n      pagina: event['pageIndex'],\n      direcaoOrdenacao: 'DESC',\n      tamanho: this.pageSize,\n      ordenarPor: 'id',\n    };\n\n    this.resourceService.getAll(filtro).subscribe((data) => {\n      this.resources = data['content'];\n      this.length = data['totalElements'];\n      this.pageSize = data['size'];\n    });\n  }\n\n  filtrarResource(termo: string): void {\n    const filtro: IFilter = {\n      filtro: termo,\n      pagina: 0,\n      direcaoOrdenacao: 'DESC',\n      tamanho: 10,\n      ordenarPor: 'id',\n    };\n    this.resourceService.getAll(filtro).subscribe((data) => {\n      this.resources = data['content'];\n      this.length = data['totalElements'];\n      this.pageSize = data['size'];\n    });\n  }\n\n  validaPermissao(rule: string): boolean {\n    return this._ruleService.temPermissao(rule);\n  }\n}\n","export abstract class BaseResourceModel {\n  id?: number;\n}\n"],"x_google_ignoreList":[]}